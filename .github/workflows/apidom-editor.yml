# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: ApiDOM Editor

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.8.x]

    steps:
    - uses: tibdex/github-app-token@v1
      id: generate-token
      with:
        app_id: ${{ secrets.APP_ID }}
        private_key: ${{ secrets.APP_PRIVATE_KEY }}
    - uses: actions/checkout@v2
      with:
        submodules: recursive
        token: ${{ steps.generate-token.outputs.token }}
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache npm cache files
      id: cache-npm-cache-files
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: npm-cache-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
    - name: Cache Node Modules
      id: cache-node-modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: node-modules-${{ hashFiles('package-lock.json') }}
    - name: Cache Cypress binary
      id: cache-cypress-binary
      uses: actions/cache@v2
      with:
        path: cypress/cache
        key: cypress-binary-${{ hashFiles('package-lock.json') }}
    - name: Install dependencies for apidom core
      if: |
          steps.cache-npm-cache-files.cache-hit != 'true' ||
          steps.cache-node-modules.cache-hit != 'true'
      run: npm ci
      working-directory: ./apidom/apidom
    - name: Build apidom core
      run: npm run build
      working-directory: ./apidom/apidom
    - name: Mark apidom core as built
      run: touch apidom-built
    - name: Install dependencies
      if: |
          steps.cache-npm-cache-files.cache-hit != 'true' ||
          steps.cache-node-modules.cache-hit != 'true' ||
          steps.cache-cypress-binary.outputs.cache-hit != 'true'
      run: npm ci
    - name: Security audit
      # filtering production deps only supported on >=npm@6.10.0
      if: startsWith(matrix.node-version, '16')
      run: echo 'Currenty disabled run of "npm run security-audit"'
      env:
        CI: true
    - name: Unit tests
      run: npm test --watchAll=false
      env:
        CI: true
    # - name: E2E Tests - chrome headless
    #   id: cypress-run-ci
    #   uses: cypress-io/github-action@v2
    #   with:
    #     # we have already installed all dependencies above
    #     install: false
    #     browser: chrome
    #     wait-on: "http://localhost:3260"
    #     wait-on-timeout: 120
    #     headless: true
    #     start: npm run start-ci
    - name: Build app artifacts
      run: npm run build

  deploy:
    name: Deploy to Docker

    if: github.ref == 'refs/heads/main'

    needs: [ build ]

    runs-on: ubuntu-latest

    steps:
    - name: Download built artifact from build job
      uses: actions/download-artifact@v2
    - name: Log in to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_SB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_SB_PASSWORD }}
    - name: Build docker image and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: smartbear/swagger-ide:latest
