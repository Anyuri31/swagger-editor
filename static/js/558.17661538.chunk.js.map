{"version":3,"file":"static/js/558.17661538.chunk.js","mappings":"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B,EAAMpX,GACpB,GAAuB,kBAAZ7K,EAAsB,CAC/B,IAAM8xB,EAAYD,EAAkB7xB,GAChC8xB,IAAc9xB,IAEXkwB,EAASjO,KACZA,EAAMpX,GAAKinB,GAGb9xB,EAAU8xB,EAEb,CAED50B,EAAI8C,IAAW,CAChB,CAED,OAAO9C,CACR,CAGM,SAAS60B,EAAMC,GACpB,IAEI/L,EAFEgM,EAAYzd,EAAO,MAGpByR,IAAAA,KAAY+L,EACX7Y,EAAMxP,EAAgBqoB,EAAQ,CAAC/L,MACjCgM,EAAUhM,GAAY+L,EAAO/L,IAIjC,OAAOgM,CACR,CAMD,SAASC,EAAaF,EAAQ5Y,GACrB4Y,KAAW,OAAXA,GAAiB,CACtB,IAAMG,EAAO/B,EAAyB4B,EAAQ5Y,GAC9C,GAAI+Y,EAAM,CACJA,GAAAA,EAAKC,IACP,OAAOtB,EAAQqB,EAAKC,KAGtB,GAA0B,oBAAfD,EAAKnwB,MACd,OAAO8uB,EAAQqB,EAAKnwB,MAEvB,CAEDgwB,EAAS7B,EAAe6B,EACzB,CAEQK,SAAAA,EAAcryB,GAErB,OADAkL,QAAQC,KAAK,qBAAsBnL,GAC5B,IACR,CAED,OAAOqyB,CACR,CChIM,IAAMtrB,EAAOspB,EAAO,CACzB,IACA,OACA,UACA,UACA,OACA,UACA,QACA,QACA,IACA,MACA,MACA,MACA,QACA,aACA,OACA,KACA,SACA,SACA,UACA,SACA,OACA,OACA,MACA,WACA,UACA,OACA,WACA,KACA,YACA,MACA,UACA,MACA,SACA,MACA,MACA,KACA,KACA,UACA,KACA,WACA,aACA,SACA,OACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,IACA,MACA,QACA,MACA,MACA,QACA,SACA,KACA,OACA,MACA,OACA,UACA,OACA,WACA,QACA,MACA,OACA,KACA,WACA,SACA,SACA,IACA,UACA,MACA,WACA,IACA,KACA,KACA,OACA,IACA,OACA,UACA,SACA,SACA,QACA,SACA,SACA,OACA,SACA,SACA,QACA,MACA,UACA,MACA,QACA,QACA,KACA,WACA,WACA,QACA,KACA,QACA,OACA,KACA,QACA,KACA,IACA,KACA,MACA,QACA,QAIWiC,EAAMjC,EAAO,CACxB,MACA,IACA,WACA,cACA,eACA,eACA,gBACA,mBACA,SACA,WACA,OACA,OACA,UACA,SACA,OACA,IACA,QACA,WACA,QACA,QACA,OACA,iBACA,SACA,OACA,WACA,QACA,OACA,UACA,UACA,WACA,iBACA,OACA,OACA,QACA,SACA,SACA,OACA,WACA,QACA,OACA,QACA,OACA,UAGWkC,EAAalC,EAAO,CAC/B,UACA,gBACA,sBACA,cACA,mBACA,oBACA,oBACA,iBACA,UACA,UACA,UACA,UACA,UACA,iBACA,UACA,UACA,cACA,eACA,WACA,eACA,qBACA,cACA,SACA,iBAOWmC,EAAgBnC,EAAO,CAClC,UACA,gBACA,SACA,UACA,eACA,YACA,mBACA,iBACA,gBACA,gBACA,gBACA,QACA,YACA,OACA,eACA,YACA,UACA,gBACA,SACA,MACA,aACA,UACA,QAGWoC,EAASpC,EAAO,CAC3B,OACA,WACA,SACA,UACA,QACA,SACA,KACA,aACA,gBACA,KACA,KACA,QACA,UACA,WACA,QACA,OACA,KACA,SACA,QACA,SACA,OACA,OACA,UACA,SACA,MACA,QACA,MACA,SACA,eAKWqC,EAAmBrC,EAAO,CACrC,UACA,cACA,aACA,WACA,YACA,UACA,UACA,SACA,SACA,QACA,YACA,aACA,iBACA,cACA,SAGWzkB,EAAOykB,EAAO,CAAC,UCpRftpB,EAAOspB,EAAO,CACzB,SACA,SACA,QACA,MACA,iBACA,eACA,uBACA,WACA,aACA,UACA,SACA,UACA,cACA,cACA,UACA,OACA,QACA,QACA,QACA,OACA,UACA,WACA,eACA,SACA,cACA,WACA,WACA,UACA,MACA,WACA,0BACA,wBACA,WACA,YACA,UACA,eACA,OACA,MACA,UACA,SACA,SACA,OACA,OACA,WACA,KACA,YACA,YACA,QACA,OACA,QACA,OACA,OACA,UACA,OACA,MACA,MACA,YACA,QACA,SACA,MACA,YACA,WACA,QACA,OACA,QACA,UACA,aACA,SACA,OACA,UACA,UACA,cACA,cACA,SACA,UACA,UACA,aACA,WACA,MACA,WACA,MACA,WACA,OACA,OACA,UACA,aACA,QACA,WACA,QACA,OACA,QACA,OACA,UACA,QACA,MACA,SACA,OACA,QACA,UACA,WACA,QACA,YACA,OACA,SACA,SACA,QACA,QACA,QACA,SAGWiC,EAAMjC,EAAO,CACxB,gBACA,aACA,WACA,qBACA,SACA,gBACA,gBACA,UACA,gBACA,iBACA,QACA,OACA,KACA,QACA,OACA,gBACA,YACA,YACA,QACA,sBACA,8BACA,gBACA,kBACA,KACA,KACA,IACA,KACA,KACA,kBACA,YACA,UACA,UACA,MACA,WACA,YACA,MACA,OACA,eACA,YACA,SACA,cACA,cACA,gBACA,cACA,YACA,mBACA,eACA,aACA,eACA,cACA,KACA,KACA,KACA,KACA,aACA,WACA,gBACA,oBACA,SACA,OACA,KACA,kBACA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,UACA,YACA,aACA,WACA,OACA,eACA,iBACA,eACA,mBACA,iBACA,QACA,aACA,aACA,eACA,eACA,cACA,cACA,mBACA,YACA,MACA,OACA,QACA,SACA,OACA,MACA,OACA,aACA,SACA,WACA,UACA,QACA,SACA,cACA,SACA,WACA,cACA,OACA,aACA,sBACA,mBACA,eACA,SACA,gBACA,sBACA,iBACA,IACA,KACA,KACA,SACA,OACA,OACA,cACA,YACA,UACA,SACA,SACA,QACA,OACA,kBACA,mBACA,mBACA,eACA,cACA,eACA,cACA,aACA,eACA,mBACA,oBACA,iBACA,kBACA,oBACA,iBACA,SACA,eACA,QACA,eACA,iBACA,WACA,UACA,UACA,YACA,mBACA,cACA,kBACA,iBACA,aACA,OACA,KACA,KACA,UACA,SACA,UACA,aACA,UACA,aACA,gBACA,gBACA,QACA,eACA,OACA,eACA,mBACA,mBACA,IACA,KACA,KA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","sources":["../node_modules/@asyncapi/react-component/src/helpers/specification.ts","../node_modules/@asyncapi/react-component/src/config/default.ts","../node_modules/use-resize-observer/dist/bundle.esm.js","../node_modules/@asyncapi/react-component/src/components/CollapseButton.tsx","../node_modules/@asyncapi/react-component/src/contexts/useSpec.ts","../node_modules/@asyncapi/react-component/src/containers/Sidebar/Sidebar.tsx","../node_modules/@asyncapi/react-component/src/components/Href.tsx","../node_modules/marked/lib/marked.esm.js","../node_modules/@asyncapi/react-component/src/helpers/marked.ts","../node_modules/@asyncapi/react-component/src/components/Markdown.tsx","../node_modules/@asyncapi/react-component/src/components/Tag.tsx","../node_modules/@asyncapi/react-component/src/components/Tags.tsx","../node_modules/@asyncapi/react-component/src/constants.ts","../node_modules/@asyncapi/react-component/src/containers/Info/Info.tsx","../node_modules/@asyncapi/react-component/src/helpers/server.ts","../node_modules/@asyncapi/react-component/src/containers/Servers/Security.tsx","../node_modules/@asyncapi/react-component/src/helpers/schema.ts","../node_modules/@asyncapi/react-component/src/components/Extensions.tsx","../node_modules/@asyncapi/react-component/src/components/Schema.tsx","../node_modules/@asyncapi/react-component/src/components/Bindings.tsx","../node_modules/@asyncapi/react-component/src/contexts/useConfig.ts","../node_modules/@asyncapi/react-component/src/helpers/common.ts","../node_modules/@asyncapi/react-component/src/containers/Servers/Server.tsx","../node_modules/@asyncapi/react-component/src/containers/Servers/Servers.tsx","../node_modules/@asyncapi/react-component/src/components/JSONSnippet.tsx","../node_modules/openapi-sampler/src/utils.js","../node_modules/openapi-sampler/src/infer.js","../node_modules/openapi-sampler/src/traverse.js","../node_modules/openapi-sampler/src/allOf.js","../node_modules/openapi-sampler/src/samplers/number.js","../node_modules/openapi-sampler/src/samplers/string.js","../node_modules/openapi-sampler/src/openapi-sampler.js","../node_modules/openapi-sampler/src/samplers/array.js","../node_modules/openapi-sampler/src/samplers/boolean.js","../node_modules/openapi-sampler/src/samplers/object.js","../node_modules/@asyncapi/react-component/src/helpers/message.ts","../node_modules/@asyncapi/react-component/src/types.ts","../node_modules/@asyncapi/react-component/src/containers/Messages/MessageExample.tsx","../node_modules/@asyncapi/react-component/src/containers/Messages/Message.tsx","../node_modules/@asyncapi/react-component/src/containers/Operations/Operation.tsx","../node_modules/@asyncapi/react-component/src/containers/Operations/Operations.tsx","../node_modules/@asyncapi/react-component/src/containers/Messages/Messages.tsx","../node_modules/@asyncapi/react-component/src/containers/Schemas/Schema.tsx","../node_modules/@asyncapi/react-component/src/containers/Schemas/Schemas.tsx","../node_modules/@asyncapi/react-component/src/containers/Error/Error.tsx","../node_modules/@asyncapi/react-component/src/containers/AsyncApi/Layout.tsx","../node_modules/@asyncapi/react-component/src/containers/AsyncApi/Standalone.tsx","../node_modules/@asyncapi/react-component/src/without-parser.ts","../node_modules/dompurify/src/utils.js","../node_modules/dompurify/src/tags.js","../node_modules/dompurify/src/attrs.js","../node_modules/dompurify/src/regexp.js","../node_modules/dompurify/src/purify.js","../node_modules/foreach/index.js","../node_modules/isomorphic-dompurify/browser.js","../node_modules/json-pointer/index.js"],"sourcesContent":["import { AsyncAPIDocument, Tag } from '@asyncapi/parser';\n// @ts-ignore\nimport AsyncAPIDocumentModel from '@asyncapi/parser/lib/models/asyncapi';\n\nexport class SpecificationHelpers {\n  /**\n   * Returns parsed AsyncAPI specification.\n   */\n  static retrieveParsedSpec(schema: any): AsyncAPIDocument | undefined {\n    if (!schema) {\n      return undefined;\n    }\n\n    // check if schema is an instance of AsyncAPIDocument (model from AsyncAPI Parser)\n    if (schema.constructor && schema.constructor.name === 'AsyncAPIDocument') {\n      return schema as AsyncAPIDocument;\n    }\n\n    // then check if schema is an instance of AsyncAPIDocument (model from AsyncAPI Parser)\n    // this check is used for security in case of code mangling (unification)\n    if (\n      typeof schema.version === 'function' &&\n      schema._json &&\n      schema._json.asyncapi\n    ) {\n      return schema as AsyncAPIDocument;\n    }\n\n    // check if input is a string and try parse it\n    if (typeof schema === 'string') {\n      try {\n        schema = JSON.parse(schema);\n      } catch (e) {\n        return undefined;\n      }\n    }\n\n    // at the end check if schema is a parsed JS object (as output from AsyncAPI Parser)\n    if (typeof schema === 'object' && schema['x-parser-spec-parsed'] === true) {\n      // if schema is stringified by `AsyncAPIDocument.stringify` function\n      if (schema['x-parser-spec-stringified'] === true) {\n        return AsyncAPIDocumentModel.parse(schema);\n      }\n      return new AsyncAPIDocumentModel(schema);\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Check if given schema have one of the specified tags.\n   */\n  static containTags(schema: any, tags: Tag | Tag[]): boolean {\n    const tagsToCheck =\n      typeof schema.tags === 'function' ? schema.tags() : undefined;\n    if (tagsToCheck === undefined || !Array.isArray(tagsToCheck)) {\n      return false;\n    }\n    tags = Array.isArray(tags) ? tags : [tags];\n    return tagsToCheck.some((tag: Tag) =>\n      (tags as Tag[]).some(t => t.name() === tag.name()),\n    );\n  }\n\n  /**\n   * Return all tags from operations\n   */\n  static operationsTags(spec: AsyncAPIDocument) {\n    const tags = new Map<string, Tag>();\n    Object.entries(spec.channels()).forEach(([_, channel]) => {\n      const publish = channel.publish();\n      if (publish && publish.hasTags()) {\n        publish.tags().forEach(tag => tags.set(tag.name(), tag));\n      }\n      const subscribe = channel.subscribe();\n      if (subscribe && subscribe.hasTags()) {\n        subscribe.tags().forEach(tag => tags.set(tag.name(), tag));\n      }\n    });\n    return Array.from(tags.values());\n  }\n}\n","import { ConfigInterface } from './config';\n\nexport const defaultConfig: ConfigInterface = {\n  schemaID: '',\n  show: {\n    sidebar: false,\n    info: true,\n    servers: true,\n    operations: true,\n    messages: true,\n    schemas: true,\n    errors: true,\n  },\n  sidebar: {\n    showOperations: 'byOperationsTags',\n  },\n};\n","import { useRef, useState, useEffect, useCallback, useMemo } from 'react';\n\n// This of course could've been more streamlined with internal state instead of\n// refs, but then host hooks / components could not opt out of renders.\n// This could've been exported to its own module, but the current build doesn't\n// seem to work with module imports and I had no more time to spend on this...\nfunction useResolvedElement(subscriber, refOrElement) {\n  var callbackRefElement = useRef(null);\n  var lastReportRef = useRef(null);\n  var cleanupRef = useRef();\n  var callSubscriber = useCallback(function () {\n    var element = null;\n\n    if (callbackRefElement.current) {\n      element = callbackRefElement.current;\n    } else if (refOrElement) {\n      if (refOrElement instanceof HTMLElement) {\n        element = refOrElement;\n      } else {\n        element = refOrElement.current;\n      }\n    }\n\n    if (lastReportRef.current && lastReportRef.current.element === element && lastReportRef.current.reporter === callSubscriber) {\n      return;\n    }\n\n    if (cleanupRef.current) {\n      cleanupRef.current(); // Making sure the cleanup is not called accidentally multiple times.\n\n      cleanupRef.current = null;\n    }\n\n    lastReportRef.current = {\n      reporter: callSubscriber,\n      element: element\n    }; // Only calling the subscriber, if there's an actual element to report.\n\n    if (element) {\n      cleanupRef.current = subscriber(element);\n    }\n  }, [refOrElement, subscriber]); // On each render, we check whether a ref changed, or if we got a new raw\n  // element.\n\n  useEffect(function () {\n    // With this we're *technically* supporting cases where ref objects' current value changes, but only if there's a\n    // render accompanying that change as well.\n    // To guarantee we always have the right element, one must use the ref callback provided instead, but we support\n    // RefObjects to make the hook API more convenient in certain cases.\n    callSubscriber();\n  }, [callSubscriber]);\n  return useCallback(function (element) {\n    callbackRefElement.current = element;\n    callSubscriber();\n  }, [callSubscriber]);\n}\n\n// We're only using the first element of the size sequences, until future versions of the spec solidify on how\n// exactly it'll be used for fragments in multi-column scenarios:\n// From the spec:\n// > The box size properties are exposed as FrozenArray in order to support elements that have multiple fragments,\n// > which occur in multi-column scenarios. However the current definitions of content rect and border box do not\n// > mention how those boxes are affected by multi-column layout. In this spec, there will only be a single\n// > ResizeObserverSize returned in the FrozenArray, which will correspond to the dimensions of the first column.\n// > A future version of this spec will extend the returned FrozenArray to contain the per-fragment size information.\n// (https://drafts.csswg.org/resize-observer/#resize-observer-entry-interface)\n//\n// Also, testing these new box options revealed that in both Chrome and FF everything is returned in the callback,\n// regardless of the \"box\" option.\n// The spec states the following on this:\n// > This does not have any impact on which box dimensions are returned to the defined callback when the event\n// > is fired, it solely defines which box the author wishes to observe layout changes on.\n// (https://drafts.csswg.org/resize-observer/#resize-observer-interface)\n// I'm not exactly clear on what this means, especially when you consider a later section stating the following:\n// > This section is non-normative. An author may desire to observe more than one CSS box.\n// > In this case, author will need to use multiple ResizeObservers.\n// (https://drafts.csswg.org/resize-observer/#resize-observer-interface)\n// Which is clearly not how current browser implementations behave, and seems to contradict the previous quote.\n// For this reason I decided to only return the requested size,\n// even though it seems we have access to results for all box types.\n// This also means that we get to keep the current api, being able to return a simple { width, height } pair,\n// regardless of box option.\nvar extractSize = function extractSize(entry, boxProp, sizeType) {\n  if (!entry[boxProp]) {\n    if (boxProp === \"contentBoxSize\") {\n      // The dimensions in `contentBoxSize` and `contentRect` are equivalent according to the spec.\n      // See the 6th step in the description for the RO algorithm:\n      // https://drafts.csswg.org/resize-observer/#create-and-populate-resizeobserverentry-h\n      // > Set this.contentRect to logical this.contentBoxSize given target and observedBox of \"content-box\".\n      // In real browser implementations of course these objects differ, but the width/height values should be equivalent.\n      return entry.contentRect[sizeType === \"inlineSize\" ? \"width\" : \"height\"];\n    }\n\n    return undefined;\n  } // A couple bytes smaller than calling Array.isArray() and just as effective here.\n\n\n  return entry[boxProp][0] ? entry[boxProp][0][sizeType] : // TS complains about this, because the RO entry type follows the spec and does not reflect Firefox's current\n  // behaviour of returning objects instead of arrays for `borderBoxSize` and `contentBoxSize`.\n  // @ts-ignore\n  entry[boxProp][sizeType];\n};\n\nfunction useResizeObserver(opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  // Saving the callback as a ref. With this, I don't need to put onResize in the\n  // effect dep array, and just passing in an anonymous function without memoising\n  // will not reinstantiate the hook's ResizeObserver.\n  var onResize = opts.onResize;\n  var onResizeRef = useRef(undefined);\n  onResizeRef.current = onResize;\n  var round = opts.round || Math.round; // Using a single instance throughout the hook's lifetime\n\n  var resizeObserverRef = useRef();\n\n  var _useState = useState({\n    width: undefined,\n    height: undefined\n  }),\n      size = _useState[0],\n      setSize = _useState[1]; // In certain edge cases the RO might want to report a size change just after\n  // the component unmounted.\n\n\n  var didUnmount = useRef(false);\n  useEffect(function () {\n    return function () {\n      didUnmount.current = true;\n    };\n  }, []); // Using a ref to track the previous width / height to avoid unnecessary renders.\n\n  var previous = useRef({\n    width: undefined,\n    height: undefined\n  }); // This block is kinda like a useEffect, only it's called whenever a new\n  // element could be resolved based on the ref option. It also has a cleanup\n  // function.\n\n  var refCallback = useResolvedElement(useCallback(function (element) {\n    // We only use a single Resize Observer instance, and we're instantiating it on demand, only once there's something to observe.\n    // This instance is also recreated when the `box` option changes, so that a new observation is fired if there was a previously observed element with a different box option.\n    if (!resizeObserverRef.current || resizeObserverRef.current.box !== opts.box || resizeObserverRef.current.round !== round) {\n      resizeObserverRef.current = {\n        box: opts.box,\n        round: round,\n        instance: new ResizeObserver(function (entries) {\n          var entry = entries[0];\n          var boxProp = opts.box === \"border-box\" ? \"borderBoxSize\" : opts.box === \"device-pixel-content-box\" ? \"devicePixelContentBoxSize\" : \"contentBoxSize\";\n          var reportedWidth = extractSize(entry, boxProp, \"inlineSize\");\n          var reportedHeight = extractSize(entry, boxProp, \"blockSize\");\n          var newWidth = reportedWidth ? round(reportedWidth) : undefined;\n          var newHeight = reportedHeight ? round(reportedHeight) : undefined;\n\n          if (previous.current.width !== newWidth || previous.current.height !== newHeight) {\n            var newSize = {\n              width: newWidth,\n              height: newHeight\n            };\n            previous.current.width = newWidth;\n            previous.current.height = newHeight;\n\n            if (onResizeRef.current) {\n              onResizeRef.current(newSize);\n            } else {\n              if (!didUnmount.current) {\n                setSize(newSize);\n              }\n            }\n          }\n        })\n      };\n    }\n\n    resizeObserverRef.current.instance.observe(element, {\n      box: opts.box\n    });\n    return function () {\n      if (resizeObserverRef.current) {\n        resizeObserverRef.current.instance.unobserve(element);\n      }\n    };\n  }, [opts.box, round]), opts.ref);\n  return useMemo(function () {\n    return {\n      ref: refCallback,\n      width: size.width,\n      height: size.height\n    };\n  }, [refCallback, size ? size.width : null, size ? size.height : null]);\n}\n\nexport { useResizeObserver as default };\n","import React, { ButtonHTMLAttributes, SVGAttributes } from 'react';\n\ninterface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\n  chevronProps?: SVGAttributes<SVGElement>;\n}\n\nexport const CollapseButton: React.FunctionComponent<Props> = ({\n  chevronProps,\n  children,\n  ...rest\n}) => (\n  <button {...rest} className={`focus:outline-none ${rest.className}`}>\n    {children}\n    <svg\n      version=\"1.1\"\n      viewBox=\"0 0 24 24\"\n      x=\"0\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      y=\"0\"\n      {...chevronProps}\n      className={`inline-block align-baseline cursor-pointer -mb-1 w-5 transform transition-transform duration-150 ease-linear ${chevronProps?.className ||\n        ''}`}\n    >\n      <polygon points=\"17.3 8.3 12 13.6 6.7 8.3 5.3 9.7 12 16.4 18.7 9.7 \" />\n    </svg>\n  </button>\n);\n","import React, { useContext } from 'react';\nimport { AsyncAPIDocument } from '@asyncapi/parser';\n\nexport const SpecificationContext = React.createContext<AsyncAPIDocument>(\n  null as any,\n);\n\nexport function useSpec() {\n  return useContext(SpecificationContext);\n}\n","import React, { useState, useContext } from 'react';\nimport { Tag } from '@asyncapi/parser';\n\nimport { CollapseButton } from '../../components';\nimport { SideBarConfig } from '../../config/config';\nimport { useSpec } from '../../contexts';\nimport { SpecificationHelpers } from '../../helpers';\n\nconst SidebarContext = React.createContext<{\n  setShowSidebar: React.Dispatch<React.SetStateAction<boolean>>;\n}>({\n  setShowSidebar: (value: boolean | ((prevValue: boolean) => boolean)) => value,\n});\n\ninterface Props {\n  config?: SideBarConfig;\n}\n\nexport const Sidebar: React.FunctionComponent<Props> = ({ config }) => {\n  const [showSidebar, setShowSidebar] = useState(false);\n\n  const showOperations = config?.showOperations || 'byDefault';\n  const asyncapi = useSpec();\n\n  const info = asyncapi.info();\n  const logo = info.ext('x-logo');\n  const components = asyncapi.hasComponents() && asyncapi.components();\n  const messages = components && components.messages();\n  const schemas = components && components.schemas();\n\n  let Operations = OperationsList;\n  if (showOperations === 'bySpecTags') {\n    Operations = OperationsByRootTags;\n  } else if (showOperations === 'byOperationsTags') {\n    Operations = OperationsByOperationsTags;\n  }\n\n  const messagesList = messages && Object.keys(messages).length > 0 && (\n    <li className=\"mb-3 mt-9\">\n      <a\n        className=\"text-xs uppercase text-gray-700 mt-10 mb-4 font-thin hover:text-gray-900\"\n        href=\"#messages\"\n        onClick={() => setShowSidebar(false)}\n      >\n        Messages\n      </a>\n      <ul className=\"text-sm mt-2\">\n        {Object.entries(messages).map(([messageName, message]) => (\n          <li key={messageName}>\n            <a\n              className=\"flex break-words no-underline text-gray-700 mt-2 hover:text-gray-900\"\n              href={`#message-${messageName}`}\n              onClick={() => setShowSidebar(false)}\n            >\n              <div className=\"break-all inline-block\">{message.uid()}</div>\n            </a>\n          </li>\n        ))}\n      </ul>\n    </li>\n  );\n\n  const schemasList = schemas && Object.keys(schemas).length > 0 && (\n    <li className=\"mb-3 mt-9\">\n      <a\n        className=\"text-xs uppercase text-gray-700 mt-10 mb-4 font-thin hover:text-gray-900\"\n        href=\"#schemas\"\n        onClick={() => setShowSidebar(false)}\n      >\n        Schemas\n      </a>\n      <ul className=\"text-sm mt-2\">\n        {Object.keys(schemas).map(schemaName => (\n          <li key={schemaName}>\n            <a\n              className=\"flex break-words no-underline text-gray-700 mt-2 hover:text-gray-900\"\n              href={`#schema-${schemaName}`}\n              onClick={() => setShowSidebar(false)}\n            >\n              <div className=\"break-all inline-block\">{schemaName}</div>\n            </a>\n          </li>\n        ))}\n      </ul>\n    </li>\n  );\n\n  return (\n    <SidebarContext.Provider value={{ setShowSidebar }}>\n      <div\n        className=\"burger-menu rounded-full h-16 w-16 bg-white fixed bottom-16 right-8 flex items-center justify-center z-30 cursor-pointer shadow-md bg-teal-500\"\n        onClick={() => setShowSidebar(prev => !prev)}\n        data-lol={showSidebar}\n      >\n        <svg\n          viewBox=\"0 0 100 70\"\n          width=\"40\"\n          height=\"30\"\n          className=\"fill-current text-gray-200\"\n        >\n          <rect width=\"100\" height=\"10\" />\n          <rect y=\"30\" width=\"100\" height=\"10\" />\n          <rect y=\"60\" width=\"100\" height=\"10\" />\n        </svg>\n      </div>\n      <div\n        className={`${\n          showSidebar ? 'block fixed w-full' : 'hidden'\n        } sidebar relative w-64 max-h-screen h-full bg-gray-200 shadow z-20`}\n        // className={`${\n        //   showSidebar ? 'block fixed w-full' : 'hidden'\n        // } sidebar bg-gray-200 font-sans font-light px-4 py-8 z-20 shadow overflow-auto`}\n      >\n        <div\n          className={`${\n            showSidebar ? 'w-full' : ''\n          } block fixed max-h-screen h-full font-sans px-4 pt-8 pb-16 overflow-y-auto bg-gray-200`}\n        >\n          <div className=\"sidebar--content\">\n            <div>\n              {logo ? (\n                <img\n                  src={logo}\n                  alt={`${info.title()} logo, ${info.version()} version`}\n                />\n              ) : (\n                <h1 className=\"text-2xl font-light\">\n                  {info.title()} {info.version()}\n                </h1>\n              )}\n            </div>\n\n            <ul className=\"text-sm mt-10 relative\">\n              <li className=\"mb-3\">\n                <a\n                  className=\"text-gray-700 no-underline hover:text-gray-900\"\n                  href=\"#introduction\"\n                  onClick={() => setShowSidebar(false)}\n                >\n                  Introduction\n                </a>\n              </li>\n              {asyncapi.hasServers() && (\n                <li className=\"mb-3\">\n                  <a\n                    className=\"text-gray-700 no-underline hover:text-gray-900\"\n                    href=\"#servers\"\n                    onClick={() => setShowSidebar(false)}\n                  >\n                    Servers\n                  </a>\n                </li>\n              )}\n              {asyncapi.hasChannels() && (\n                <>\n                  <li className=\"mb-3 mt-9\">\n                    <a\n                      className=\"text-xs uppercase text-gray-700 mt-10 mb-4 font-thin hover:text-gray-900\"\n                      href=\"#operations\"\n                      onClick={() => setShowSidebar(false)}\n                    >\n                      Operations\n                    </a>\n                    <Operations />\n                  </li>\n                  {messagesList}\n                  {schemasList}\n                </>\n              )}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </SidebarContext.Provider>\n  );\n};\n\nexport const OperationsList: React.FunctionComponent = () => {\n  const asyncapi = useSpec();\n  const channels = asyncapi.channels();\n\n  const operationsList: React.ReactNodeArray = [];\n  Object.entries(channels).forEach(([channelName, channel]) => {\n    if (channel.hasPublish()) {\n      operationsList.push(\n        <OperationsPubItem\n          channelName={channelName}\n          key={`pub-${channelName}`}\n        />,\n      );\n    }\n    if (channel.hasSubscribe()) {\n      operationsList.push(\n        <OperationsSubItem\n          channelName={channelName}\n          key={`sub-${channelName}`}\n        />,\n      );\n    }\n  });\n\n  return <ul className=\"text-sm mt-2\">{operationsList}</ul>;\n};\n\nexport const OperationsByRootTags: React.FunctionComponent = () => {\n  const asyncapi = useSpec();\n  const channels = asyncapi.channels();\n  const tags = asyncapi.tags();\n\n  const taggedOperations = (tag: Tag) => {\n    const operationsList: React.ReactNodeArray = [];\n    Object.entries(channels).forEach(([channelName, channel]) => {\n      if (\n        channel.hasPublish() &&\n        SpecificationHelpers.containTags(channel.publish(), tag)\n      ) {\n        operationsList.push(\n          <OperationsPubItem\n            channelName={channelName}\n            key={`pub-${channelName}`}\n          />,\n        );\n      }\n      if (\n        channel.hasSubscribe() &&\n        SpecificationHelpers.containTags(channel.subscribe(), tag)\n      ) {\n        operationsList.push(\n          <OperationsSubItem\n            channelName={channelName}\n            key={`sub-${channelName}`}\n          />,\n        );\n      }\n    });\n    return operationsList;\n  };\n\n  const untaggedOperations: React.ReactNodeArray = [];\n  Object.entries(channels).forEach(([channelName, channel]) => {\n    if (\n      channel.hasPublish() &&\n      (!channel.publish().hasTags() ||\n        !SpecificationHelpers.containTags(channel.publish(), tags))\n    ) {\n      untaggedOperations.push(\n        <OperationsPubItem\n          channelName={channelName}\n          key={`pub-${channelName}`}\n        />,\n      );\n    }\n    if (\n      channel.hasSubscribe() &&\n      (!channel.subscribe().hasTags() ||\n        !SpecificationHelpers.containTags(channel.subscribe(), tags))\n    ) {\n      untaggedOperations.push(\n        <OperationsSubItem\n          channelName={channelName}\n          key={`sub-${channelName}`}\n        />,\n      );\n    }\n  });\n\n  return (\n    <div>\n      <ul>\n        {tags &&\n          tags.map(tag => {\n            const ops = taggedOperations(tag);\n            return (\n              ops.length > 0 && (\n                <li key={tag.name()}>\n                  <OperationsByTagItem tagName={tag.name()}>\n                    {taggedOperations(tag)}\n                  </OperationsByTagItem>\n                </li>\n              )\n            );\n          })}\n        {untaggedOperations.length > 0 && (\n          <li>\n            <OperationsByTagItem tagName=\"Untagged\">\n              {untaggedOperations}\n            </OperationsByTagItem>\n          </li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport const OperationsByOperationsTags: React.FunctionComponent = () => {\n  const asyncapi = useSpec();\n  const channels = asyncapi.channels();\n  const operationsTags = SpecificationHelpers.operationsTags(asyncapi);\n\n  const taggedOperations = (tag: Tag) => {\n    const operationsList: React.ReactNodeArray = [];\n    Object.entries(channels).forEach(([channelName, channel]) => {\n      if (\n        channel.hasPublish() &&\n        SpecificationHelpers.containTags(channel.publish(), tag)\n      ) {\n        operationsList.push(\n          <OperationsPubItem\n            channelName={channelName}\n            key={`pub-${channelName}`}\n          />,\n        );\n      }\n      if (\n        channel.hasSubscribe() &&\n        SpecificationHelpers.containTags(channel.subscribe(), tag)\n      ) {\n        operationsList.push(\n          <OperationsSubItem\n            channelName={channelName}\n            key={`sub-${channelName}`}\n          />,\n        );\n      }\n    });\n    return operationsList;\n  };\n\n  const untaggedOperations: React.ReactNodeArray = [];\n  Object.entries(channels).forEach(([channelName, channel]) => {\n    if (\n      channel.hasPublish() &&\n      (!channel.publish().hasTags() ||\n        !SpecificationHelpers.containTags(channel.publish(), operationsTags))\n    ) {\n      untaggedOperations.push(\n        <OperationsPubItem\n          channelName={channelName}\n          key={`pub-${channelName}`}\n        />,\n      );\n    }\n    if (\n      channel.hasSubscribe() &&\n      (!channel.subscribe().hasTags() ||\n        !SpecificationHelpers.containTags(channel.subscribe(), operationsTags))\n    ) {\n      untaggedOperations.push(\n        <OperationsSubItem\n          channelName={channelName}\n          key={`sub-${channelName}`}\n        />,\n      );\n    }\n  });\n\n  return (\n    <div>\n      <ul>\n        {operationsTags &&\n          operationsTags.map(tag => {\n            const ops = taggedOperations(tag);\n            return (\n              ops.length > 0 && (\n                <li key={tag.name()}>\n                  <OperationsByTagItem tagName={tag.name()}>\n                    {taggedOperations(tag)}\n                  </OperationsByTagItem>\n                </li>\n              )\n            );\n          })}\n        {untaggedOperations.length > 0 && (\n          <li>\n            <OperationsByTagItem tagName=\"Untagged\">\n              {untaggedOperations}\n            </OperationsByTagItem>\n          </li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\ninterface OperationsByTagItemProps {\n  tagName: string;\n}\n\nconst OperationsByTagItem: React.FunctionComponent<OperationsByTagItemProps> = ({\n  tagName,\n  children,\n}) => {\n  const [expand, setExpand] = useState(false);\n\n  return (\n    <div>\n      <CollapseButton\n        onClick={() => setExpand(prev => !prev)}\n        chevronProps={{\n          className: expand ? '-rotate-180' : '-rotate-90',\n        }}\n      >\n        <span className=\"text-sm inline-block mt-1 font-extralight\">\n          {tagName}\n        </span>\n      </CollapseButton>\n      <ul className={`${expand ? 'block' : 'hidden'} text-sm mt-2 font-light`}>\n        {children}\n      </ul>\n    </div>\n  );\n};\n\ninterface OperationsPubItemProps {\n  channelName: string;\n}\n\nconst OperationsPubItem: React.FunctionComponent<OperationsPubItemProps> = ({\n  channelName,\n}) => {\n  const { setShowSidebar } = useContext(SidebarContext);\n\n  return (\n    <li>\n      <a\n        className=\"flex no-underline text-gray-700 mb-2 hover:text-gray-900\"\n        href={`#operation-publish-${channelName}`}\n        onClick={() => setShowSidebar(false)}\n      >\n        <span\n          className=\"bg-blue-600 font-bold h-6 no-underline text-white uppercase p-1 mr-2 rounded text-xs\"\n          title=\"Publish\"\n        >\n          Pub\n        </span>\n        <span className=\"break-all inline-block\">{channelName}</span>\n      </a>\n    </li>\n  );\n};\n\nconst OperationsSubItem: React.FunctionComponent<OperationsPubItemProps> = ({\n  channelName,\n}) => {\n  const { setShowSidebar } = useContext(SidebarContext);\n\n  return (\n    <li>\n      <a\n        className=\"flex no-underline text-gray-700 mb-2 hover:text-gray-900\"\n        href={`#operation-subscribe-${channelName}`}\n        onClick={() => setShowSidebar(false)}\n      >\n        <span\n          className=\"bg-green-600 font-bold h-6 no-underline text-white uppercase p-1 mr-2 rounded text-xs\"\n          title=\"Subscribe\"\n        >\n          SUB\n        </span>\n        <span className=\"break-all inline-block\">{channelName}</span>\n      </a>\n    </li>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  href: string;\n  title?: string;\n  className?: string;\n}\n\nexport const Href: React.FunctionComponent<Props> = ({\n  href,\n  title,\n  className,\n  children,\n}) => (\n  <a\n    href={href}\n    title={title}\n    className={className}\n    target=\"_blank\"\n    rel=\"nofollow noopener noreferrer\"\n  >\n    {children}\n  </a>\n);\n","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2022, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\nfunction getDefaults() {\n  return {\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nlet defaults = getDefaults();\n\nfunction changeDefaults(newDefaults) {\n  defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = /[&<>\"']/g;\nconst escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nconst escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n/**\n * @param {string} html\n */\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\n\n/**\n * @param {string | RegExp} regex\n * @param {string} opt\n */\nfunction edit(regex, opt) {\n  regex = typeof regex === 'string' ? regex : regex.source;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n/**\n * @param {boolean} sanitize\n * @param {string} base\n * @param {string} href\n */\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n/**\n * @param {string} base\n * @param {string} href\n */\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction merge(obj) {\n  let i = 1,\n    target,\n    key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) { cells.shift(); }\n  if (cells.length > 0 && !cells[cells.length - 1].trim()) { cells.pop(); }\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param {string} str\n * @param {string} c\n * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.slice(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\n/**\n * @param {string} pattern\n * @param {number} count\n */\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text, [])\n    };\n    lexer.state.inLink = false;\n    return token;\n  }\n  return {\n    type: 'image',\n    raw,\n    href,\n    title,\n    text: escape(text)\n  };\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nclass Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim() : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      const token = {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: []\n      };\n      this.lexer.inline(token.text, token.tokens);\n      return token;\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens: this.lexer.blockTokens(text, []),\n        text\n      };\n    }\n  }\n\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine,\n        line, nextLine, rawLine, itemContents, endEarly;\n\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        line = cap[2].split('\\n', 1)[0];\n        nextLine = src.split('\\n', 1)[0];\n\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        blankLine = false;\n\n        if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?: [^\\\\n]*)?(?:\\\\n|$))`);\n          const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n          const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n          const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            rawLine = src.split('\\n', 1)[0];\n            line = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n\n            // End list item if found code fences\n            if (fencesBeginRegex.test(line)) {\n              break;\n            }\n\n            // End list item if found start of new heading\n            if (headingBeginRegex.test(line)) {\n              break;\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(line)) {\n              break;\n            }\n\n            // Horizontal rule found\n            if (hrRegex.test(src)) {\n              break;\n            }\n\n            if (line.search(/[^ ]/) >= indent || !line.trim()) { // Dedent if possible\n              itemContents += '\\n' + line.slice(indent);\n            } else if (!blankLine) { // Until blank line, item doesn't need indentation\n              itemContents += '\\n' + line;\n            } else { // Otherwise, improper indentation ends this item\n              break;\n            }\n\n            if (!blankLine && !line.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n\n      const l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n        const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n        const hasMultipleLineBreaks = spacers.every(t => {\n          const chars = t.raw.split('');\n          let lineBreaks = 0;\n          for (const char of chars) {\n            if (char === '\\n') {\n              lineBreaks += 1;\n            }\n            if (lineBreaks > 1) {\n              return true;\n            }\n          }\n\n          return false;\n        });\n\n        if (!list.loose && spacers.length && hasMultipleLineBreaks) {\n          // Having a single line break doesn't mean a list is loose. A single line break is terminating the last list item\n          list.loose = true;\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        token.type = 'paragraph';\n        token.text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.tokens = [];\n        this.lexer.inline(token.text, token.tokens);\n      }\n      return token;\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href: cap[2],\n        title: cap[3]\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(c => { return { text: c }; }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => { return { text: c }; });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = [];\n          this.lexer.inline(item.header[j].text, item.header[j].tokens);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = [];\n            this.lexer.inline(row[k].text, row[k].tokens);\n          }\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      const token = {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: []\n      };\n      this.lexer.inline(token.text, token.tokens);\n      return token;\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const token = {\n        type: 'paragraph',\n        raw: cap[0],\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1],\n        tokens: []\n      };\n      this.lexer.inline(token.text, token.tokens);\n      return token;\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      const token = {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: []\n      };\n      this.lexer.inline(token.text, token.tokens);\n      return token;\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link || !link.href) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || (nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = src.slice(1, lLength + match.index + rLength);\n          return {\n            type: 'em',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text,\n            tokens: this.lexer.inlineTokens(text, [])\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = src.slice(2, lLength + match.index + rLength - 1);\n        return {\n          type: 'strong',\n          raw: src.slice(0, lLength + match.index + rLength + 1),\n          text,\n          tokens: this.lexer.inlineTokens(text, [])\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2], [])\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?<?([^\\s>]+)>?(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n});\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n  nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //          () Skip orphan inside strong  () Consume to delim (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /^[^_*]*?\\_\\_[^_*]*?\\*[^_*]*?(?=\\_\\_)|[^*]+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?\\_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\ninline.escapedEmSt = /\\\\\\*|\\\\_/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim)\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.nolink = edit(inline.nolink)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\n/**\n * smartypants text replacement\n * @param {string} text\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n * @param {string} text\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nclass Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n');\n\n    this.blockTokens(src, this.tokens);\n\n    let next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n    } else {\n      src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n        return leading + '    '.repeat(tabs.length);\n      });\n    }\n\n    let token, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.length === 1 && tokens.length > 0) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unecessary paragraph tags\n          tokens[tokens.length - 1].raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src, tokens) {\n    this.inlineQueue.push({ src, tokens });\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang, true)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  /**\n   * @param {string} quote\n   */\n  blockquote(quote) {\n    return `<blockquote>\\n${quote}</blockquote>\\n`;\n  }\n\n  html(html) {\n    return html;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} level\n   * @param {string} raw\n   * @param {any} slugger\n   */\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      const id = this.options.headerPrefix + slugger.slug(raw);\n      return `<h${level} id=\"${id}\">${text}</h${level}>\\n`;\n    }\n\n    // ignore IDs\n    return `<h${level}>${text}</h${level}>\\n`;\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  /**\n   * @param {string} text\n   */\n  listitem(text) {\n    return `<li>${text}</li>\\n`;\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  /**\n   * @param {string} text\n   */\n  paragraph(text) {\n    return `<p>${text}</p>\\n`;\n  }\n\n  /**\n   * @param {string} header\n   * @param {string} body\n   */\n  table(header, body) {\n    if (body) body = `<tbody>${body}</tbody>`;\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  /**\n   * @param {string} content\n   */\n  tablerow(content) {\n    return `<tr>\\n${content}</tr>\\n`;\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? `<${type} align=\"${flags.align}\">`\n      : `<${type}>`;\n    return tag + content + `</${type}>\\n`;\n  }\n\n  /**\n   * span level renderer\n   * @param {string} text\n   */\n  strong(text) {\n    return `<strong>${text}</strong>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  em(text) {\n    return `<em>${text}</em>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  codespan(text) {\n    return `<code>${text}</code>`;\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  /**\n   * @param {string} text\n   */\n  del(text) {\n    return `<del>${text}</del>`;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + escape(href) + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${title}\"`;\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n\n/**\n * Slugger generates header id\n */\nclass Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * @param {string} value\n   */\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   * @param {string} originalSlug\n   * @param {boolean} isDryRun\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} [options]\n   * @param {boolean} [options.dryrun] Generates the next unique slug without\n   * updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.header[j].tokens),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.rows.length;\n          for (j = 0; j < l2; j++) {\n            row = token.rows[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k].tokens),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (typeof opt === 'function') {\n    callback = opt;\n    opt = null;\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  if (callback) {\n    const highlight = opt.highlight;\n    let tokens;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    const done = function(err) {\n      let out;\n\n      if (!err) {\n        try {\n          if (opt.walkTokens) {\n            marked.walkTokens(tokens, opt.walkTokens);\n          }\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!tokens.length) return done();\n\n    let pending = 0;\n    marked.walkTokens(tokens, function(token) {\n      if (token.type === 'code') {\n        pending++;\n        setTimeout(() => {\n          highlight(token.text, token.lang, function(err, code) {\n            if (err) {\n              return done(err);\n            }\n            if (code != null && code !== token.text) {\n              token.text = code;\n              token.escaped = true;\n            }\n\n            pending--;\n            if (pending === 0) {\n              done();\n            }\n          });\n        }, 0);\n      }\n    });\n\n    if (pending === 0) {\n      done();\n    }\n\n    return;\n  }\n\n  try {\n    const tokens = Lexer.lex(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parse(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  const opts = merge({}, ...args);\n  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };\n  let hasExtensions;\n\n  args.forEach((pack) => {\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      hasExtensions = true;\n      pack.extensions.forEach((ext) => {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) { // Renderer extensions\n          const prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function(...args) {\n              let ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) { // Tokenizer Extensions\n          if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) { // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) { // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      const renderer = marked.defaults.renderer || new Renderer();\n      for (const prop in pack.renderer) {\n        const prevRenderer = renderer[prop];\n        // Replace renderer with func to run extension, but fall back if false\n        renderer[prop] = (...args) => {\n          let ret = pack.renderer[prop].apply(renderer, args);\n          if (ret === false) {\n            ret = prevRenderer.apply(renderer, args);\n          }\n          return ret;\n        };\n      }\n      opts.renderer = renderer;\n    }\n    if (pack.tokenizer) {\n      const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n      for (const prop in pack.tokenizer) {\n        const prevTokenizer = tokenizer[prop];\n        // Replace tokenizer with func to run extension, but fall back if false\n        tokenizer[prop] = (...args) => {\n          let ret = pack.tokenizer[prop].apply(tokenizer, args);\n          if (ret === false) {\n            ret = prevTokenizer.apply(tokenizer, args);\n          }\n          return ret;\n        };\n      }\n      opts.tokenizer = tokenizer;\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      const walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function(token) {\n        pack.walkTokens.call(this, token);\n        if (walkTokens) {\n          walkTokens.call(this, token);\n        }\n      };\n    }\n\n    if (hasExtensions) {\n      opts.extensions = extensions;\n    }\n\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  for (const token of tokens) {\n    callback.call(marked, token);\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.header) {\n          marked.walkTokens(cell.tokens, callback);\n        }\n        for (const row of token.rows) {\n          for (const cell of row) {\n            marked.walkTokens(cell.tokens, callback);\n          }\n        }\n        break;\n      }\n      case 'list': {\n        marked.walkTokens(token.items, callback);\n        break;\n      }\n      default: {\n        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n            marked.walkTokens(token[childTokens], callback);\n          });\n        } else if (token.tokens) {\n          marked.walkTokens(token.tokens, callback);\n        }\n      }\n    }\n  }\n};\n\n/**\n * Parse Inline\n * @param {string} src\n */\nmarked.parseInline = function(src, opt) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked.parseInline(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked.parseInline(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  try {\n    const tokens = Lexer.lexInline(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parseInline(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n};\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.parse = marked;\n\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = Parser.parse;\nconst lexer = Lexer.lex;\n\nexport { Lexer, Parser, Renderer, Slugger, TextRenderer, Tokenizer, defaults, getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n","import { marked } from 'marked';\n\n// @ts-ignore\nimport hljs from 'highlight.js/lib/core';\n\n// @ts-ignore\nimport json from 'highlight.js/lib/languages/json';\nhljs.registerLanguage('json', json);\n\n// @ts-ignore\nimport yaml from 'highlight.js/lib/languages/yaml';\nhljs.registerLanguage('yaml', yaml);\n\n// @ts-ignore\nimport bash from 'highlight.js/lib/languages/bash';\nhljs.registerLanguage('bash', bash);\n\nconst markedOptions: marked.MarkedOptions = {\n  langPrefix: 'hljs language-',\n  highlight: (code, language) => {\n    if (!hljs.getLanguage(language)) {\n      return code;\n    }\n    try {\n      return hljs.highlight(code, { language }).value;\n    } catch (e) {\n      return code;\n    }\n  },\n};\n\nexport function renderMarkdown(content: string): string {\n  return marked(content, markedOptions);\n}\n\nexport { hljs };\n","import React from 'react';\nimport { sanitize } from 'isomorphic-dompurify';\n\nimport { renderMarkdown } from '../helpers';\n\nexport const Markdown: React.FunctionComponent = ({ children }) => {\n  if (!children) {\n    return null;\n  }\n  if (typeof children !== 'string') {\n    return <>{children}</>;\n  }\n\n  return (\n    <div\n      className=\"prose max-w-none text-sm\"\n      dangerouslySetInnerHTML={{ __html: sanitize(renderMarkdown(children)) }}\n    />\n  );\n};\n","import React from 'react';\nimport { Tag as TagType } from '@asyncapi/parser';\n\nimport { Href } from './Href';\n\ninterface Props {\n  tag: TagType;\n}\n\nexport const Tag: React.FunctionComponent<Props> = ({ tag }) => {\n  const name = `#${tag.name()}`;\n  const description = tag.description() || '';\n  const externalDocs = tag.externalDocs();\n\n  const element = (\n    <div\n      title={description}\n      className=\"border border-solid border-blue-300 hover:bg-blue-300 hover:text-blue-600 text-blue-500 font-bold no-underline text-xs rounded px-3 py-1\"\n    >\n      <span className={externalDocs ? 'underline' : ''}>{name}</span>\n    </div>\n  );\n\n  if (externalDocs) {\n    return (\n      <Href href={externalDocs.url()} title={description}>\n        {element}\n      </Href>\n    );\n  }\n  return element;\n};\n","import React from 'react';\nimport { Tag as TagType } from '@asyncapi/parser';\n\nimport { Tag } from './Tag';\n\ninterface Props {\n  tags?: TagType[];\n}\n\nexport const Tags: React.FunctionComponent<Props> = ({ tags }) => {\n  if (!tags || !tags.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"flex flex-wrap leading-normal\">\n      {tags.map(tag => (\n        <li className=\"inline-block mt-2 mr-2\" key={tag.name()}>\n          <Tag tag={tag} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","export const CSS_PREFIX = 'asyncapi';\nexport const CONTENT_TYPES_SITE =\n  'https://www.iana.org/assignments/media-types';\nexport const COLLAPSE_ALL_TEXT = 'Collapse All';\nexport const EXPAND_ALL_TEXT = 'Expand All';\n\nexport const VALIDATION_ERRORS_TYPE =\n  'https://github.com/asyncapi/parser-js/validation-errors';\nexport const SERVERS = 'Servers';\n\nexport const ONE_OF_PAYLOADS_TEXT = 'One of those payloads:';\nexport const ANY_OF_PAYLOADS_TEXT = 'Any of those payloads:';\nexport const GENERATED_BADGE_TEXT = 'generated';\nexport const ONE_OF_FOLLOWING_MESSAGES_PUBLISH_TEXT =\n  'You can send one of the following messages:';\nexport const ONE_OF_FOLLOWING_MESSAGES_PUBLISH_SINGLE_TEXT =\n  'You can send the following message:';\nexport const ONE_OF_FOLLOWING_MESSAGES_SUBSCRIBE_TEXT =\n  'You can subscribe to one of the following messages:';\nexport const ONE_OF_FOLLOWING_MESSAGES_SUBSCRIBE_SINGLE_TEXT =\n  'You can subscribe to the following message:';\n\nexport const CONTACT_TEXT = 'Contact';\nexport const NAM_TEXTE = 'Name';\nexport const URL_TEXT = 'Url';\nexport const EMAIL_TEXT = 'Email';\nexport const LICENSE_TEXT = 'License';\nexport const TERMS_OF_SERVICE_TEXT = 'Terms of service';\nexport const URL_SUPPORT_TEXT = 'Support';\nexport const EMAIL_SUPPORT_TEXT = 'Email support';\nexport const EXTERAL_DOCUMENTATION_TEXT = 'External Docs';\nexport const LOCATION_TEXT = 'Location';\nexport const TYPE_TEXT = 'Type';\nexport const SPECIFICATION_TEXT = 'Specification';\n\nexport const DEPRECATED_TEXT = 'Deprecated';\nexport const PUBLISH_TEXT = 'Publish';\nexport const SUBSCRIBE_TEXT = 'Subscribe';\nexport const REQUIRED_TEXT = 'Required';\nexport const GENERATED_TEXT = 'Generated';\n\nexport const SERVERS_TEXT = 'Servers';\nexport const OPERATIONS_TEXT = 'Operations';\nexport const MESSAGES_TEXT = 'Messages';\nexport const SCHEMAS_TEXT = 'Schemas';\n\nexport const CHANNELS_TEXT = 'Channels';\nexport const PARAMETERS_TEXT = 'Parameters';\nexport const HEADERS_TEXT = 'Headers';\nexport const MESSAGE_HEADERS_TEXT = 'Message Headers';\nexport const HEADERS_EXAMPLE_TEXT = 'Example of headers';\nexport const TAGS_TEXT = 'Tags';\nexport const PAYLOAD_TEXT = 'Payload';\nexport const MESSAGE_PAYLOAD_TEXT = 'Message Payload';\nexport const PAYLOAD_EXAMPLE_TEXT = 'Example of payload';\nexport const SCHEMA_EXAMPLE_TEXT = 'Example';\n\nexport const NONE_TEXT = 'None';\nexport const ANY_TEXT = 'Any';\nexport const ERROR_TEXT = 'Error';\nexport const EXPAND_ERROR_BUTTON_TEXT = 'Expand';\nexport const COLLAPSE_ERROR_BUTTON_TEXT = 'Collapse';\n\nexport const SECURITY_TEXT = 'Security';\n\nexport const URL_VARIABLES_TEXT = 'URL Variables';\n","import React from 'react';\n\nimport { Href, Markdown, Tags } from '../../components';\nimport { useSpec } from '../../contexts';\n\nimport {\n  TERMS_OF_SERVICE_TEXT,\n  CONTENT_TYPES_SITE,\n  URL_SUPPORT_TEXT,\n  EXTERAL_DOCUMENTATION_TEXT,\n} from '../../constants';\n\nexport const Info: React.FunctionComponent = () => {\n  const asyncapi = useSpec();\n\n  const info = asyncapi.info();\n  if (!info) {\n    return null;\n  }\n\n  const specId = asyncapi.id();\n  const externalDocs = asyncapi.externalDocs();\n  const license = info.license();\n  const termsOfService = info.termsOfService();\n  const defaultContentType = asyncapi.defaultContentType();\n  const contact = info.contact();\n\n  const showInfoList =\n    license || termsOfService || defaultContentType || contact || externalDocs;\n\n  return (\n    <div className=\"panel-item\">\n      <div className=\"panel-item--center px-8 text-left\" id=\"introduction\">\n        <div className=\"text-4xl\">\n          {info.title()}&nbsp;{info.version()}\n        </div>\n\n        {showInfoList && (\n          <ul className=\"flex flex-wrap mt-2 leading-normal\">\n            {license && (\n              <li className=\"inline-block mt-2 mr-2\">\n                {license.url() ? (\n                  <Href\n                    className=\"border border-solid border-orange-300 hover:bg-orange-300 hover:text-orange-600 text-orange-500 font-bold no-underline text-xs uppercase rounded px-3 py-1\"\n                    href={license.url()}\n                  >\n                    <span>{license.name()}</span>\n                  </Href>\n                ) : (\n                  <span className=\"border border-solid border-orange-300 hover:bg-orange-300 hover:text-orange-600 text-orange-500 font-bold no-underline text-xs uppercase rounded px-3 py-1\">\n                    {license.name()}\n                  </span>\n                )}\n              </li>\n            )}\n            {termsOfService && (\n              <li className=\"inline-block mt-2 mr-2\">\n                <Href\n                  className=\"border border-solid border-orange-300 hover:bg-orange-300 hover:text-orange-600 text-orange-500 font-bold no-underline text-xs uppercase rounded px-3 py-1\"\n                  href={termsOfService}\n                >\n                  <span>{TERMS_OF_SERVICE_TEXT}</span>\n                </Href>\n              </li>\n            )}\n            {defaultContentType && (\n              <li className=\"inline-block mt-2 mr-2\">\n                <Href\n                  className=\"border border-solid border-orange-300 hover:bg-orange-300 hover:text-orange-600 text-orange-500 font-bold no-underline text-xs uppercase rounded px-3 py-1\"\n                  href={`${CONTENT_TYPES_SITE}/${defaultContentType}`}\n                >\n                  <span>{defaultContentType}</span>\n                </Href>\n              </li>\n            )}\n            {externalDocs && (\n              <li className=\"inline-block mt-2 mr-2\">\n                <Href\n                  className=\"border border-solid border-orange-300 hover:bg-orange-300 hover:text-orange-600 text-orange-500 font-bold no-underline text-xs uppercase rounded px-3 py-1\"\n                  href={externalDocs.url()}\n                >\n                  <span>{EXTERAL_DOCUMENTATION_TEXT}</span>\n                </Href>\n              </li>\n            )}\n            {contact && (\n              <>\n                {contact.url() && (\n                  <li className=\"inline-block mt-2 mr-2\">\n                    <Href\n                      className=\"border border-solid border-purple-300 hover:bg-purple-300 hover:text-purple-600 text-purple-500 font-bold no-underline text-xs uppercase rounded px-3 py-1\"\n                      href={contact.url()}\n                    >\n                      <span>{contact.name() || URL_SUPPORT_TEXT}</span>\n                    </Href>\n                  </li>\n                )}\n                {contact.email() && (\n                  <li className=\"inline-block mt-2 mr-2\">\n                    <Href\n                      className=\"border border-solid border-purple-300 hover:bg-purple-300 hover:text-purple-600 text-purple-500 font-bold no-underline text-xs uppercase rounded px-3 py-1\"\n                      href={`mailto:${contact.email()}`}\n                    >\n                      <span>{contact.email()}</span>\n                    </Href>\n                  </li>\n                )}\n              </>\n            )}\n            {specId && (\n              <li className=\"inline-block mt-2 mr-2\">\n                <span className=\"border border-solid border-blue-300 hover:bg-blue-300 hover:text-blue-600 text-blue-500 font-bold no-underline text-xs uppercase rounded px-3 py-1\">\n                  ID: {specId}\n                </span>\n              </li>\n            )}\n          </ul>\n        )}\n\n        {info.hasDescription() && (\n          <div className=\"mt-4\">\n            <Markdown>{info.description()}</Markdown>\n          </div>\n        )}\n\n        {asyncapi.hasTags() && (\n          <div className=\"mt-4\">\n            <Tags tags={asyncapi.tags()} />\n          </div>\n        )}\n      </div>\n\n      <div className=\"panel-item--right\" />\n    </div>\n  );\n};\n","import { SecurityScheme } from '@asyncapi/parser';\n\nexport class ServerHelpers {\n  static securityType(value: string) {\n    switch (value) {\n      case 'apiKey':\n        return 'API key';\n      case 'oauth2':\n        return 'OAuth2';\n      case 'openIdConnect':\n        return 'Open ID';\n      case 'http':\n        return 'HTTP';\n      case 'userPassword':\n        return 'User/Password';\n      case 'X509':\n        return 'X509:';\n      case 'symmetricEncryption':\n        return 'Symmetric Encription';\n      case 'asymmetricEncryption':\n        return 'Asymmetric Encription';\n      case 'httpApiKey':\n        return 'HTTP API key';\n      case 'scramSha256':\n        return 'ScramSha256';\n      case 'scramSha512':\n        return 'ScramSha512';\n      case 'gssapi':\n        return 'GSSAPI';\n      default:\n        return 'API key';\n    }\n  }\n\n  static flowName(value: string) {\n    switch (value) {\n      case 'implicit':\n        return 'Implicit';\n      case 'password':\n        return 'Password';\n      case 'clientCredentials':\n        return 'Client credentials';\n      case 'authorizationCode':\n        return 'Authorization Code';\n      default:\n        return 'Implicit';\n    }\n  }\n\n  static getKafkaSecurity(\n    protocol: string,\n    securitySchema: SecurityScheme | null,\n  ) {\n    let securityProtocol;\n    let saslMechanism;\n    if (protocol === 'kafka') {\n      if (securitySchema) {\n        securityProtocol = 'SASL_PLAINTEXT';\n      } else {\n        securityProtocol = 'PLAINTEXT';\n      }\n    } else {\n      if (securitySchema) {\n        securityProtocol = 'SASL_SSL';\n      } else {\n        securityProtocol = 'SSL';\n      }\n    }\n    if (securitySchema) {\n      switch (securitySchema.type()) {\n        case 'plain':\n          saslMechanism = 'PLAIN';\n          break;\n        case 'scramSha256':\n          saslMechanism = 'SCRAM-SHA-256';\n          break;\n        case 'scramSha512':\n          saslMechanism = 'SCRAM-SHA-512';\n          break;\n        case 'oauth2':\n          saslMechanism = 'OAUTHBEARER';\n          break;\n        case 'gssapi':\n          saslMechanism = 'GSSAPI';\n          break;\n        case 'X509':\n          securityProtocol = 'SSL';\n          break;\n      }\n    }\n\n    return { securityProtocol, saslMechanism };\n  }\n}\n","import React from 'react';\nimport { ServerSecurityRequirement, SecurityScheme } from '@asyncapi/parser';\n\nimport { Href, Markdown } from '../../components';\n\nimport { useSpec } from '../../contexts';\nimport { ServerHelpers } from '../../helpers';\n\ninterface Props {\n  security: ServerSecurityRequirement[];\n  protocol?: string;\n  header?: string;\n}\n\nexport const Security: React.FunctionComponent<Props> = ({\n  security = [],\n  protocol = '',\n  header = 'Security',\n}) => {\n  const asyncapi = useSpec();\n  const securitySchemes =\n    asyncapi.hasComponents() && asyncapi.components().securitySchemes();\n\n  let renderedSecurities;\n  if (\n    !security ||\n    !security.length ||\n    !securitySchemes ||\n    !Object.keys(securitySchemes).length\n  ) {\n    if (protocol === 'kafka' || protocol === 'kafka-secure') {\n      renderedSecurities = (\n        <SecurityItem protocol={protocol} securitySchema={null} />\n      );\n    }\n  } else {\n    const securities: React.ReactNodeArray = security\n      .map(requirement => {\n        const requirements = requirement.json();\n        const key = Object.keys(requirements)[0];\n        const def = securitySchemes[String(key)];\n        const requiredScopes: string[] = requirements[String(key)];\n\n        if (!def) {\n          return null;\n        }\n        return (\n          <SecurityItem\n            protocol={protocol}\n            securitySchema={def}\n            requiredScopes={requiredScopes}\n            key={def.type()}\n          />\n        );\n      })\n      .filter(Boolean);\n\n    renderedSecurities = (\n      <ul>\n        {securities.map((s, idx) => (\n          <li className=\"mt-2\" key={idx}>\n            {s}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  if (!renderedSecurities) {\n    return null;\n  }\n\n  return (\n    <div className=\"text-sm mt-4\">\n      <h5 className=\"text-gray-800\">{header}:</h5>\n      {renderedSecurities}\n    </div>\n  );\n};\n\nfunction collectSecuritySchemas(\n  securitySchema: SecurityScheme | null,\n  requiredScopes: string[] = [],\n): React.ReactNodeArray {\n  const schemas: React.ReactNodeArray = [];\n  if (securitySchema) {\n    if (securitySchema.name()) {\n      schemas.push(<span>Name: {securitySchema.name()}</span>);\n    }\n    if (securitySchema.in()) {\n      schemas.push(<span>In: {securitySchema.in()}</span>);\n    }\n    if (securitySchema.scheme()) {\n      schemas.push(<span>Scheme: {securitySchema.scheme()}</span>);\n    }\n    if (securitySchema.bearerFormat()) {\n      schemas.push(<span>Bearer format: {securitySchema.bearerFormat()}</span>);\n    }\n    if (securitySchema.openIdConnectUrl()) {\n      schemas.push(\n        <Href href={securitySchema.openIdConnectUrl()} className=\"underline\">\n          Connect URL\n        </Href>,\n      );\n    }\n    if (requiredScopes.length) {\n      schemas.push(<span>Required scopes: {requiredScopes.join(', ')}</span>);\n    }\n  }\n  return schemas;\n}\n\ninterface SecurityItemProps {\n  securitySchema: SecurityScheme | null;\n  protocol: string;\n  requiredScopes?: string[];\n}\n\nconst SecurityItem: React.FunctionComponent<SecurityItemProps> = ({\n  securitySchema,\n  protocol,\n  requiredScopes,\n}) => {\n  const schemas: React.ReactNodeArray = collectSecuritySchemas(\n    securitySchema,\n    requiredScopes,\n  );\n\n  let renderedKafkaSecurity;\n  if (['kafka', 'kafka-secure'].includes(protocol)) {\n    const { securityProtocol, saslMechanism } = ServerHelpers.getKafkaSecurity(\n      protocol,\n      securitySchema,\n    );\n\n    renderedKafkaSecurity = (\n      <div className=\"px-4 py-2 ml-2 mb-2 border border-gray-400 bg-gray-100 rounded\">\n        {securityProtocol && (\n          <div className=\"mt-1\">\n            <span className=\"text-xs font-bold text-gray-600 mt-1 mr-1 uppercase\">\n              security.protocol:\n            </span>\n            <span className=\"inline-block font-bold no-underline bg-indigo-400 text-white text-xs rounded py-0 px-1 ml-1\">\n              {securityProtocol}\n            </span>\n          </div>\n        )}\n        {saslMechanism && (\n          <div className=\"mt-1\">\n            <span className=\"text-xs font-bold text-gray-600 mt-1 mr-1 uppercase\">\n              sasl.mechanism:\n            </span>\n            <span className=\"inline-block font-bold no-underline bg-indigo-400 text-white text-xs rounded py-0 px-1 ml-1\">\n              {saslMechanism}\n            </span>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  const flows = securitySchema && securitySchema.flows();\n  const renderedFlows =\n    flows &&\n    Object.entries(flows).map(([flowName, flow]) => {\n      const authorizationUrl = flow.authorizationUrl();\n      const tokenUrl = flow.tokenUrl();\n      const refreshUrl = flow.refreshUrl();\n      const scopes = flow.scopes();\n\n      return (\n        <div\n          className=\"px-4 py-2 ml-2 mb-2 border border-gray-400 bg-gray-100 rounded\"\n          key={flowName}\n        >\n          <div>\n            <span className=\"text-xs font-bold text-gray-600 mt-1 mr-1 uppercase\">\n              Flow:\n            </span>\n            <span className=\"text-xs font-bold text-gray-600 mt-1 mr-1 uppercase\">\n              {ServerHelpers.flowName(flowName)}\n            </span>\n          </div>\n\n          {authorizationUrl && (\n            <div className=\"mt-1\">\n              <span className=\"text-xs font-bold text-gray-600 mt-1 mr-1 uppercase\">\n                Auth URL:\n              </span>\n              <Href href={authorizationUrl} className=\"underline\">\n                {authorizationUrl}\n              </Href>\n            </div>\n          )}\n          {tokenUrl && (\n            <div className=\"mt-1\">\n              <span className=\"text-xs font-bold text-gray-600 mt-1 mr-1 uppercase\">\n                Token URL:\n              </span>\n              <Href href={tokenUrl} className=\"underline\">\n                {tokenUrl}\n              </Href>\n            </div>\n          )}\n          {refreshUrl && (\n            <div className=\"mt-1\">\n              <span className=\"text-xs font-bold text-gray-600 mt-1 mr-1 uppercase\">\n                Refresh URL:\n              </span>\n              <Href href={refreshUrl} className=\"underline\">\n                {refreshUrl}\n              </Href>\n            </div>\n          )}\n          {scopes && (\n            <div className=\"mt-1\">\n              <span className=\"text-xs font-bold text-gray-600 mt-1 mr-1 uppercase\">\n                Scopes:\n              </span>\n              <ul className=\"inline-block\">\n                {scopes &&\n                  Object.entries(scopes).map(([scopeName, scopeDesc]) => (\n                    <li\n                      className=\"inline-block font-bold no-underline bg-indigo-400 text-white text-xs rounded py-0 px-1 ml-1\"\n                      title={scopeDesc}\n                      key={scopeName}\n                    >\n                      {scopeName}\n                    </li>\n                  ))}\n              </ul>\n            </div>\n          )}\n        </div>\n      );\n    });\n\n  return (\n    <div>\n      {securitySchema && schemas && (\n        <div>\n          <span>\n            {ServerHelpers.securityType(securitySchema.type())}\n            {schemas.length > 0 && (\n              <ul className=\"inline-block ml-2\">\n                {schemas.map((schema, idx) => (\n                  <li\n                    className=\"inline-block font-bold no-underline bg-blue-400 text-white text-xs uppercase rounded px-2 py-0 ml-1\"\n                    key={idx}\n                  >\n                    {schema}\n                  </li>\n                ))}\n              </ul>\n            )}\n          </span>\n        </div>\n      )}\n\n      {securitySchema && securitySchema.hasDescription() && (\n        <div>\n          <Markdown>{securitySchema.description()}</Markdown>\n        </div>\n      )}\n\n      {renderedFlows && renderedFlows.length > 0 && (\n        <ul className=\"my-2\">\n          <li>{renderedFlows}</li>\n        </ul>\n      )}\n\n      {renderedKafkaSecurity && <div>{renderedKafkaSecurity}</div>}\n    </div>\n  );\n};\n","import { ChannelParameter, ServerVariable, Schema } from '@asyncapi/parser';\n// @ts-ignore\nimport SchemaClass from '@asyncapi/parser/lib/models/schema';\n\nexport enum SchemaCustomTypes {\n  // for `true` and `{}` schemas\n  ANY = 'any',\n  // for schemas without `type` keyword\n  RESTRICTED_ANY = 'restricted any',\n  // for `false` and `{ not: {}, ... }` schemas\n  NEVER = 'never',\n  // for types that we cannot infer\n  UNKNOWN = 'unknown',\n}\n\nconst jsonSchemaTypes = [\n  'string',\n  'number',\n  'integer',\n  'boolean',\n  'array',\n  'object',\n  'null',\n];\nconst jsonSchemaKeywordTypes: Record<string, string> = {\n  // string\n  maxLength: 'string',\n  minLength: 'string',\n  pattern: 'string',\n  contentMediaType: 'string',\n  contentEncoding: 'string',\n  // number\n  multipleOf: 'number',\n  maximum: 'number',\n  exclusiveMaximum: 'number',\n  minimum: 'number',\n  exclusiveMinimum: 'number',\n  // array\n  items: 'array',\n  maxItems: 'array',\n  minItems: 'array',\n  uniqueItems: 'array',\n  contains: 'array',\n  additionalItems: 'array',\n  // object\n  maxProperties: 'object',\n  minProperties: 'object',\n  required: 'object',\n  properties: 'object',\n  patternProperties: 'object',\n  propertyNames: 'object',\n  dependencies: 'object',\n  additionalProperties: 'object',\n};\nconst jsonSchemaKeywords = Object.keys(jsonSchemaKeywordTypes);\n\nexport class SchemaHelpers {\n  static extRenderType = 'x-schema-private-render-type';\n  static extRenderAdditionalInfo = 'x-schema-private-render-additional-info';\n  static extRawValue = 'x-schema-private-raw-value';\n  static extParameterLocation = 'x-schema-private-parameter-location';\n\n  static toSchemaType(schema: Schema): string {\n    if (!schema || typeof schema.json !== 'function') {\n      return SchemaCustomTypes.UNKNOWN;\n    }\n    if (schema.isBooleanSchema()) {\n      if (schema.json() === true) {\n        return SchemaCustomTypes.ANY;\n      } else {\n        return SchemaCustomTypes.NEVER;\n      }\n    }\n    // handle case with `{}` schemas\n    if (Object.keys(schema.json()).length === 0) {\n      return SchemaCustomTypes.ANY;\n    }\n    // handle case with `{ not: {}, ... }` schemas\n    const not = schema.not();\n    if (not && this.inferType(not) === SchemaCustomTypes.ANY) {\n      return SchemaCustomTypes.NEVER;\n    }\n\n    let type = this.inferType(schema);\n    if (Array.isArray(type)) {\n      return type.map(t => this.toType(t, schema)).join(' | ');\n    }\n    type = this.toType(type, schema);\n    const combinedType = this.toCombinedType(schema);\n\n    if (type && combinedType) {\n      return `${type} ${combinedType}`;\n    }\n    if (combinedType) {\n      return combinedType;\n    }\n    return type;\n  }\n\n  static prettifyValue(value: any) {\n    const typeOf = typeof value;\n    if (typeOf === 'string') {\n      return `\"${value}\"`;\n    }\n    if (typeOf === 'number' || typeOf === 'bigint' || typeOf === 'boolean') {\n      return value;\n    }\n    if (Array.isArray(value)) {\n      return `[${value.toString()}]`;\n    }\n    return JSON.stringify(value);\n  }\n\n  static humanizeConstraints(schema: Schema): string[] {\n    const constraints: string[] = [];\n\n    // related to number/integer\n    const numberRange = this.humanizeNumberRangeConstraint(\n      schema.minimum(),\n      schema.exclusiveMinimum(),\n      schema.maximum(),\n      schema.exclusiveMaximum(),\n    );\n    if (numberRange !== undefined) {\n      constraints.push(numberRange);\n    }\n    const multipleOfConstraint = this.humanizeMultipleOfConstraint(\n      schema.multipleOf(),\n    );\n    if (multipleOfConstraint !== undefined) {\n      constraints.push(multipleOfConstraint);\n    }\n\n    // related to string\n    const stringRange = this.humanizeRangeConstraint(\n      'characters',\n      schema.minLength(),\n      schema.maxLength(),\n    );\n    if (stringRange !== undefined) {\n      constraints.push(stringRange);\n    }\n\n    // related to array\n    const hasUniqueItems = schema.uniqueItems();\n    const arrayRange = this.humanizeRangeConstraint(\n      hasUniqueItems ? 'unique items' : 'items',\n      schema.minItems(),\n      schema.maxItems(),\n    );\n    if (arrayRange !== undefined) {\n      constraints.push(arrayRange);\n    }\n\n    // related to object\n    const objectRange = this.humanizeRangeConstraint(\n      'properties',\n      schema.minProperties(),\n      schema.maxProperties(),\n    );\n    if (objectRange !== undefined) {\n      constraints.push(objectRange);\n    }\n\n    return constraints;\n  }\n\n  static isExpandable(schema: Schema): boolean {\n    let type = this.inferType(schema);\n    type = Array.isArray(type) ? type : [type];\n    if (type.includes('object') || type.includes('array')) {\n      return true;\n    }\n\n    if (\n      schema.oneOf() ||\n      schema.anyOf() ||\n      schema.allOf() ||\n      Object.keys(schema.properties()).length ||\n      schema.items() ||\n      schema.not() ||\n      schema.if() ||\n      schema.then() ||\n      schema.else()\n    ) {\n      return true;\n    }\n\n    const customExtensions = this.getCustomExtensions(schema);\n    if (customExtensions && Object.keys(customExtensions).length) {\n      return true;\n    }\n\n    return false;\n  }\n\n  static serverVariablesToSchema(\n    urlVariables?: Record<string, ServerVariable>,\n  ): Schema | undefined {\n    if (!urlVariables || !Object.keys(urlVariables).length) {\n      return undefined;\n    }\n\n    const json = {\n      type: 'object',\n      properties: Object.entries(urlVariables).reduce(\n        (obj, [variableName, variable]) => {\n          obj[variableName] = Object.assign({}, variable.json() || {});\n          obj[variableName].type = 'string';\n          return obj;\n        },\n        {},\n      ),\n      required: Object.keys(urlVariables),\n      [this.extRenderType]: false,\n      [this.extRenderAdditionalInfo]: false,\n    };\n    return new SchemaClass(json);\n  }\n\n  static parametersToSchema(\n    parameters?: Record<string, ChannelParameter>,\n  ): Schema | undefined {\n    if (!parameters || !Object.keys(parameters).length) {\n      return undefined;\n    }\n\n    const json = {\n      type: 'object',\n      properties: Object.entries(parameters).reduce(\n        (obj, [paramaterName, parameter]) => {\n          const parameterSchema = parameter.schema();\n          obj[paramaterName] = Object.assign(\n            {},\n            parameterSchema ? parameterSchema.json() : {},\n          );\n          obj[paramaterName].description =\n            parameter.description() || obj[paramaterName].description;\n          obj[paramaterName][this.extParameterLocation] = parameter.location();\n          return obj;\n        },\n        {},\n      ),\n      required: Object.keys(parameters),\n      [this.extRenderType]: false,\n      [this.extRenderAdditionalInfo]: false,\n    };\n    return new SchemaClass(json);\n  }\n\n  static jsonToSchema(value: any): any {\n    const json = this.jsonFieldToSchema(value);\n    return new SchemaClass(json);\n  }\n\n  /**\n   * Retrieves from given value all custom extensions (value with key started by `x-`).\n   * However, it skips those private extensions that begin with `x-parser-` and `x-schema-private-`.\n   *\n   * @param value\n   */\n  static getCustomExtensions(value: any) {\n    if (!value || typeof value.extensions !== 'function') {\n      return;\n    }\n    return Object.entries(value.extensions() || {}).reduce(\n      (obj, [extName, ext]) => {\n        if (\n          !extName.startsWith('x-parser-') &&\n          !extName.startsWith('x-schema-private-')\n        ) {\n          obj[extName] = ext;\n        }\n        return obj;\n      },\n      {},\n    );\n  }\n\n  /**\n   * Retrieves from given schema all dependent required requires by given propertyName from `dependencies` object.\n   *\n   * @param propertyName\n   * @param schema\n   */\n  static getDependentRequired(\n    propertyName: string,\n    schema: Schema,\n  ): string[] | undefined {\n    const dependentRequired: string[] = [];\n    const dependencies = schema.dependencies();\n    if (!dependencies) {\n      return;\n    }\n\n    for (const [prop, array] of Object.entries(dependencies)) {\n      if (Array.isArray(array) && array.includes(propertyName)) {\n        dependentRequired.push(prop);\n      }\n    }\n    return dependentRequired.length ? dependentRequired : undefined;\n  }\n\n  /**\n   * Retrieves from given schema all dependent schemas from `dependencies` object.\n   *\n   * @param schema\n   */\n  static getDependentSchemas(schema: Schema): Schema | undefined {\n    const dependencies = schema.dependencies();\n    if (!dependencies) {\n      return;\n    }\n\n    const records: Record<string, Schema> = {};\n    for (const [prop, propSchema] of Object.entries(dependencies)) {\n      if (typeof propSchema === 'object' && !Array.isArray(propSchema)) {\n        records[prop] = propSchema;\n      }\n    }\n    if (!Object.keys(records).length) {\n      return undefined;\n    }\n\n    const json = {\n      type: 'object',\n      properties: Object.entries(records).reduce(\n        (obj, [propertyName, propertySchema]) => {\n          obj[propertyName] = Object.assign({}, propertySchema.json());\n          return obj;\n        },\n        {},\n      ),\n      [this.extRenderType]: false,\n      [this.extRenderAdditionalInfo]: false,\n    };\n    return new SchemaClass(json);\n  }\n\n  private static toType(type: string, schema: Schema): string {\n    if (schema.isCircular()) {\n      return type;\n    }\n    if (type === 'array') {\n      const items = schema.items();\n      if (Array.isArray(items)) {\n        return this.toItemsType(items, schema);\n      }\n      if (!items) {\n        return `array<${SchemaCustomTypes.ANY}>`;\n      }\n      return `array<${this.toSchemaType(items) || SchemaCustomTypes.UNKNOWN}>`;\n    }\n    return type;\n  }\n\n  private static toItemsType(items: Schema[], schema: Schema): string {\n    const types = items.map(item => this.toSchemaType(item)).join(', ');\n    const additionalItems = schema.additionalItems() as any;\n    if (additionalItems === undefined || additionalItems.json()) {\n      const additionalType =\n        additionalItems === undefined || additionalItems.json() === true\n          ? SchemaCustomTypes.ANY\n          : this.toSchemaType(additionalItems);\n      return `tuple<${types ||\n        SchemaCustomTypes.UNKNOWN}, ...optional<${additionalType}>>`;\n    }\n    return `tuple<${types || SchemaCustomTypes.UNKNOWN}>`;\n  }\n\n  private static toCombinedType(schema: Schema): string | undefined {\n    const oneOf = schema.oneOf();\n    if (oneOf) {\n      return 'oneOf';\n    }\n    if (schema.anyOf()) {\n      return 'anyOf';\n    }\n    if (schema.allOf()) {\n      return 'allOf';\n    }\n    return;\n  }\n\n  private static inferType(schema: Schema): string[] | string {\n    let types = schema.type();\n\n    if (types !== undefined) {\n      if (Array.isArray(types)) {\n        // if types have `integer` and `number` types, `integer` is unnecessary\n        if (types.includes('integer') && types.includes('number')) {\n          types = types.filter(t => t !== 'integer');\n        }\n        return types.length === 1 ? types[0] : types;\n      }\n      return types;\n    }\n\n    const constValue = schema.const();\n    if (constValue !== undefined) {\n      return typeof constValue;\n    }\n    const enumValue = schema.enum();\n    if (Array.isArray(enumValue) && enumValue.length) {\n      const inferredType = Array.from(new Set(enumValue.map(e => typeof e)));\n      return inferredType.length === 1 ? inferredType[0] : inferredType;\n    }\n\n    const schemaKeys = Object.keys(schema.json() || {}) || [];\n    const hasInferredTypes = jsonSchemaKeywords.some(key =>\n      schemaKeys.includes(key),\n    );\n    if (hasInferredTypes === true) {\n      return SchemaCustomTypes.RESTRICTED_ANY;\n    }\n    if (this.toCombinedType(schema)) {\n      return '';\n    }\n    return SchemaCustomTypes.ANY;\n  }\n\n  private static humanizeNumberRangeConstraint(\n    min: number | undefined,\n    exclusiveMin: number | undefined,\n    max: number | undefined,\n    exclusiveMax: number | undefined,\n  ): string | undefined {\n    const hasExclusiveMin = exclusiveMin !== undefined;\n    const hasMin = min !== undefined || hasExclusiveMin;\n    const hasExclusiveMax = exclusiveMax !== undefined;\n    const hasMax = max !== undefined || hasExclusiveMax;\n\n    let numberRange;\n    if (hasMin && hasMax) {\n      numberRange = hasExclusiveMin ? '( ' : '[ ';\n      numberRange += hasExclusiveMin ? exclusiveMin : min;\n      numberRange += ' .. ';\n      numberRange += hasExclusiveMax ? exclusiveMax : max;\n      numberRange += hasExclusiveMax ? ' )' : ' ]';\n    } else if (hasMin) {\n      numberRange = hasExclusiveMin ? '> ' : '>= ';\n      numberRange += hasExclusiveMin ? exclusiveMin : min;\n    } else if (hasMax) {\n      numberRange = hasExclusiveMax ? '< ' : '<= ';\n      numberRange += hasExclusiveMax ? exclusiveMax : max;\n    }\n    return numberRange;\n  }\n\n  private static humanizeMultipleOfConstraint(\n    multipleOf: number | undefined,\n  ): string | undefined {\n    if (multipleOf === undefined) {\n      return;\n    }\n    const strigifiedMultipleOf = multipleOf.toString(10);\n    if (!/^0\\.0*1$/.test(strigifiedMultipleOf)) {\n      return `multiple of ${strigifiedMultipleOf}`;\n    }\n    return `decimal places <= ${strigifiedMultipleOf.split('.')[1].length}`;\n  }\n\n  private static humanizeRangeConstraint(\n    description: string,\n    min: number | undefined,\n    max: number | undefined,\n  ): string | undefined {\n    let stringRange;\n    if (min !== undefined && max !== undefined) {\n      if (min === max) {\n        stringRange = `${min} ${description}`;\n      } else {\n        stringRange = `[ ${min} .. ${max} ] ${description}`;\n      }\n    } else if (max !== undefined) {\n      stringRange = `<= ${max} ${description}`;\n    } else if (min !== undefined) {\n      if (min === 1) {\n        stringRange = 'non-empty';\n      } else {\n        stringRange = `>= ${min} ${description}`;\n      }\n    }\n    return stringRange;\n  }\n\n  private static jsonFieldToSchema(value: any): any {\n    if (value === undefined || value === null) {\n      return {\n        type: 'string',\n        const: '',\n        [this.extRawValue]: true,\n      };\n    }\n    if (typeof value !== 'object') {\n      const str =\n        typeof value.toString === 'function' ? value.toString() : value;\n      return {\n        type: 'string',\n        const: str,\n        [this.extRawValue]: true,\n      };\n    }\n    if (this.isJSONSchema(value)) {\n      return value;\n    }\n    if (Array.isArray(value)) {\n      return {\n        type: 'array',\n        items: value.map(v => this.jsonFieldToSchema(v)),\n        [this.extRenderType]: false,\n        [this.extRenderAdditionalInfo]: false,\n      };\n    }\n    return {\n      type: 'object',\n      properties: Object.entries(value).reduce((obj, [k, v]) => {\n        obj[k] = this.jsonFieldToSchema(v);\n        return obj;\n      }, {}),\n      [this.extRenderType]: false,\n      [this.extRenderAdditionalInfo]: false,\n    };\n  }\n\n  private static isJSONSchema(value: any): boolean {\n    if (\n      value &&\n      typeof value === 'object' &&\n      (jsonSchemaTypes.includes(value.type) ||\n        (Array.isArray(value.type) &&\n          value.type.some((t: string) => !jsonSchemaTypes.includes(t))))\n    ) {\n      return true;\n    }\n    return false;\n  }\n}\n","import React from 'react';\n\nimport { Schema } from './Schema';\n\nimport { SchemaHelpers } from '../helpers';\n\ninterface Props {\n  name?: string;\n  item: any;\n}\n\nexport const Extensions: React.FunctionComponent<Props> = ({\n  name = 'Extensions',\n  item,\n}) => {\n  const extensions = SchemaHelpers.getCustomExtensions(item);\n  if (!extensions || !Object.keys(extensions).length) {\n    return null;\n  }\n\n  const schema = SchemaHelpers.jsonToSchema(extensions);\n  return (\n    schema && (\n      <div className=\"mt-2\">\n        <Schema schemaName={name} schema={schema} onlyTitle={true} />\n      </div>\n    )\n  );\n};\n","import React, { useState, useContext } from 'react';\nimport { Schema as SchemaType } from '@asyncapi/parser';\n\nimport { Href, CollapseButton, Markdown, Extensions } from './index';\nimport { SchemaHelpers } from '../helpers';\n\ninterface Props {\n  schemaName?: React.ReactNode;\n  schema?: SchemaType;\n  required?: boolean;\n  isPatternProperty?: boolean;\n  isProperty?: boolean;\n  isCircular?: boolean;\n  dependentRequired?: string[];\n  expanded?: boolean;\n  onlyTitle?: boolean;\n}\n\nconst SchemaContext = React.createContext({ reverse: false });\n\nexport const Schema: React.FunctionComponent<Props> = ({\n  schemaName,\n  schema,\n  required = false,\n  isPatternProperty = false,\n  isProperty = false,\n  isCircular = false,\n  dependentRequired,\n  expanded = false,\n  onlyTitle = false,\n}) => {\n  const { reverse } = useContext(SchemaContext);\n  const [expand, setExpand] = useState(expanded);\n\n  if (\n    !schema ||\n    (typeof schemaName === 'string' &&\n      (schemaName?.startsWith('x-parser-') ||\n        schemaName?.startsWith('x-schema-private-')))\n  ) {\n    return null;\n  }\n\n  const dependentSchemas = SchemaHelpers.getDependentSchemas(schema);\n\n  const constraints = SchemaHelpers.humanizeConstraints(schema);\n  const externalDocs = schema.externalDocs();\n\n  const renderType = schema.ext(SchemaHelpers.extRenderType) !== false;\n  const rawValue = schema.ext(SchemaHelpers.extRawValue) === true;\n  const parameterLocation = schema.ext(SchemaHelpers.extParameterLocation);\n  const isExpandable = SchemaHelpers.isExpandable(schema) || dependentSchemas;\n\n  let schemaType = SchemaHelpers.toSchemaType(schema);\n  isCircular =\n    isCircular ||\n    schema.isCircular() ||\n    schema.ext('x-parser-circular') ||\n    false;\n  let uid = schema.uid();\n\n  const schemaItems = schema.items();\n  if (schemaItems && !Array.isArray(schemaItems)) {\n    /**\n     * fallback for older logic for circular references:\n     *\n     * checking uid for circular items\n     * `x-parser-circular` extension is added to every schema which has circular `items` field,\n     * so we must check that `items` is schema (not array of schemas) and infer UID of schema to display which schema is circular (by the name of schema)\n     */\n    isCircular =\n      isCircular ||\n      schemaItems.isCircular() ||\n      schemaItems.ext('x-parser-circular') ||\n      false;\n    uid = schemaItems.uid();\n    if (\n      isCircular &&\n      typeof (schemaItems as any).circularSchema === 'function'\n    ) {\n      schemaType = SchemaHelpers.toSchemaType(\n        (schemaItems as any).circularSchema(),\n      );\n    }\n  } else if (\n    isCircular &&\n    typeof (schema as any).circularSchema === 'function'\n  ) {\n    schemaType = SchemaHelpers.toSchemaType((schema as any).circularSchema());\n  }\n\n  const styledSchemaName = isProperty ? 'italic' : '';\n  const renderedSchemaName =\n    typeof schemaName === 'string' ? (\n      <span className={`break-words text-sm ${styledSchemaName}`}>\n        {schemaName}\n      </span>\n    ) : (\n      schemaName\n    );\n\n  return (\n    <SchemaContext.Provider value={{ reverse: !reverse }}>\n      <div>\n        <div className=\"flex py-2\">\n          <div className={`${onlyTitle ? '' : 'min-w-1/4'} mr-2`}>\n            {isExpandable && !isCircular ? (\n              <CollapseButton\n                onClick={() => setExpand(prev => !prev)}\n                chevronProps={{\n                  className: expand ? '-rotate-180' : '-rotate-90',\n                }}\n              >\n                {renderedSchemaName}\n              </CollapseButton>\n            ) : (\n              <span\n                className={`break-words text-sm ${isProperty ? 'italic' : ''}`}\n              >\n                {schemaName}\n              </span>\n            )}\n            {isPatternProperty && (\n              <div className=\"text-gray-500 text-xs italic\">\n                (pattern property)\n              </div>\n            )}\n            {required && <div className=\"text-red-600 text-xs\">required</div>}\n            {dependentRequired && (\n              <>\n                <div className=\"text-gray-500 text-xs\">\n                  required when defined:\n                </div>\n                <div className=\"text-red-600 text-xs\">\n                  {dependentRequired.join(', ')}\n                </div>\n              </>\n            )}\n            {schema.deprecated() && (\n              <div className=\"text-red-600 text-xs\">deprecated</div>\n            )}\n            {schema.writeOnly() && (\n              <div className=\"text-gray-500 text-xs\">write-only</div>\n            )}\n            {schema.readOnly() && (\n              <div className=\"text-gray-500 text-xs\">read-only</div>\n            )}\n          </div>\n          {rawValue ? (\n            <div>\n              <div className=\"text-sm\">{schema.const()}</div>\n            </div>\n          ) : (\n            <div>\n              <div>\n                {renderType && (\n                  <div className=\"capitalize text-sm text-teal-500 font-bold inline-block mr-2\">\n                    {isCircular ? `${schemaType} [CIRCULAR]` : schemaType}\n                  </div>\n                )}\n                <div className=\"inline-block\">\n                  {schema.format() && (\n                    <span className=\"bg-yellow-600 font-bold no-underline text-white rounded lowercase mr-2 p-1 text-xs\">\n                      format: {schema.format()}\n                    </span>\n                  )}\n\n                  {/* related to string */}\n                  {schema.pattern() !== undefined && (\n                    <span className=\"bg-yellow-600 font-bold no-underline text-white rounded mr-2 p-1 text-xs\">\n                      must match: {schema.pattern()}\n                    </span>\n                  )}\n                  {schema.contentMediaType() !== undefined && (\n                    <span className=\"bg-yellow-600 font-bold no-underline text-white rounded lowercase mr-2 p-1 text-xs\">\n                      media type: {schema.contentMediaType()}\n                    </span>\n                  )}\n                  {schema.contentEncoding() !== undefined && (\n                    <span className=\"bg-yellow-600 font-bold no-underline text-white rounded lowercase mr-2 p-1 text-xs\">\n                      encoding: {schema.contentEncoding()}\n                    </span>\n                  )}\n\n                  {/* constraints */}\n                  {!!constraints.length &&\n                    constraints.map(c => (\n                      <span\n                        className=\"bg-purple-600 font-bold no-underline text-white rounded lowercase mr-2 p-1 text-xs\"\n                        key={c}\n                      >\n                        {c}\n                      </span>\n                    ))}\n\n                  {uid && !uid.startsWith('<anonymous-') && (\n                    <span className=\"border text-orange-600 rounded mr-2 p-1 text-xs\">\n                      uid: {uid}\n                    </span>\n                  )}\n                </div>\n\n                {schema.hasDescription() && (\n                  <div>\n                    <Markdown>{schema.description()}</Markdown>\n                  </div>\n                )}\n\n                {schema.default() !== undefined && (\n                  <div className=\"text-xs\">\n                    Default value:\n                    <span className=\"border inline-block text-orange-600 rounded ml-1 py-0 px-2\">\n                      {SchemaHelpers.prettifyValue(schema.default())}\n                    </span>\n                  </div>\n                )}\n                {schema.const() !== undefined && (\n                  <div className=\"text-xs\">\n                    Const:\n                    <span className=\"border inline-block text-orange-600 rounded ml-1 py-0 px-2\">\n                      {SchemaHelpers.prettifyValue(schema.const())}\n                    </span>\n                  </div>\n                )}\n                {schema.enum() && (\n                  <ul className=\"text-xs\">\n                    Allowed values:{' '}\n                    {schema.enum().map((e, idx) => (\n                      <li\n                        key={idx}\n                        className=\"border inline-block text-orange-600 rounded ml-1 py-0 px-2\"\n                      >\n                        <span>{SchemaHelpers.prettifyValue(e)}</span>\n                      </li>\n                    ))}\n                  </ul>\n                )}\n                {parameterLocation && (\n                  <div className=\"text-xs\">\n                    Parameter location:{' '}\n                    <span className=\"border text-orange-600 rounded mr-2 p-1 text-xs\">\n                      {parameterLocation}\n                    </span>\n                  </div>\n                )}\n                {externalDocs && (\n                  <span className=\"border border-solid border-orange-300 hover:bg-orange-300 hover:text-orange-600 text-orange-500 font-bold no-underline text-xs uppercase rounded px-2 py-0\">\n                    <Href\n                      href={externalDocs.url()}\n                      title={externalDocs.description() || ''}\n                    >\n                      Documentation\n                    </Href>\n                  </span>\n                )}\n                {schema.examples() && (\n                  <ul className=\"text-xs\">\n                    Examples values:{' '}\n                    {schema.examples().map((e, idx) => (\n                      <li\n                        key={idx}\n                        className=\"border inline-block text-orange-600 rounded ml-1 py-0 px-2 break-all\"\n                      >\n                        <span>{SchemaHelpers.prettifyValue(e)}</span>\n                      </li>\n                    ))}\n                  </ul>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n\n        {isCircular || !isExpandable ? null : (\n          <div\n            className={`rounded p-4 py-2 border bg-gray-100 ${\n              reverse ? 'bg-gray-200' : ''\n            } ${expand ? 'block' : 'hidden'}`}\n          >\n            <SchemaProperties schema={schema} />\n            <SchemaItems schema={schema} />\n\n            {schema.oneOf() &&\n              schema\n                .oneOf()\n                .map((s, idx) => (\n                  <Schema\n                    key={idx}\n                    schema={s}\n                    schemaName={idx === 0 ? 'Adheres to:' : 'Or to:'}\n                  />\n                ))}\n            {schema.anyOf() &&\n              schema\n                .anyOf()\n                .map((s, idx) => (\n                  <Schema\n                    key={idx}\n                    schema={s}\n                    schemaName={idx === 0 ? 'Can adhere to:' : 'Or to:'}\n                  />\n                ))}\n            {schema.allOf() &&\n              schema\n                .allOf()\n                .map((s, idx) => (\n                  <Schema\n                    key={idx}\n                    schema={s}\n                    schemaName={idx === 0 ? 'Consists of:' : 'And with:'}\n                  />\n                ))}\n            {schema.not() && (\n              <Schema schema={schema.not()} schemaName=\"Cannot adhere to:\" />\n            )}\n\n            {schema.propertyNames() && (\n              <Schema\n                schema={schema.propertyNames()}\n                schemaName=\"Property names must adhere to:\"\n              />\n            )}\n            {schema.contains() && (\n              <Schema\n                schema={schema.contains()}\n                schemaName=\"Array must contain at least one of:\"\n              />\n            )}\n\n            {schema.if() && (\n              <Schema schema={schema.if()} schemaName=\"If schema adheres to:\" />\n            )}\n            {schema.then() && (\n              <Schema\n                schema={schema.then()}\n                schemaName=\"Then must adhere to:\"\n              />\n            )}\n            {schema.else() && (\n              <Schema schema={schema.else()} schemaName=\"Otherwise:\" />\n            )}\n\n            {dependentSchemas && (\n              <Schema\n                schema={dependentSchemas}\n                schemaName=\"Dependent schemas:\"\n              />\n            )}\n\n            <Extensions item={schema} />\n\n            <AdditionalProperties schema={schema} />\n            <AdditionalItems schema={schema} />\n          </div>\n        )}\n      </div>\n    </SchemaContext.Provider>\n  );\n};\n\ninterface SchemaPropertiesProps {\n  schema: SchemaType;\n}\n\nconst SchemaProperties: React.FunctionComponent<SchemaPropertiesProps> = ({\n  schema,\n}) => {\n  const properties = schema.properties() || {};\n  if (!Object.keys(properties)) {\n    return null;\n  }\n\n  const required = schema.required() || [];\n  const patternProperties = schema.patternProperties();\n  const circularProps = schema.ext('x-parser-circular-props') || [];\n\n  return (\n    <>\n      {Object.entries(properties).map(([propertyName, property]) => (\n        <Schema\n          schema={property}\n          schemaName={propertyName}\n          required={required.includes(propertyName)}\n          isProperty={true}\n          isCircular={circularProps.includes(propertyName)}\n          dependentRequired={SchemaHelpers.getDependentRequired(\n            propertyName,\n            schema,\n          )}\n          key={propertyName}\n        />\n      ))}\n      {Object.entries(patternProperties).map(([propertyName, property]) => (\n        <Schema\n          schema={property}\n          schemaName={propertyName}\n          isPatternProperty={true}\n          isProperty={true}\n          isCircular={circularProps.includes(propertyName)}\n          key={propertyName}\n        />\n      ))}\n    </>\n  );\n};\n\ninterface AdditionalPropertiesProps {\n  schema: SchemaType;\n}\n\nconst AdditionalProperties: React.FunctionComponent<AdditionalPropertiesProps> = ({\n  schema,\n}) => {\n  if (schema.ext(SchemaHelpers.extRenderAdditionalInfo) === false) {\n    return null;\n  }\n\n  let type = schema.type();\n  type = Array.isArray(type) ? type : [type];\n  if (!type.includes('object')) {\n    return null;\n  }\n\n  const additionalProperties = schema.additionalProperties();\n  if (additionalProperties === true || additionalProperties === undefined) {\n    return (\n      <p className=\"mt-2 text-xs text-gray-700\">\n        Additional properties are allowed.\n      </p>\n    );\n  }\n  if (additionalProperties === false) {\n    return (\n      <p className=\"mt-2 text-xs text-gray-700\">\n        Additional properties are <strong>NOT</strong> allowed.\n      </p>\n    );\n  }\n  return (\n    <Schema schemaName=\"Additional properties:\" schema={additionalProperties} />\n  );\n};\n\ninterface SchemaItemsProps {\n  schema: SchemaType;\n}\n\nconst SchemaItems: React.FunctionComponent<SchemaItemsProps> = ({ schema }) => {\n  let type = schema.type();\n  type = Array.isArray(type) ? type : [type];\n  if (!type.includes('array')) {\n    return null;\n  }\n  const items = schema.items();\n\n  // object in items\n  if (\n    items &&\n    !Array.isArray(items) &&\n    Object.keys(items.properties() || {}).length\n  ) {\n    return <SchemaProperties schema={items} />;\n  } else if (Array.isArray(items)) {\n    return (\n      <>\n        {items.map((item, idx) => (\n          <Schema schema={item} schemaName={`${idx + 1} item:`} key={idx} />\n        ))}\n      </>\n    );\n  }\n  return <Schema schema={items} schemaName=\"Items:\" />;\n};\n\ninterface AdditionalItemsProps {\n  schema: SchemaType;\n}\n\nconst AdditionalItems: React.FunctionComponent<AdditionalItemsProps> = ({\n  schema,\n}) => {\n  if (schema.ext(SchemaHelpers.extRenderAdditionalInfo) === false) {\n    return null;\n  }\n\n  let type = schema.type();\n  type = Array.isArray(type) ? type : [type];\n  if (!type.includes('array')) {\n    return null;\n  }\n  if (!Array.isArray(schema.items())) {\n    return null;\n  }\n\n  const additionalItems = schema.additionalItems() as any;\n  if (additionalItems === true || additionalItems === undefined) {\n    return (\n      <p className=\"mt-2 text-xs text-gray-700\">\n        Additional items are allowed.\n      </p>\n    );\n  }\n  if (additionalItems === false) {\n    return (\n      <p className=\"mt-2 text-xs text-gray-700\">\n        Additional items are <strong>NOT</strong> allowed.\n      </p>\n    );\n  }\n  return <Schema schemaName=\"Additional items:\" schema={additionalItems} />;\n};\n","import React from 'react';\n\nimport { Schema } from './Schema';\n\nimport { SchemaHelpers } from '../helpers';\n\ninterface Props {\n  name?: string;\n  bindings: any;\n}\n\nexport const Bindings: React.FunctionComponent<Props> = ({\n  name = 'Binding specific information',\n  bindings,\n}) => {\n  if (!bindings || !Object.keys(bindings).length) {\n    return null;\n  }\n\n  const renderedBindings = Object.entries(bindings).map(\n    ([bindingName, binding]) => {\n      const schema = SchemaHelpers.jsonToSchema(binding);\n      const schemaName = (\n        <div className=\"inline-block text-sm\">\n          <span>{name}</span>\n          <span className=\"bg-teal-500 font-bold no-underline text-white uppercase rounded mx-2 px-2 py-1 text-xs\">\n            {bindingName}\n          </span>\n        </div>\n      );\n      return (\n        schema && (\n          <Schema\n            schemaName={schemaName}\n            schema={schema}\n            key={bindingName}\n            onlyTitle={true}\n          />\n        )\n      );\n    },\n  );\n  return <>{renderedBindings}</>;\n};\n","import { createContext, useContext } from 'react';\nimport { ConfigInterface } from '../config';\n\nexport const ConfigContext = createContext<ConfigInterface>({});\n\nexport function useConfig() {\n  return useContext(ConfigContext);\n}\n","import { ConfigInterface } from '../config';\n\nexport class CommonHelpers {\n  static getIdentifier(id: string, config?: ConfigInterface) {\n    const schemaID = config?.schemaID;\n    if (schemaID) {\n      return `${schemaID}-${id}`;\n    }\n    return id;\n  }\n}\n","import React from 'react';\nimport { Server as ServerType } from '@asyncapi/parser';\n\nimport { Security } from './Security';\nimport { Markdown, Schema, Bindings } from '../../components';\n\nimport { useConfig } from '../../contexts';\nimport { CommonHelpers, SchemaHelpers } from '../../helpers';\n\ninterface Props {\n  serverName: string;\n  server: ServerType;\n}\n\nexport const Server: React.FunctionComponent<Props> = ({\n  serverName,\n  server,\n}) => {\n  const config = useConfig();\n\n  if (!server) {\n    return null;\n  }\n\n  const urlVariables = SchemaHelpers.serverVariablesToSchema(\n    server.variables(),\n  );\n  const protocolVersion = server.protocolVersion();\n  const security = server.security();\n\n  return (\n    <div className=\"panel-item\">\n      <div className=\"panel-item--center px-8\">\n        <div className=\"shadow rounded bg-gray-200 p-4 border bg-gray-100\">\n          <div>\n            <span className=\"font-mono text-base\">{server.url()}</span>\n            <span className=\"bg-teal-500 font-bold no-underline text-white uppercase rounded mx-2 px-2 py-1 text-sm\">\n              {protocolVersion\n                ? `${server.protocol()} ${protocolVersion}`\n                : server.protocol()}\n            </span>\n            <span className=\"bg-blue-500 font-bold no-underline text-white uppercase rounded px-2 py-1 text-sm\">\n              {serverName}\n            </span>\n          </div>\n\n          {server.hasDescription() && (\n            <div className=\"mt-2\">\n              <Markdown>{server.description()}</Markdown>\n            </div>\n          )}\n\n          {urlVariables && (\n            <div\n              className=\"mt-2\"\n              id={`${CommonHelpers.getIdentifier(\n                `server-${serverName}-url-variables`,\n                config,\n              )}`}\n            >\n              <Schema\n                schemaName=\"URL Variables\"\n                schema={urlVariables}\n                expanded={true}\n              />\n            </div>\n          )}\n\n          {\n            <div\n              id={`${CommonHelpers.getIdentifier(\n                `server-${serverName}-security`,\n                config,\n              )}`}\n            >\n              <Security protocol={server.protocol()} security={security} />\n            </div>\n          }\n\n          {server.hasBindings() && (\n            <div className=\"mt-2\">\n              <Bindings\n                name=\"Server specific information\"\n                bindings={server.bindings()}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"panel-item--right\" />\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { Server } from './Server';\n\nimport { useConfig, useSpec } from '../../contexts';\nimport { CommonHelpers } from '../../helpers';\nimport { SERVERS_TEXT } from '../../constants';\n\nexport const Servers: React.FunctionComponent = () => {\n  const servers = useSpec().servers();\n  const config = useConfig();\n\n  if (!Object.keys(servers).length) {\n    return null;\n  }\n\n  return (\n    <section\n      id={`${CommonHelpers.getIdentifier('servers', config)}`}\n      className=\"mt-16\"\n    >\n      <h2 className=\"2xl:w-7/12 text-3xl font-light mb-4 px-8\">\n        {SERVERS_TEXT}\n      </h2>\n      <ul>\n        {Object.entries(servers).map(([serverName, server]) => (\n          <li\n            className=\"mb-4\"\n            key={serverName}\n            id={`${CommonHelpers.getIdentifier(\n              `server-${serverName}`,\n              config,\n            )}`}\n          >\n            <Server serverName={serverName} server={server} key={serverName} />\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n","import React from 'react';\n\nimport { Markdown } from './index';\n\ninterface Props {\n  snippet: string | object;\n}\n\nexport const JSONSnippet: React.FunctionComponent<Props> = ({ snippet }) => {\n  if (typeof snippet === 'object') {\n    // change code to markdown's json code block\n    snippet = '```json\\n' + JSON.stringify(snippet, undefined, 2) + '\\n```';\n  }\n\n  return <Markdown>{snippet}</Markdown>;\n};\n","'use strict';\n\nfunction pad(number) {\n  if (number < 10) {\n    return '0' + number;\n  }\n  return number;\n}\n\nexport function toRFCDateTime(date, omitTime, omitDate, milliseconds) {\n  var res = omitDate ? '' : (date.getUTCFullYear() +\n    '-' + pad(date.getUTCMonth() + 1) +\n    '-' + pad(date.getUTCDate()));\n  if (!omitTime) {\n    res += 'T' + pad(date.getUTCHours()) +\n      ':' + pad(date.getUTCMinutes()) +\n      ':' + pad(date.getUTCSeconds()) +\n      (milliseconds ? '.' + (date.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) : '') +\n      'Z';\n  }\n  return res;\n};\n\nexport function ensureMinLength(sample, min) {\n  if (min > sample.length) {\n    return sample.repeat(Math.trunc(min / sample.length) + 1).substring(0, min);\n  }\n  return sample;\n}\n\nexport function mergeDeep(...objects) {\n  const isObject = obj => obj && typeof obj === 'object';\n\n  return objects.reduce((prev, obj) => {\n    Object.keys(obj || {}).forEach(key => {\n      const pVal = prev[key];\n      const oVal = obj[key];\n\n      if (isObject(pVal) && isObject(oVal)) {\n        prev[key] = mergeDeep(pVal, oVal);\n      } else {\n        prev[key] = oVal;\n      }\n    });\n\n    return prev;\n  }, Array.isArray(objects[objects.length - 1]) ? [] : {});\n}\n\n// deterministic UUID sampler\n\nexport function uuid(str) {\n  var hash = hashCode(str);\n  var random = jsf32(hash, hash, hash, hash);\n  var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    var r = (random() * 16) % 16 | 0;\n    return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n  });\n  return uuid;\n}\n\nexport function getResultForCircular(type) {\n  return {\n    value: type === 'object' ?\n        {}\n      : type === 'array' ? [] : undefined\n  };\n}\n\nexport function popSchemaStack(seenSchemasStack, context) {\n  if (context) seenSchemasStack.pop();\n}\n\nfunction hashCode(str) {\n  var hash = 0;\n  if (str.length == 0) return hash;\n  for (var i = 0; i < str.length; i++) {\n    var char = str.charCodeAt(i);\n    hash = ((hash << 5) - hash) + char;\n    hash = hash & hash;\n  }\n  return hash;\n}\n\nfunction jsf32(a, b, c, d) {\n  return function () {\n    a |= 0; b |= 0; c |= 0; d |= 0;\n    var t = a - (b << 27 | b >>> 5) | 0;\n    a = b ^ (c << 17 | c >>> 15);\n    b = c + d | 0;\n    c = d + t | 0;\n    d = a + t | 0;\n    return (d >>> 0) / 4294967296;\n  }\n}\n","const schemaKeywordTypes = {\n  multipleOf: 'number',\n  maximum: 'number',\n  exclusiveMaximum: 'number',\n  minimum: 'number',\n  exclusiveMinimum: 'number',\n\n  maxLength: 'string',\n  minLength: 'string',\n  pattern: 'string',\n\n  items: 'array',\n  maxItems: 'array',\n  minItems: 'array',\n  uniqueItems: 'array',\n  additionalItems: 'array',\n\n  maxProperties: 'object',\n  minProperties: 'object',\n  required: 'object',\n  additionalProperties: 'object',\n  properties: 'object',\n  patternProperties: 'object',\n  dependencies: 'object'\n};\n\nexport function inferType(schema) {\n  if (schema.type !== undefined) {\n    return Array.isArray(schema.type) ? schema.type.length === 0 ? null : schema.type[0] : schema.type;\n  }\n  const keywords = Object.keys(schemaKeywordTypes);\n  for (var i = 0; i < keywords.length; i++) {\n    let keyword = keywords[i];\n    let type = schemaKeywordTypes[keyword];\n    if (schema[keyword] !== undefined) {\n      return type;\n    }\n  }\n\n  return null;\n}\n","import { _samplers } from './openapi-sampler';\nimport { allOfSample } from './allOf';\nimport { inferType } from './infer';\nimport { getResultForCircular, mergeDeep, popSchemaStack } from './utils';\nimport JsonPointer from 'json-pointer';\n\nlet $refCache = {};\n// for circular JS references we use additional array and not object as we need to compare entire schemas and not strings\nlet seenSchemasStack = [];\n\nexport function clearCache() {\n  $refCache = {};\n  seenSchemasStack = [];\n}\n\nfunction inferExample(schema) {\n  let example;\n  if (schema.const !== undefined) {\n    example = schema.const;\n  } else if (schema.examples !== undefined && schema.examples.length) {\n    example = schema.examples[0];\n  } else if (schema.enum !== undefined && schema.enum.length) {\n    example = schema.enum[0];\n  } else if (schema.default !== undefined) {\n    example = schema.default;\n  }\n  return example;\n}\n\nfunction tryInferExample(schema) {\n  const example = inferExample(schema);\n  // case when we don't infer example from schema but take from `const`, `examples`, `default` or `enum` keywords\n  if (example !== undefined) {\n    return {\n      value: example,\n      readOnly: schema.readOnly,\n      writeOnly: schema.writeOnly,\n      type: null,\n    };\n  }\n  return;\n}\n\nexport function traverse(schema, options, spec, context) {\n  // checking circular JS references by checking context\n  // because context is passed only when traversing through nested objects happens\n  if (context) {\n    if (seenSchemasStack.includes(schema)) return getResultForCircular(inferType(schema));\n    seenSchemasStack.push(schema);\n  }\n\n\n  if (context && context.depth > options.maxSampleDepth) {\n    popSchemaStack(seenSchemasStack, context);\n    return getResultForCircular(inferType(schema));\n  }\n\n  if (schema.$ref) {\n    if (!spec) {\n      throw new Error('Your schema contains $ref. You must provide full specification in the third parameter.');\n    }\n    let ref = decodeURIComponent(schema.$ref);\n    if (ref.startsWith('#')) {\n      ref = ref.substring(1);\n    }\n\n    const referenced = JsonPointer.get(spec, ref);\n    let result;\n\n    if ($refCache[ref] !== true) {\n      $refCache[ref] = true;\n      result = traverse(referenced, options, spec, context);\n      $refCache[ref] = false;\n    } else {\n      const referencedType = inferType(referenced);\n      result = getResultForCircular(referencedType);\n    }\n    popSchemaStack(seenSchemasStack, context);\n    return result;\n  }\n\n  if (schema.example !== undefined) {\n    popSchemaStack(seenSchemasStack, context);\n    return {\n      value: schema.example,\n      readOnly: schema.readOnly,\n      writeOnly: schema.writeOnly,\n      type: schema.type,\n    };\n  }\n\n  if (schema.allOf !== undefined) {\n    popSchemaStack(seenSchemasStack, context);\n    return tryInferExample(schema) || allOfSample(\n      { ...schema, allOf: undefined },\n      schema.allOf,\n      options,\n      spec,\n      context,\n    );\n  }\n\n  if (schema.oneOf && schema.oneOf.length) {\n    if (schema.anyOf) {\n      if (!options.quiet) console.warn('oneOf and anyOf are not supported on the same level. Skipping anyOf');\n    }\n    popSchemaStack(seenSchemasStack, context);\n\n    // Make sure to pass down readOnly and writeOnly annotations from the parent\n    const firstOneOf = Object.assign({\n      readOnly: schema.readOnly,\n      writeOnly: schema.writeOnly\n    }, schema.oneOf[0]);\n\n    return traverseOneOrAnyOf(schema, firstOneOf)\n  }\n\n  if (schema.anyOf && schema.anyOf.length) {\n    popSchemaStack(seenSchemasStack, context);\n\n    // Make sure to pass down readOnly and writeOnly annotations from the parent\n    const firstAnyOf = Object.assign({\n      readOnly: schema.readOnly,\n      writeOnly: schema.writeOnly\n    }, schema.anyOf[0]);\n\n    return traverseOneOrAnyOf(schema, firstAnyOf)\n  }\n\n  if (schema.if && schema.then) {\n    popSchemaStack(seenSchemasStack, context);\n    const { if: ifSchema, then, ...rest } = schema;\n    return traverse(mergeDeep(rest, ifSchema, then), options, spec, context);\n  }\n\n  let example = inferExample(schema);\n  let type = null;\n  if (example === undefined) {\n    example = null;\n    type = schema.type;\n    if (Array.isArray(type) && schema.type.length > 0) {\n      type = schema.type[0];\n    }\n    if (!type) {\n      type = inferType(schema);\n    }\n    let sampler = _samplers[type];\n    if (sampler) {\n      example = sampler(schema, options, spec, context);\n    }\n  }\n\n  popSchemaStack(seenSchemasStack, context);\n  return {\n    value: example,\n    readOnly: schema.readOnly,\n    writeOnly: schema.writeOnly,\n    type: type\n  };\n\n  function traverseOneOrAnyOf(schema, selectedSubSchema) {\n    const inferred = tryInferExample(schema);\n    if (inferred !== undefined) {\n      return inferred;\n    }\n\n    const localExample = traverse({...schema, oneOf: undefined, anyOf: undefined }, options, spec, context);\n    const subSchemaExample = traverse(selectedSubSchema, options, spec, context);\n\n    if (typeof localExample.value === 'object' && typeof subSchemaExample.value === 'object') {\n      const mergedExample = mergeDeep(localExample.value, subSchemaExample.value);\n      return {...subSchemaExample, value: mergedExample };\n    }\n\n    return subSchemaExample;\n  }\n}\n","import { traverse } from './traverse';\nimport { mergeDeep } from './utils';\n\nexport function allOfSample(into, children, options, spec, context) {\n  let res = traverse(into, options, spec);\n  const subSamples = [];\n\n  for (let subSchema of children) {\n    const { type, readOnly, writeOnly, value } = traverse({ type: res.type, ...subSchema }, options, spec, context);\n    if (res.type && type && type !== res.type) {\n      console.warn('allOf: schemas with different types can\\'t be merged');\n      res.type = type;\n    }\n    res.type = res.type || type;\n    res.readOnly = res.readOnly || readOnly;\n    res.writeOnly = res.writeOnly || writeOnly;\n    if (value != null) subSamples.push(value);\n  }\n\n  if (res.type === 'object') {\n    res.value = mergeDeep(res.value || {}, ...subSamples.filter(sample => typeof sample === 'object'));\n    return res;\n  } else {\n    if (res.type === 'array') {\n      // TODO: implement arrays\n      if (!options.quiet) console.warn('OpenAPI Sampler: found allOf with \"array\" type. Result may be incorrect');\n    }\n    const lastSample = subSamples[subSamples.length - 1];\n    res.value = lastSample != null ? lastSample : res.value;\n    return res;\n  }\n}\n","export function sampleNumber(schema) {\n  let res = 0;\n  if (typeof schema.exclusiveMinimum === 'boolean' || typeof schema.exclusiveMaximum === 'boolean') { //legacy support for jsonschema draft 4 of exclusiveMaximum/exclusiveMinimum as booleans \n    if (schema.maximum && schema.minimum) {\n      res = schema.exclusiveMinimum ? Math.floor(schema.minimum) + 1 : schema.minimum;\n      if ((schema.exclusiveMaximum && res >= schema.maximum) ||\n        ((!schema.exclusiveMaximum && res > schema.maximum))) {\n        res = (schema.maximum + schema.minimum) / 2;\n      }\n      return res;\n    }\n    if (schema.minimum) {\n      if (schema.exclusiveMinimum) {\n        return Math.floor(schema.minimum) + 1;\n      } else {\n        return schema.minimum;\n      }\n    }\n    if (schema.maximum) {\n      if (schema.exclusiveMaximum) {\n        return (schema.maximum > 0) ? 0 : Math.floor(schema.maximum) - 1;\n      } else {\n        return (schema.maximum > 0) ? 0 : schema.maximum;\n      }\n    }\n  } else {\n    if (schema.minimum) {\n      return schema.minimum;\n    }\n    if (schema.exclusiveMinimum) {\n      res = Math.floor(schema.exclusiveMinimum) + 1;\n\n      if (res === schema.exclusiveMaximum) {\n        res = (res + Math.floor(schema.exclusiveMaximum) - 1) / 2;\n      }\n    } else if (schema.exclusiveMaximum) {\n      res = Math.floor(schema.exclusiveMaximum) - 1;\n    } else if (schema.maximum) {\n      res = schema.maximum;\n    }\n  }\n\n  return res;\n}\n","'use strict';\n\nimport { ensureMinLength, toRFCDateTime, uuid } from '../utils';\n\nconst passwordSymbols = 'qwerty!@#$%^123456';\n\nfunction emailSample() {\n  return 'user@example.com';\n}\nfunction idnEmailSample() {\n  return 'пошта@укр.нет';\n}\nfunction passwordSample(min, max) {\n  let res = 'pa$$word';\n  if (min > res.length) {\n    res += '_';\n    res += ensureMinLength(passwordSymbols, min - res.length).substring(0, min - res.length);\n  }\n  return res;\n}\n\nfunction commonDateTimeSample({ min, max, omitTime, omitDate }) {\n  let res = toRFCDateTime(new Date('2019-08-24T14:15:22.123Z'), omitTime, omitDate, false);\n  if (res.length < min) {\n    console.warn(`Using minLength = ${min} is incorrect with format \"date-time\"`);\n  }\n  if (max && res.length > max) {\n    console.warn(`Using maxLength = ${max} is incorrect with format \"date-time\"`);\n  }\n  return res;\n}\n\nfunction dateTimeSample(min, max) {\n  return commonDateTimeSample({ min, max, omitTime: false, omitDate: false });\n}\n\nfunction dateSample(min, max) {\n  return commonDateTimeSample({ min, max, omitTime: true, omitDate: false });\n}\n\nfunction timeSample(min, max) {\n  return commonDateTimeSample({ min, max, omitTime: false, omitDate: true }).slice(1);\n}\n\nfunction defaultSample(min, max) {\n  let res = ensureMinLength('string', min);\n  if (max && res.length > max) {\n    res = res.substring(0, max);\n  }\n  return res;\n}\n\nfunction ipv4Sample() {\n  return '192.168.0.1';\n}\n\nfunction ipv6Sample() {\n  return '2001:0db8:85a3:0000:0000:8a2e:0370:7334';\n}\n\nfunction hostnameSample() {\n  return 'example.com';\n}\nfunction idnHostnameSample() {\n  return 'приклад.укр';\n}\nfunction uriSample() {\n  return 'http://example.com';\n}\n\nfunction uriReferenceSample() {\n  return '../dictionary';\n}\n\nfunction uriTemplateSample() {\n  return 'http://example.com/{endpoint}';\n}\n\nfunction iriSample() {\n  return 'http://example.com';\n}\n\nfunction iriReferenceSample() {\n  return '../словник';\n}\n\nfunction uuidSample(_min, _max, propertyName) {\n  return uuid(propertyName || 'id');\n}\n\nfunction jsonPointerSample() {\n  return '/json/pointer';\n}\n\nfunction relativeJsonPointerSample() {\n  return '1/relative/json/pointer';\n}\n\nfunction regexSample() {\n  return '/regex/';\n}\n\nconst stringFormats = {\n  'email': emailSample,\n  'idn-email': idnEmailSample, // https://tools.ietf.org/html/rfc6531#section-3.3\n  'password': passwordSample,\n  'date-time': dateTimeSample,\n  'date': dateSample,\n  'time': timeSample, // full-time in https://tools.ietf.org/html/rfc3339#section-5.6\n  'ipv4': ipv4Sample,\n  'ipv6': ipv6Sample,\n  'hostname': hostnameSample,\n  'idn-hostname': idnHostnameSample, // https://tools.ietf.org/html/rfc5890#section-2.3.2.3\n  'iri': iriSample, // https://tools.ietf.org/html/rfc3987\n  'iri-reference': iriReferenceSample,\n  'uri': uriSample,\n  'uri-reference': uriReferenceSample, // either a URI or relative-reference https://tools.ietf.org/html/rfc3986#section-4.1\n  'uri-template': uriTemplateSample,\n  'uuid': uuidSample,\n  'default': defaultSample,\n  'json-pointer': jsonPointerSample,\n  'relative-json-pointer': relativeJsonPointerSample, // https://tools.ietf.org/html/draft-handrews-relative-json-pointer-01\n  'regex': regexSample,\n};\n\nexport function sampleString(schema, options, spec, context) {\n  let format = schema.format || 'default';\n  let sampler = stringFormats[format] || defaultSample;\n  let propertyName = context && context.propertyName;\n  return sampler(schema.minLength | 0, schema.maxLength, propertyName);\n}\n","import { traverse, clearCache } from './traverse';\nimport { sampleArray, sampleBoolean, sampleNumber, sampleObject, sampleString } from './samplers/index';\n\nexport var _samplers = {};\n\nconst defaults = {\n  skipReadOnly: false,\n  maxSampleDepth: 15,\n};\n\nexport function sample(schema, options, spec) {\n  let opts = Object.assign({}, defaults, options);\n  clearCache();\n  return traverse(schema, opts, spec).value;\n};\n\nexport function _registerSampler(type, sampler) {\n  _samplers[type] = sampler;\n};\n\nexport { inferType } from './infer';\n\n_registerSampler('array', sampleArray);\n_registerSampler('boolean', sampleBoolean);\n_registerSampler('integer', sampleNumber);\n_registerSampler('number', sampleNumber);\n_registerSampler('object', sampleObject);\n_registerSampler('string', sampleString);\n","import { traverse } from '../traverse';\nexport function sampleArray(schema, options = {}, spec, context) {\n  const depth = (context && context.depth || 1);\n\n  let arrayLength = Math.min(schema.maxItems != undefined ? schema.maxItems : Infinity, schema.minItems || 1);\n  // for the sake of simplicity, we're treating `contains` in a similar way to `items`\n  const items = schema.prefixItems || schema.items || schema.contains;\n  if (Array.isArray(items)) {\n    arrayLength = Math.max(arrayLength, items.length);\n  }\n\n  let itemSchemaGetter = itemNumber => {\n    if (Array.isArray(items)) {\n      return items[itemNumber] || {};\n    }\n    return items || {};\n  };\n\n  let res = [];\n  if (!items) return res;\n\n  for (let i = 0; i < arrayLength; i++) {\n    let itemSchema = itemSchemaGetter(i);\n    let { value: sample } = traverse(itemSchema, options, spec, {depth: depth + 1});\n    res.push(sample);\n  }\n  return res;\n}\n","export function sampleBoolean(schema) {\n  return true; // let be optimistic :)\n}\n","import { traverse } from '../traverse';\nexport function sampleObject(schema, options = {}, spec, context) {\n  let res = {};\n  const depth = (context && context.depth || 1);\n\n  if (schema && typeof schema.properties === 'object') {\n    let requiredKeys = (Array.isArray(schema.required) ? schema.required : []);\n    let requiredKeyDict = requiredKeys.reduce((dict, key) => {\n      dict[key] = true;\n      return dict;\n    }, {});\n\n    Object.keys(schema.properties).forEach(propertyName => {\n      // skip before traverse that could be costly\n      if (options.skipNonRequired && !requiredKeyDict.hasOwnProperty(propertyName)) {\n        return;\n      }\n\n      const sample = traverse(schema.properties[propertyName], options, spec, { propertyName, depth: depth + 1 });\n      if (options.skipReadOnly && sample.readOnly) {\n        return;\n      }\n\n      if (options.skipWriteOnly && sample.writeOnly) {\n        return;\n      }\n      res[propertyName] = sample.value;\n    });\n  }\n\n  if (schema && typeof schema.additionalProperties === 'object') {\n    const propertyName = schema.additionalProperties['x-additionalPropertiesName'] || 'property';\n    res[`${String(propertyName)}1`] = traverse(schema.additionalProperties, options, spec, {depth: depth + 1 }).value;\n    res[`${String(propertyName)}2`] = traverse(schema.additionalProperties, options, spec, {depth: depth + 1 }).value;\n  }\n  return res;\n}\n","import { Message } from '@asyncapi/parser';\n// @ts-ignore\nimport { sample } from 'openapi-sampler';\n\nimport { MessageExample } from '../types';\n\nexport class MessageHelpers {\n  static generateExample(schema: any, options: any = {}) {\n    try {\n      return this.sanitizeExample(sample(schema, options)) || '';\n    } catch (e) {\n      return '';\n    }\n  }\n\n  static sanitizeExample(schema: any): any {\n    if (typeof schema === 'object' && schema && !Array.isArray(schema)) {\n      return Object.entries(schema).reduce((obj, [propertyName, property]) => {\n        if (\n          !propertyName.startsWith('x-parser-') &&\n          !propertyName.startsWith('x-schema-private-')\n        ) {\n          obj[propertyName] = this.sanitizeExample(property);\n        }\n        return obj;\n      }, {});\n    }\n    return schema;\n  }\n\n  static getPayloadExamples(msg: Message): MessageExample[] | undefined {\n    const examples = msg.examples();\n    if (Array.isArray(examples) && examples.some(e => e.payload)) {\n      const messageExamples = examples\n        .flatMap(e => {\n          if (!e.payload) {\n            return;\n          }\n          return {\n            name: e.name,\n            summary: e.summary,\n            example: e.payload,\n          };\n        })\n        .filter(Boolean) as MessageExample[];\n\n      if (messageExamples.length > 0) {\n        return messageExamples;\n      }\n    }\n\n    const payload = msg.payload();\n    if (payload && payload.examples()) {\n      return payload.examples().map(example => ({ example }));\n    }\n\n    return;\n  }\n\n  static getHeadersExamples(msg: Message): MessageExample[] | undefined {\n    const examples = msg.examples();\n    if (Array.isArray(examples) && examples.some(e => e.headers)) {\n      const messageExamples = examples\n        .flatMap(e => {\n          if (!e.headers) {\n            return;\n          }\n          return {\n            name: e.name,\n            summary: e.summary,\n            example: e.headers,\n          };\n        })\n        .filter(Boolean) as MessageExample[];\n\n      if (messageExamples.length > 0) {\n        return messageExamples;\n      }\n    }\n\n    const headers = msg.headers();\n    if (headers && headers.examples()) {\n      return headers.examples().map(example => ({ example }));\n    }\n\n    return;\n  }\n}\n","import { AsyncAPIDocument } from '@asyncapi/parser';\n\nexport type PropsSchema =\n  | string\n  | FetchingSchemaInterface\n  | AsyncAPIDocument\n  | object;\n\nexport type NullableAsyncApi = AsyncAPIDocument | null;\n\nexport interface AsyncApiState {\n  validatedSchema: NullableAsyncApi;\n  error?: ErrorObject;\n}\n\nexport function isFetchingSchemaInterface(\n  schema: PropsSchema,\n): schema is FetchingSchemaInterface {\n  return (schema as FetchingSchemaInterface).url !== undefined;\n}\n\nexport interface FetchingSchemaInterface {\n  url: string;\n  requestOptions?: RequestInit;\n}\n\nexport interface ParserReturn {\n  asyncapi?: AsyncAPIDocument;\n  error?: ErrorObject;\n}\n\nexport enum PayloadType {\n  PUBLISH = 'publish',\n  SUBSCRIBE = 'subscribe',\n}\n\nexport interface MessageExample {\n  name?: string;\n  summary?: string;\n  example: any;\n}\n\nexport interface ValidationError {\n  title: string;\n  location: {\n    jsonPointer: string;\n    startLine: number;\n    startColumn: number;\n    startOffset: number;\n    endLine: number;\n    endColumn: number;\n    endOffset: number;\n  };\n}\n\nexport interface ErrorObject {\n  type: string;\n  title: string;\n  detail?: string;\n  parsedJSON?: any;\n  validationErrors?: ValidationError[];\n  location?: {\n    startLine: number;\n    startColumn: number;\n    startOffset: number;\n  };\n  refs?: Array<{\n    title: string;\n    jsonPointer: string;\n    startLine: number;\n    startColumn: number;\n    startOffset: number;\n    endLine: number;\n    endColumn: number;\n    endOffset: number;\n  }>;\n}\n","import React, { useState } from 'react';\nimport { Message, Schema } from '@asyncapi/parser';\n\nimport { CollapseButton, JSONSnippet } from '../../components';\nimport { MessageHelpers } from '../../helpers/message';\nimport { MessageExample as MessageExampleType } from '../../types';\n\ninterface Props {\n  message: Message;\n}\n\nexport const MessageExample: React.FunctionComponent<Props> = ({ message }) => {\n  if (!message) {\n    return null;\n  }\n\n  const payload = message.payload();\n  const headers = message.headers();\n\n  return (\n    <div className=\"bg-gray-800 px-8 py-4 mt-4 -mx-8 2xl:mx-0 2xl:px-4 2xl:rounded examples\">\n      <h4 className=\"text-white text-lg\">Examples</h4>\n      {payload && (\n        <Example\n          type=\"Payload\"\n          schema={payload}\n          examples={MessageHelpers.getPayloadExamples(message)}\n        />\n      )}\n      {headers && (\n        <Example\n          type=\"Headers\"\n          schema={headers}\n          examples={MessageHelpers.getHeadersExamples(message)}\n        />\n      )}\n    </div>\n  );\n};\n\ninterface ExampleProps {\n  type: 'Payload' | 'Headers';\n  schema: Schema;\n  examples?: MessageExampleType[];\n}\n\nexport const Example: React.FunctionComponent<ExampleProps> = ({\n  type = 'Payload',\n  schema,\n  examples = [],\n}) => {\n  const [expand, setExpand] = useState(false);\n\n  return (\n    <div className=\"mt-4\">\n      <div>\n        <CollapseButton\n          onClick={() => setExpand(prev => !prev)}\n          chevronProps={{\n            className: `fill-current text-gray-200 ${\n              expand ? '-rotate-180' : '-rotate-90'\n            }`,\n          }}\n        >\n          <span className=\"px-2 py-1 mr-2 text-gray-200 text-sm border rounded focus:outline-none\">\n            {type}\n          </span>\n        </CollapseButton>\n      </div>\n      <div className={expand ? 'block' : 'hidden'}>\n        {examples && examples.length > 0 ? (\n          <ul>\n            {examples.map((example, idx) => (\n              <li className=\"mt-4\" key={idx}>\n                <h5 className=\"text-xs font-bold text-gray-500\">\n                  {example.name\n                    ? `#${idx + 1} Example - ${example.name}`\n                    : `#${idx + 1} Example`}\n                </h5>\n                {example.summary && (\n                  <p className=\"text-xs font-bold text-gray-500\">\n                    {example.summary}\n                  </p>\n                )}\n                <div className=\"mt-1\">\n                  <JSONSnippet\n                    snippet={MessageHelpers.sanitizeExample(example.example)}\n                  />\n                </div>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <div className=\"mt-4\">\n            <JSONSnippet\n              snippet={MessageHelpers.generateExample(schema.json())}\n            />\n            <h6 className=\"text-xs font-bold text-gray-600 italic mt-2\">\n              This example has been generated automatically.\n            </h6>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Message as MessageType } from '@asyncapi/parser';\n\nimport { MessageExample } from './MessageExample';\nimport {\n  Href,\n  Markdown,\n  Schema,\n  Bindings,\n  Tags,\n  Extensions,\n} from '../../components';\n\nimport { useConfig } from '../../contexts';\nimport { CommonHelpers } from '../../helpers';\nimport {\n  CONTENT_TYPES_SITE,\n  EXTERAL_DOCUMENTATION_TEXT,\n} from '../../constants';\n\ninterface Props {\n  message: MessageType;\n  messageName?: string;\n  index?: number | string;\n  showExamples?: boolean;\n}\n\nexport const Message: React.FunctionComponent<Props> = ({\n  message,\n  messageName,\n  index,\n  showExamples = false,\n}) => {\n  const config = useConfig();\n\n  if (!message) {\n    return null;\n  }\n\n  // check typeof as fallback for older version than `2.4.0`\n  const messageId = typeof message.id === 'function' && message.id();\n  const title = message.title();\n  const summary = message.summary();\n  const payload = message.payload();\n  const headers = message.headers();\n  const correlationId = message.correlationId();\n\n  const contentType = message.contentType();\n  const externalDocs = message.externalDocs();\n  const showInfoList = contentType || externalDocs;\n\n  return (\n    <div className=\"panel-item\">\n      <div className=\"panel-item--center px-8\">\n        <div className=\"shadow rounded bg-gray-200 p-4 border\">\n          <div>\n            {index !== undefined && (\n              <span className=\"text-gray-700 font-bold mr-2\">#{index}</span>\n            )}\n            {title && <span className=\"text-gray-700 mr-2\">{title}</span>}\n            <span className=\"border text-orange-600 rounded text-xs py-0 px-2\">\n              {message.uid()}\n            </span>\n          </div>\n\n          {summary && <p className=\"text-gray-600 text-sm\">{summary}</p>}\n\n          {showInfoList && (\n            <ul className=\"leading-normal mt-2 mb-4 space-x-2 space-y-2\">\n              {contentType && (\n                <li className=\"inline-block\">\n                  <Href\n                    className=\"border border-solid border-orange-300 hover:bg-orange-300 hover:text-orange-600 text-orange-500 font-bold no-underline text-xs uppercase rounded px-3 py-1\"\n                    href={`${CONTENT_TYPES_SITE}/${contentType}`}\n                  >\n                    <span>{contentType}</span>\n                  </Href>\n                </li>\n              )}\n              {externalDocs && (\n                <li className=\"inline-block\">\n                  <Href\n                    className=\"border border-solid border-orange-300 hover:bg-orange-300 hover:text-orange-600 text-orange-500 font-bold no-underline text-xs uppercase rounded px-3 py-1\"\n                    href={externalDocs.url()}\n                  >\n                    <span>{EXTERAL_DOCUMENTATION_TEXT}</span>\n                  </Href>\n                </li>\n              )}\n            </ul>\n          )}\n\n          {messageId && (\n            <div className=\"border bg-gray-100 rounded px-4 py-2 mt-2\">\n              <div className=\"text-sm text-gray-700\">\n                Message ID\n                <span className=\"border text-orange-600 rounded text-xs ml-2 py-0 px-2\">\n                  {messageId}\n                </span>\n              </div>\n            </div>\n          )}\n\n          {correlationId && (\n            <div className=\"border bg-gray-100 rounded px-4 py-2 mt-2\">\n              <div className=\"text-sm text-gray-700\">\n                Correlation ID\n                <span className=\"border text-orange-600 rounded text-xs ml-2 py-0 px-2\">\n                  {correlationId.location()}\n                </span>\n              </div>\n\n              {correlationId.hasDescription() && (\n                <div className=\"mt-2\">\n                  <Markdown>{correlationId.description()}</Markdown>\n                </div>\n              )}\n            </div>\n          )}\n\n          {message.hasDescription() && (\n            <div className=\"mt-2\">\n              <Markdown>{message.description()}</Markdown>\n            </div>\n          )}\n\n          {payload && (\n            <div\n              className=\"mt-2\"\n              id={\n                messageName\n                  ? CommonHelpers.getIdentifier(\n                      `message-${messageName}-payload`,\n                      config,\n                    )\n                  : undefined\n              }\n            >\n              <Schema schemaName=\"Payload\" schema={payload} />\n            </div>\n          )}\n          {headers && (\n            <div\n              className=\"mt-2\"\n              id={\n                messageName\n                  ? CommonHelpers.getIdentifier(\n                      `message-${messageName}-headers`,\n                      config,\n                    )\n                  : undefined\n              }\n            >\n              <Schema schemaName=\"Headers\" schema={headers} />\n            </div>\n          )}\n\n          {message.hasBindings() && (\n            <div className=\"mt-2\">\n              <Bindings\n                name=\"Message specific information\"\n                bindings={message.bindings()}\n              />\n            </div>\n          )}\n\n          <Extensions item={message} />\n\n          {message.hasTags() && (\n            <div className=\"mt-2\">\n              <Tags tags={message.tags()} />\n            </div>\n          )}\n        </div>\n      </div>\n\n      {showExamples && (\n        <div className=\"panel-item--right px-8\">\n          <MessageExample message={message} />\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { Channel, Operation as OperationType } from '@asyncapi/parser';\n\nimport { Message } from '../Messages/Message';\nimport { Security } from '../Servers/Security';\nimport {\n  Href,\n  Markdown,\n  Schema,\n  Bindings,\n  Tags,\n  Extensions,\n} from '../../components';\n\nimport { useConfig } from '../../contexts';\nimport { CommonHelpers, SchemaHelpers } from '../../helpers';\nimport { EXTERAL_DOCUMENTATION_TEXT } from '../../constants';\nimport { PayloadType } from '../../types';\n\ninterface Props {\n  type: PayloadType;\n  operation: OperationType;\n  channelName: string;\n  channel: Channel;\n}\n\nexport const Operation: React.FunctionComponent<Props> = props => {\n  const config = useConfig();\n  const { type = PayloadType.PUBLISH, operation, channelName, channel } = props;\n\n  if (!operation || !channel) {\n    return null;\n  }\n\n  // check typeof as fallback for older version than `2.2.0`\n  const servers = typeof channel.servers === 'function' && channel.servers();\n  // check typeof as fallback for older version than `2.4.0`\n  const security =\n    typeof operation.security === 'function' && operation.security();\n  const parameters = SchemaHelpers.parametersToSchema(channel.parameters());\n\n  return (\n    <div>\n      <div className=\"panel-item--center px-8\">\n        <OperationInfo {...props} />\n\n        {servers && servers.length > 0 ? (\n          <div className=\"mt-2 text-sm\">\n            <p>Available only on servers:</p>\n            <ul className=\"flex flex-wrap leading-normal\">\n              {servers.map(server => (\n                <li className=\"inline-block mt-2 mr-2\" key={server as string}>\n                  <a\n                    href={`#${CommonHelpers.getIdentifier(\n                      'server-' + server,\n                      config,\n                    )}`}\n                    className=\"border border-solid border-blue-300 hover:bg-blue-300 hover:text-blue-600 text-blue-500 font-bold no-underline text-xs rounded px-3 py-1 cursor-pointer\"\n                  >\n                    <span className=\"underline\">{server}</span>\n                  </a>\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : null}\n\n        {parameters && (\n          <div\n            className=\"mt-2\"\n            id={CommonHelpers.getIdentifier(\n              `operation-${type}-${channelName}-parameters`,\n              config,\n            )}\n          >\n            <Schema\n              schemaName=\"Parameters\"\n              schema={parameters}\n              expanded={true}\n            />\n          </div>\n        )}\n\n        {security && (\n          <div\n            className=\"mt-2\"\n            id={CommonHelpers.getIdentifier(\n              `operation-${type}-${channelName}-security`,\n              config,\n            )}\n          >\n            <Security\n              security={security}\n              header=\"Additional security requirements\"\n            />\n          </div>\n        )}\n\n        {channel.hasBindings() && (\n          <div className=\"mt-2\">\n            <Bindings\n              name=\"Channel specific information\"\n              bindings={channel.bindings()}\n            />\n          </div>\n        )}\n\n        <Extensions name=\"Channel Extensions\" item={channel} />\n\n        {operation.hasBindings() && (\n          <div className=\"mt-2\">\n            <Bindings\n              name=\"Operation specific information\"\n              bindings={operation.bindings()}\n            />\n          </div>\n        )}\n\n        <Extensions name=\"Operation Extensions\" item={operation} />\n\n        {operation.hasTags() && (\n          <div className=\"mt-2\">\n            <Tags tags={operation.tags()} />\n          </div>\n        )}\n      </div>\n\n      <div\n        className=\"w-full mt-4\"\n        id={CommonHelpers.getIdentifier(\n          `operation-${type}-${channelName}-message`,\n          config,\n        )}\n      >\n        {operation.hasMultipleMessages() ? (\n          <div className=\"mt-2\">\n            <p className=\"px-8\">\n              Accepts <strong>one of</strong> the following messages:\n            </p>\n            <ul>\n              {operation.messages().map((msg, idx) => (\n                <li className=\"mt-4\" key={idx}>\n                  <Message message={msg} index={idx} showExamples={true} />\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : (\n          <div className=\"mt-2\">\n            <p className=\"px-8\">Accepts the following message:</p>\n            <div className=\"mt-2\">\n              <Message\n                message={(operation.message as (index: number) => any)(0)}\n                showExamples={true}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport const OperationInfo: React.FunctionComponent<Props> = ({\n  type = PayloadType.PUBLISH,\n  operation,\n  channelName,\n  channel,\n}) => {\n  const operationSummary = operation.summary();\n  const externalDocs = operation.externalDocs();\n  const operationId = operation.id();\n\n  return (\n    <>\n      <div className=\"mb-4\">\n        <h3>\n          <span\n            className={`font-mono border uppercase p-1 rounded mr-2 ${\n              type === PayloadType.PUBLISH\n                ? 'border-blue-600 text-blue-500'\n                : 'border-green-600 text-green-600'\n            }`}\n            title={type}\n          >\n            {type === PayloadType.PUBLISH ? 'PUB' : 'SUB'}\n          </span>{' '}\n          <span className=\"font-mono text-base\">{channelName}</span>\n        </h3>\n      </div>\n\n      {channel.hasDescription() && (\n        <div className=\"mt-2\">\n          <Markdown>{channel.description()}</Markdown>\n        </div>\n      )}\n      {operationSummary && (\n        <p className=\"text-gray-600 text-sm mt-2\">{operationSummary}</p>\n      )}\n      {operation.hasDescription() && (\n        <div className=\"mt-2\">\n          <Markdown>{operation.description()}</Markdown>\n        </div>\n      )}\n\n      {externalDocs && (\n        <ul className=\"leading-normal mt-2 mb-4 space-x-2 space-y-2\">\n          {externalDocs && (\n            <li className=\"inline-block\">\n              <Href\n                className=\"border border-solid border-orange-300 hover:bg-orange-300 hover:text-orange-600 text-orange-500 font-bold no-underline text-xs uppercase rounded px-3 py-1\"\n                href={externalDocs.url()}\n              >\n                <span>{EXTERAL_DOCUMENTATION_TEXT}</span>\n              </Href>\n            </li>\n          )}\n        </ul>\n      )}\n\n      {operationId && (\n        <div className=\"border bg-gray-100 rounded px-4 py-2 mt-2\">\n          <div className=\"text-sm text-gray-700\">\n            Operation ID\n            <span className=\"border text-orange-600 rounded text-xs ml-2 py-0 px-2\">\n              {operationId}\n            </span>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import React from 'react';\n\nimport { Operation } from './Operation';\n\nimport { useConfig, useSpec } from '../../contexts';\nimport { CommonHelpers } from '../../helpers';\nimport { OPERATIONS_TEXT } from '../../constants';\nimport { PayloadType } from '../../types';\n\nexport const Operations: React.FunctionComponent = () => {\n  const channels = useSpec().channels();\n  const config = useConfig();\n\n  if (!Object.keys(channels).length) {\n    return null;\n  }\n\n  const operationsList: React.ReactNodeArray = [];\n  Object.entries(channels).forEach(([channelName, channel]) => {\n    if (channel.hasPublish()) {\n      operationsList.push(\n        <li\n          className=\"mb-12\"\n          key={`pub-${channelName}`}\n          id={CommonHelpers.getIdentifier(\n            `operation-${PayloadType.PUBLISH}-${channelName}`,\n            config,\n          )}\n        >\n          <Operation\n            type={PayloadType.PUBLISH}\n            operation={channel.publish()}\n            channelName={channelName}\n            channel={channel}\n          />\n        </li>,\n      );\n    }\n    if (channel.hasSubscribe()) {\n      operationsList.push(\n        <li\n          className=\"mb-12\"\n          key={`sub-${channelName}`}\n          id={CommonHelpers.getIdentifier(\n            `operation-${PayloadType.SUBSCRIBE}-${channelName}`,\n            config,\n          )}\n        >\n          <Operation\n            type={PayloadType.SUBSCRIBE}\n            operation={channel.subscribe()}\n            channelName={channelName}\n            channel={channel}\n          />\n        </li>,\n      );\n    }\n  });\n\n  return (\n    <section\n      id={`${CommonHelpers.getIdentifier('operations', config)}`}\n      className=\"mt-16\"\n    >\n      <h2 className=\"2xl:w-7/12 text-3xl font-light mb-4 px-8\">\n        {OPERATIONS_TEXT}\n      </h2>\n      <ul>{operationsList}</ul>\n    </section>\n  );\n};\n","import React from 'react';\n\nimport { Message } from './Message';\n\nimport { useConfig, useSpec } from '../../contexts';\nimport { CommonHelpers } from '../../helpers';\nimport { MESSAGES_TEXT } from '../../constants';\n\nexport const Messages: React.FunctionComponent = () => {\n  const asyncapi = useSpec();\n  const config = useConfig();\n  const messages = asyncapi.hasComponents() && asyncapi.components().messages();\n\n  if (!messages || Object.keys(messages).length === 0) {\n    return null;\n  }\n\n  return (\n    <section\n      id={`${CommonHelpers.getIdentifier('messages', config)}`}\n      className=\"mt-16\"\n    >\n      <h2 className=\"2xl:w-7/12 text-3xl font-light mb-4 px-8\">\n        {MESSAGES_TEXT}\n      </h2>\n      <ul>\n        {Object.entries(messages).map(([messageName, message], idx) => (\n          <li\n            className=\"mb-4\"\n            key={messageName}\n            id={CommonHelpers.getIdentifier(`message-${messageName}`, config)}\n          >\n            <Message\n              messageName={messageName}\n              message={message}\n              index={idx + 1}\n              key={messageName}\n            />\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n","import React from 'react';\nimport { Schema as SchemaType } from '@asyncapi/parser';\n\nimport { Schema as SchemaComponent } from '../../components';\n\ninterface Props {\n  schemaName: string;\n  schema: SchemaType;\n}\n\nexport const Schema: React.FunctionComponent<Props> = ({\n  schemaName,\n  schema,\n}) => {\n  if (!schema) {\n    return null;\n  }\n\n  return (\n    <div>\n      <div className=\"panel-item--center px-8\">\n        <div className=\"shadow rounded px-4 py-2 border bg-gray-200\">\n          <SchemaComponent schemaName={schemaName} schema={schema} />\n        </div>\n      </div>\n\n      <div className=\"w-full mt-4\" />\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { Schema } from './Schema';\n\nimport { useConfig, useSpec } from '../../contexts';\nimport { CommonHelpers } from '../../helpers';\nimport { SCHEMAS_TEXT } from '../../constants';\n\nexport const Schemas: React.FunctionComponent = () => {\n  const asyncapi = useSpec();\n  const config = useConfig();\n  const schemas = asyncapi.hasComponents() && asyncapi.components().schemas();\n\n  if (!schemas || Object.keys(schemas).length === 0) {\n    return null;\n  }\n\n  return (\n    <section\n      id={`${CommonHelpers.getIdentifier('schemas', config)}`}\n      className=\"mt-16\"\n    >\n      <h2 className=\"2xl:w-7/12 text-3xl font-light mb-4 px-8\">\n        {SCHEMAS_TEXT}\n      </h2>\n      <ul>\n        {Object.entries(schemas).map(([schemaName, schema]) => (\n          <li\n            className=\"mb-4\"\n            key={schemaName}\n            id={CommonHelpers.getIdentifier(`schema-${schemaName}`, config)}\n          >\n            <Schema schemaName={schemaName} schema={schema} />\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n","import React from 'react';\n\nimport { ERROR_TEXT } from '../../constants';\nimport { ErrorObject, ValidationError } from '../../types';\n\nconst renderErrors = (errors: ValidationError[]): React.ReactNode => {\n  if (!errors) {\n    return null;\n  }\n\n  return errors\n    .map((singleError: ValidationError, index: number) => {\n      if (!singleError || !singleError.title || !singleError.location) {\n        return null;\n      }\n      return (\n        <div key={index} className=\"flex\">\n          <span>{`${singleError.location.startLine}.`}</span>\n          <code className=\"whitespace-pre-wrap break-all ml-2\">\n            {singleError.title}\n          </code>\n        </div>\n      );\n    })\n    .filter(Boolean);\n};\n\ninterface Props {\n  error: ErrorObject;\n}\n\nexport const Error: React.FunctionComponent<Props> = ({ error }) => {\n  if (!error) {\n    return null;\n  }\n  const { title, validationErrors } = error;\n\n  return (\n    <div className=\"panel-item\">\n      <div className=\"panel-item--center p-8\">\n        <section className=\"shadow rounded bg-gray-200 border-red-500 border-l-8\">\n          <h2 className=\"p-2\">\n            {title ? `${ERROR_TEXT}: ${title}` : ERROR_TEXT}\n          </h2>\n          {validationErrors && validationErrors.length ? (\n            <div className=\"bg-gray-800 text-white text-xs p-2\">\n              <pre>{renderErrors(validationErrors)}</pre>\n            </div>\n          ) : null}\n        </section>\n      </div>\n      <div className=\"panel-item--right\" />\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { AsyncAPIDocument } from '@asyncapi/parser';\nimport useResizeObserver from 'use-resize-observer';\n\nimport { Sidebar } from '../Sidebar/Sidebar';\nimport { Info } from '../Info/Info';\nimport { Servers } from '../Servers/Servers';\nimport { Operations } from '../Operations/Operations';\nimport { Messages } from '../Messages/Messages';\nimport { Schemas } from '../Schemas/Schemas';\nimport { Error } from '../Error/Error';\n\nimport { ConfigInterface } from '../../config';\nimport { SpecificationContext, ConfigContext } from '../../contexts';\nimport { ErrorObject } from '../../types';\n\ninterface Props {\n  asyncapi: AsyncAPIDocument;\n  config: ConfigInterface;\n  error?: ErrorObject;\n}\n\nconst AsyncApiLayout: React.FunctionComponent<Props> = ({\n  asyncapi,\n  config,\n  error = null,\n}) => {\n  const [observerClassName, setObserverClassName] = useState('container:xl');\n\n  const { ref } = useResizeObserver<HTMLDivElement>({\n    onResize: ({ width }) => {\n      requestAnimationFrame(() => {\n        if (width === undefined) {\n          return;\n        }\n\n        const possibleClassName =\n          width <= 1280 ? 'container:xl' : 'container:base';\n        if (possibleClassName !== observerClassName) {\n          setObserverClassName(possibleClassName);\n        }\n      });\n    },\n  });\n\n  return (\n    <ConfigContext.Provider value={config}>\n      <SpecificationContext.Provider value={asyncapi}>\n        <section className=\"aui-root\">\n          <div\n            className={`${observerClassName} relative md:flex bg-white leading-normal`}\n            id={config.schemaID || undefined}\n            ref={ref}\n          >\n            {config.show?.sidebar && <Sidebar config={config.sidebar} />}\n            <div className=\"panel--center relative py-8 flex-1\">\n              <div className=\"relative z-10\">\n                {config.show?.errors && error && <Error error={error} />}\n                {config.show?.info && <Info />}\n                {config.show?.servers && <Servers />}\n                {config.show?.operations && <Operations />}\n                {config.show?.messages && <Messages />}\n                {config.show?.schemas && <Schemas />}\n              </div>\n              <div className=\"panel--right absolute top-0 right-0 h-full bg-gray-800\" />\n            </div>\n          </div>\n        </section>\n      </SpecificationContext.Provider>\n    </ConfigContext.Provider>\n  );\n};\n\nexport default AsyncApiLayout;\n","import React, { Component } from 'react';\nimport { AsyncAPIDocument } from '@asyncapi/parser';\n\nimport { SpecificationHelpers } from '../../helpers';\nimport { ErrorObject, PropsSchema } from '../../types';\nimport { ConfigInterface, defaultConfig } from '../../config';\n\nimport AsyncApiLayout from './Layout';\nimport { Error } from '../Error/Error';\n\nexport interface AsyncApiProps {\n  schema: PropsSchema;\n  config?: Partial<ConfigInterface>;\n  error?: ErrorObject;\n}\n\ninterface AsyncAPIState {\n  asyncapi?: AsyncAPIDocument;\n  error?: ErrorObject;\n}\n\nclass AsyncApiComponent extends Component<AsyncApiProps, AsyncAPIState> {\n  state: AsyncAPIState = {\n    asyncapi: undefined,\n    error: undefined,\n  };\n\n  constructor(props: AsyncApiProps) {\n    super(props);\n\n    const parsedSpec = SpecificationHelpers.retrieveParsedSpec(props.schema);\n    if (parsedSpec) {\n      this.state = { asyncapi: parsedSpec };\n    }\n    return;\n  }\n\n  async componentDidMount() {\n    if (!this.state.asyncapi) {\n      this.updateState(this.props.schema);\n    }\n  }\n\n  async componentDidUpdate(prevProps: AsyncApiProps) {\n    const oldSchema = prevProps.schema;\n    const newSchema = this.props.schema;\n\n    if (oldSchema !== newSchema) {\n      this.updateState(newSchema);\n    }\n  }\n\n  render() {\n    const { config, error: propError } = this.props;\n    const { asyncapi, error: stateError } = this.state;\n\n    const error = propError || stateError;\n    const concatenatedConfig: ConfigInterface = {\n      ...defaultConfig,\n      ...config,\n      show: {\n        ...defaultConfig.show,\n        ...(!!config && config.show),\n      },\n      sidebar: {\n        ...defaultConfig.sidebar,\n        ...(!!config && config.sidebar),\n      },\n    };\n\n    if (!asyncapi) {\n      if (!error) {\n        return null;\n      }\n      return concatenatedConfig.show?.errors && <Error error={error} />;\n    }\n\n    return (\n      <AsyncApiLayout\n        asyncapi={asyncapi}\n        config={concatenatedConfig}\n        error={error}\n      />\n    );\n  }\n\n  private updateState(schema: PropsSchema) {\n    const parsedSpec = SpecificationHelpers.retrieveParsedSpec(schema);\n    if (!parsedSpec) {\n      this.setState({ asyncapi: undefined });\n      return;\n    }\n    this.setState({ asyncapi: parsedSpec });\n  }\n}\n\nexport default AsyncApiComponent;\n","import AsyncApiComponent from './containers/AsyncApi/Standalone';\n\nimport { hljs } from './helpers';\n\nexport { hljs };\nexport default AsyncApiComponent;\n","const {\n  hasOwnProperty,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n} = Object;\n\nlet { freeze, seal, create } = Object; // eslint-disable-line import/no-mutable-exports\nlet { apply, construct } = typeof Reflect !== 'undefined' && Reflect;\n\nif (!apply) {\n  apply = function (fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!freeze) {\n  freeze = function (x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function (x) {\n    return x;\n  };\n}\n\nif (!construct) {\n  construct = function (Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayIndexOf = unapply(Array.prototype.indexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySlice = unapply(Array.prototype.slice);\n\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\n\nconst regExpTest = unapply(RegExp.prototype.test);\n\nconst typeErrorCreate = unconstruct(TypeError);\n\nexport function unapply(func) {\n  return (thisArg, ...args) => apply(func, thisArg, args);\n}\n\nexport function unconstruct(func) {\n  return (...args) => construct(func, args);\n}\n\n/* Add properties to a lookup table */\nexport function addToSet(set, array, transformCaseFunc) {\n  transformCaseFunc = transformCaseFunc ? transformCaseFunc : stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/* Shallow clone an object */\nexport function clone(object) {\n  const newObject = create(null);\n\n  let property;\n  for (property in object) {\n    if (apply(hasOwnProperty, object, [property])) {\n      newObject[property] = object[property];\n    }\n  }\n\n  return newObject;\n}\n\n/* IE10 doesn't support __lookupGetter__ so lets'\n * simulate it. It also automatically checks\n * if the prop is function or getter and behaves\n * accordingly. */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue(element) {\n    console.warn('fallback value for', element);\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nexport {\n  // Array\n  arrayForEach,\n  arrayIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySlice,\n  // Object\n  freeze,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n  hasOwnProperty,\n  isFrozen,\n  setPrototypeOf,\n  seal,\n  // RegExp\n  regExpTest,\n  // String\n  stringIndexOf,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringTrim,\n  // Errors\n  typeErrorCreate,\n  // Other\n  lookupGetter,\n};\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'a',\n  'abbr',\n  'acronym',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'bdi',\n  'bdo',\n  'big',\n  'blink',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'center',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'content',\n  'data',\n  'datalist',\n  'dd',\n  'decorator',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'element',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'font',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meter',\n  'nav',\n  'nobr',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'section',\n  'select',\n  'shadow',\n  'small',\n  'source',\n  'spacer',\n  'span',\n  'strike',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'track',\n  'tt',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n]);\n\n// SVG\nexport const svg = freeze([\n  'svg',\n  'a',\n  'altglyph',\n  'altglyphdef',\n  'altglyphitem',\n  'animatecolor',\n  'animatemotion',\n  'animatetransform',\n  'circle',\n  'clippath',\n  'defs',\n  'desc',\n  'ellipse',\n  'filter',\n  'font',\n  'g',\n  'glyph',\n  'glyphref',\n  'hkern',\n  'image',\n  'line',\n  'lineargradient',\n  'marker',\n  'mask',\n  'metadata',\n  'mpath',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialgradient',\n  'rect',\n  'stop',\n  'style',\n  'switch',\n  'symbol',\n  'text',\n  'textpath',\n  'title',\n  'tref',\n  'tspan',\n  'view',\n  'vkern',\n]);\n\nexport const svgFilters = freeze([\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n]);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nexport const svgDisallowed = freeze([\n  'animate',\n  'color-profile',\n  'cursor',\n  'discard',\n  'fedropshadow',\n  'font-face',\n  'font-face-format',\n  'font-face-name',\n  'font-face-src',\n  'font-face-uri',\n  'foreignobject',\n  'hatch',\n  'hatchpath',\n  'mesh',\n  'meshgradient',\n  'meshpatch',\n  'meshrow',\n  'missing-glyph',\n  'script',\n  'set',\n  'solidcolor',\n  'unknown',\n  'use',\n]);\n\nexport const mathMl = freeze([\n  'math',\n  'menclose',\n  'merror',\n  'mfenced',\n  'mfrac',\n  'mglyph',\n  'mi',\n  'mlabeledtr',\n  'mmultiscripts',\n  'mn',\n  'mo',\n  'mover',\n  'mpadded',\n  'mphantom',\n  'mroot',\n  'mrow',\n  'ms',\n  'mspace',\n  'msqrt',\n  'mstyle',\n  'msub',\n  'msup',\n  'msubsup',\n  'mtable',\n  'mtd',\n  'mtext',\n  'mtr',\n  'munder',\n  'munderover',\n]);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nexport const mathMlDisallowed = freeze([\n  'maction',\n  'maligngroup',\n  'malignmark',\n  'mlongdiv',\n  'mscarries',\n  'mscarry',\n  'msgroup',\n  'mstack',\n  'msline',\n  'msrow',\n  'semantics',\n  'annotation',\n  'annotation-xml',\n  'mprescripts',\n  'none',\n]);\n\nexport const text = freeze(['#text']);\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'accept',\n  'action',\n  'align',\n  'alt',\n  'autocapitalize',\n  'autocomplete',\n  'autopictureinpicture',\n  'autoplay',\n  'background',\n  'bgcolor',\n  'border',\n  'capture',\n  'cellpadding',\n  'cellspacing',\n  'checked',\n  'cite',\n  'class',\n  'clear',\n  'color',\n  'cols',\n  'colspan',\n  'controls',\n  'controlslist',\n  'coords',\n  'crossorigin',\n  'datetime',\n  'decoding',\n  'default',\n  'dir',\n  'disabled',\n  'disablepictureinpicture',\n  'disableremoteplayback',\n  'download',\n  'draggable',\n  'enctype',\n  'enterkeyhint',\n  'face',\n  'for',\n  'headers',\n  'height',\n  'hidden',\n  'high',\n  'href',\n  'hreflang',\n  'id',\n  'inputmode',\n  'integrity',\n  'ismap',\n  'kind',\n  'label',\n  'lang',\n  'list',\n  'loading',\n  'loop',\n  'low',\n  'max',\n  'maxlength',\n  'media',\n  'method',\n  'min',\n  'minlength',\n  'multiple',\n  'muted',\n  'name',\n  'nonce',\n  'noshade',\n  'novalidate',\n  'nowrap',\n  'open',\n  'optimum',\n  'pattern',\n  'placeholder',\n  'playsinline',\n  'poster',\n  'preload',\n  'pubdate',\n  'radiogroup',\n  'readonly',\n  'rel',\n  'required',\n  'rev',\n  'reversed',\n  'role',\n  'rows',\n  'rowspan',\n  'spellcheck',\n  'scope',\n  'selected',\n  'shape',\n  'size',\n  'sizes',\n  'span',\n  'srclang',\n  'start',\n  'src',\n  'srcset',\n  'step',\n  'style',\n  'summary',\n  'tabindex',\n  'title',\n  'translate',\n  'type',\n  'usemap',\n  'valign',\n  'value',\n  'width',\n  'xmlns',\n  'slot',\n]);\n\nexport const svg = freeze([\n  'accent-height',\n  'accumulate',\n  'additive',\n  'alignment-baseline',\n  'ascent',\n  'attributename',\n  'attributetype',\n  'azimuth',\n  'basefrequency',\n  'baseline-shift',\n  'begin',\n  'bias',\n  'by',\n  'class',\n  'clip',\n  'clippathunits',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'cx',\n  'cy',\n  'd',\n  'dx',\n  'dy',\n  'diffuseconstant',\n  'direction',\n  'display',\n  'divisor',\n  'dur',\n  'edgemode',\n  'elevation',\n  'end',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'filterunits',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'fx',\n  'fy',\n  'g1',\n  'g2',\n  'glyph-name',\n  'glyphref',\n  'gradientunits',\n  'gradienttransform',\n  'height',\n  'href',\n  'id',\n  'image-rendering',\n  'in',\n  'in2',\n  'k',\n  'k1',\n  'k2',\n  'k3',\n  'k4',\n  'kerning',\n  'keypoints',\n  'keysplines',\n  'keytimes',\n  'lang',\n  'lengthadjust',\n  'letter-spacing',\n  'kernelmatrix',\n  'kernelunitlength',\n  'lighting-color',\n  'local',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'markerheight',\n  'markerunits',\n  'markerwidth',\n  'maskcontentunits',\n  'maskunits',\n  'max',\n  'mask',\n  'media',\n  'method',\n  'mode',\n  'min',\n  'name',\n  'numoctaves',\n  'offset',\n  'operator',\n  'opacity',\n  'order',\n  'orient',\n  'orientation',\n  'origin',\n  'overflow',\n  'paint-order',\n  'path',\n  'pathlength',\n  'patterncontentunits',\n  'patterntransform',\n  'patternunits',\n  'points',\n  'preservealpha',\n  'preserveaspectratio',\n  'primitiveunits',\n  'r',\n  'rx',\n  'ry',\n  'radius',\n  'refx',\n  'refy',\n  'repeatcount',\n  'repeatdur',\n  'restart',\n  'result',\n  'rotate',\n  'scale',\n  'seed',\n  'shape-rendering',\n  'specularconstant',\n  'specularexponent',\n  'spreadmethod',\n  'startoffset',\n  'stddeviation',\n  'stitchtiles',\n  'stop-color',\n  'stop-opacity',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke',\n  'stroke-width',\n  'style',\n  'surfacescale',\n  'systemlanguage',\n  'tabindex',\n  'targetx',\n  'targety',\n  'transform',\n  'transform-origin',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'textlength',\n  'type',\n  'u1',\n  'u2',\n  'unicode',\n  'values',\n  'viewbox',\n  'visibility',\n  'version',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'width',\n  'word-spacing',\n  'wrap',\n  'writing-mode',\n  'xchannelselector',\n  'ychannelselector',\n  'x',\n  'x1',\n  'x2',\n  'xmlns',\n  'y',\n  'y1',\n  'y2',\n  'z',\n  'zoomandpan',\n]);\n\nexport const mathMl = freeze([\n  'accent',\n  'accentunder',\n  'align',\n  'bevelled',\n  'close',\n  'columnsalign',\n  'columnlines',\n  'columnspan',\n  'denomalign',\n  'depth',\n  'dir',\n  'display',\n  'displaystyle',\n  'encoding',\n  'fence',\n  'frame',\n  'height',\n  'href',\n  'id',\n  'largeop',\n  'length',\n  'linethickness',\n  'lspace',\n  'lquote',\n  'mathbackground',\n  'mathcolor',\n  'mathsize',\n  'mathvariant',\n  'maxsize',\n  'minsize',\n  'movablelimits',\n  'notation',\n  'numalign',\n  'open',\n  'rowalign',\n  'rowlines',\n  'rowspacing',\n  'rowspan',\n  'rspace',\n  'rquote',\n  'scriptlevel',\n  'scriptminsize',\n  'scriptsizemultiplier',\n  'selection',\n  'separator',\n  'separators',\n  'stretchy',\n  'subscriptshift',\n  'supscriptshift',\n  'symmetric',\n  'voffset',\n  'width',\n  'xmlns',\n]);\n\nexport const xml = freeze([\n  'xlink:href',\n  'xml:id',\n  'xlink:title',\n  'xml:space',\n  'xmlns:xlink',\n]);\n","import { seal } from './utils.js';\n\n// eslint-disable-next-line unicorn/better-regex\nexport const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nexport const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nexport const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nexport const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nexport const IS_ALLOWED_URI = seal(\n  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nexport const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nexport const ATTR_WHITESPACE = seal(\n  /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nexport const DOCTYPE_NAME = seal(/^html$/i);\n","import * as TAGS from './tags.js';\nimport * as ATTRS from './attrs.js';\nimport * as EXPRESSIONS from './regexp.js';\nimport {\n  addToSet,\n  clone,\n  freeze,\n  arrayForEach,\n  arrayPop,\n  arrayPush,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringIndexOf,\n  stringTrim,\n  regExpTest,\n  typeErrorCreate,\n  lookupGetter,\n} from './utils.js';\n\nconst getGlobal = () => (typeof window === 'undefined' ? null : window);\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {Document} document The document object (to determine policy name suffix)\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported).\n */\nconst _createTrustedTypesPolicy = function (trustedTypes, document) {\n  if (\n    typeof trustedTypes !== 'object' ||\n    typeof trustedTypes.createPolicy !== 'function'\n  ) {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (\n    document.currentScript &&\n    document.currentScript.hasAttribute(ATTR_NAME)\n  ) {\n    suffix = document.currentScript.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      },\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn(\n      'TrustedTypes policy ' + policyName + ' could not be created.'\n    );\n    return null;\n  }\n};\n\nfunction createDOMPurify(window = getGlobal()) {\n  const DOMPurify = (root) => createDOMPurify(root);\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = VERSION;\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  const originalDocument = window.document;\n\n  let { document } = window;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes,\n  } = window;\n\n  const ElementPrototype = Element.prototype;\n\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  const trustedTypesPolicy = _createTrustedTypesPolicy(\n    trustedTypes,\n    originalDocument\n  );\n  const emptyHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML('') : '';\n\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName,\n  } = document;\n  const { importNode } = originalDocument;\n\n  let documentMode = {};\n  try {\n    documentMode = clone(document).documentMode ? document.documentMode : {};\n  } catch (_) {}\n\n  let hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported =\n    typeof getParentNode === 'function' &&\n    implementation &&\n    typeof implementation.createHTMLDocument !== 'undefined' &&\n    documentMode !== 9;\n\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n  } = EXPRESSIONS;\n\n  let { IS_ALLOWED_URI } = EXPRESSIONS;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [\n    ...TAGS.html,\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.mathMl,\n    ...TAGS.text,\n  ]);\n\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [\n    ...ATTRS.html,\n    ...ATTRS.svg,\n    ...ATTRS.mathMl,\n    ...ATTRS.xml,\n  ]);\n\n  /*\n   * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  const CUSTOM_ELEMENT_HANDLING = Object.seal(\n    Object.create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false,\n      },\n    })\n  );\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks? */\n  let SANITIZE_DOM = true;\n\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, [\n    'annotation-xml',\n    'audio',\n    'colgroup',\n    'desc',\n    'foreignobject',\n    'head',\n    'iframe',\n    'math',\n    'mi',\n    'mn',\n    'mo',\n    'ms',\n    'mtext',\n    'noembed',\n    'noframes',\n    'noscript',\n    'plaintext',\n    'script',\n    'style',\n    'svg',\n    'template',\n    'thead',\n    'title',\n    'video',\n    'xmp',\n  ]);\n\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, [\n    'audio',\n    'video',\n    'img',\n    'source',\n    'image',\n    'track',\n  ]);\n\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, [\n    'alt',\n    'class',\n    'for',\n    'id',\n    'label',\n    'name',\n    'pattern',\n    'placeholder',\n    'role',\n    'summary',\n    'title',\n    'value',\n    'style',\n    'xmlns',\n  ]);\n\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc;\n\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  const isRegexOrFunction = function (testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function (cfg) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n\n    PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1\n        ? (PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE)\n        : (PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE);\n\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc =\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml'\n        ? (x) => x\n        : stringToLowerCase;\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS =\n      'ALLOWED_TAGS' in cfg\n        ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc)\n        : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR =\n      'ALLOWED_ATTR' in cfg\n        ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc)\n        : DEFAULT_ALLOWED_ATTR;\n    URI_SAFE_ATTRIBUTES =\n      'ADD_URI_SAFE_ATTR' in cfg\n        ? addToSet(\n            clone(DEFAULT_URI_SAFE_ATTRIBUTES), // eslint-disable-line indent\n            cfg.ADD_URI_SAFE_ATTR, // eslint-disable-line indent\n            transformCaseFunc // eslint-disable-line indent\n          ) // eslint-disable-line indent\n        : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS =\n      'ADD_DATA_URI_TAGS' in cfg\n        ? addToSet(\n            clone(DEFAULT_DATA_URI_TAGS), // eslint-disable-line indent\n            cfg.ADD_DATA_URI_TAGS, // eslint-disable-line indent\n            transformCaseFunc // eslint-disable-line indent\n          ) // eslint-disable-line indent\n        : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS =\n      'FORBID_CONTENTS' in cfg\n        ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc)\n        : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS =\n      'FORBID_TAGS' in cfg\n        ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc)\n        : {};\n    FORBID_ATTR =\n      'FORBID_ATTR' in cfg\n        ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc)\n        : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements ===\n        'boolean'\n    ) {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements =\n        cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [...TAGS.text]);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, TAGS.html);\n        addToSet(ALLOWED_ATTR, ATTRS.html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svgFilters);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, TAGS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, [\n    'mi',\n    'mo',\n    'mn',\n    'ms',\n    'mtext',\n  ]);\n\n  const HTML_INTEGRATION_POINTS = addToSet({}, [\n    'foreignobject',\n    'desc',\n    'title',\n    'annotation-xml',\n  ]);\n\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, [\n    'title',\n    'style',\n    'font',\n    'a',\n    'script',\n  ]);\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, TAGS.svg);\n  addToSet(ALL_SVG_TAGS, TAGS.svgFilters);\n  addToSet(ALL_SVG_TAGS, TAGS.svgDisallowed);\n\n  const ALL_MATHML_TAGS = addToSet({}, TAGS.mathMl);\n  addToSet(ALL_MATHML_TAGS, TAGS.mathMlDisallowed);\n\n  /**\n   *\n   *\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function (element) {\n    let parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: HTML_NAMESPACE,\n        tagName: 'template',\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return (\n          tagName === 'svg' &&\n          (parentTagName === 'annotation-xml' ||\n            MATHML_TEXT_INTEGRATION_POINTS[parentTagName])\n        );\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (\n        parent.namespaceURI === SVG_NAMESPACE &&\n        !HTML_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      if (\n        parent.namespaceURI === MATHML_NAMESPACE &&\n        !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return (\n        !ALL_MATHML_TAGS[tagName] &&\n        (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName])\n      );\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG or MathML). Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  const _forceRemove = function (node) {\n    arrayPush(DOMPurify.removed, { element: node });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      try {\n        node.outerHTML = emptyHTML;\n      } catch (_) {\n        node.remove();\n      }\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  const _removeAttribute = function (name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node,\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node,\n      });\n    }\n\n    node.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\"\" attributes\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  const _initDocument = function (dirty) {\n    /* Create a HTML document */\n    let doc;\n    let leadingWhitespace;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml') {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty =\n        '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' +\n        dirty +\n        '</body></html>';\n    }\n\n    const dirtyPayload = trustedTypesPolicy\n      ? trustedTypesPolicy.createHTML(dirty)\n      : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? '' : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    const body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(\n        document.createTextNode(leadingWhitespace),\n        body.childNodes[0] || null\n      );\n    }\n\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(\n        doc,\n        WHOLE_DOCUMENT ? 'html' : 'body'\n      )[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * _createIterator\n   *\n   * @param  {Document} root document/fragment to create iterator for\n   * @return {Iterator} iterator instance\n   */\n  const _createIterator = function (root) {\n    return createNodeIterator.call(\n      root.ownerDocument || root,\n      root,\n      // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT,\n      null,\n      false\n    );\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  const _isClobbered = function (elm) {\n    return (\n      elm instanceof HTMLFormElement &&\n      (typeof elm.nodeName !== 'string' ||\n        typeof elm.textContent !== 'string' ||\n        typeof elm.removeChild !== 'function' ||\n        !(elm.attributes instanceof NamedNodeMap) ||\n        typeof elm.removeAttribute !== 'function' ||\n        typeof elm.setAttribute !== 'function' ||\n        typeof elm.namespaceURI !== 'string' ||\n        typeof elm.insertBefore !== 'function')\n    );\n  };\n\n  /**\n   * _isNode\n   *\n   * @param  {Node} obj object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  const _isNode = function (object) {\n    return typeof Node === 'object'\n      ? object instanceof Node\n      : object &&\n          typeof object === 'object' &&\n          typeof object.nodeType === 'number' &&\n          typeof object.nodeName === 'string';\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  const _executeHook = function (entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    arrayForEach(hooks[entryPoint], (hook) => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function (currentNode) {\n    let content;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check if tagname contains Unicode */\n    if (regExpTest(/[\\u0080-\\uFFFF]/, currentNode.nodeName)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS,\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (\n      currentNode.hasChildNodes() &&\n      !_isNode(currentNode.firstElementChild) &&\n      (!_isNode(currentNode.content) ||\n        !_isNode(currentNode.content.firstElementChild)) &&\n      regExpTest(/<[/\\w]/g, currentNode.innerHTML) &&\n      regExpTest(/<[/\\w]/g, currentNode.textContent)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Mitigate a problem with templates inside select */\n    if (\n      tagName === 'select' &&\n      regExpTest(/<template/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n          regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)\n        )\n          return false;\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)\n        )\n          return false;\n      }\n\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n\n          for (let i = childCount - 1; i >= 0; --i) {\n            parentNode.insertBefore(\n              cloneNode(childNodes[i], true),\n              getNextSibling(currentNode)\n            );\n          }\n        }\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    if (\n      (tagName === 'noscript' || tagName === 'noembed') &&\n      regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = stringReplace(content, MUSTACHE_EXPR, ' ');\n      content = stringReplace(content, ERB_EXPR, ' ');\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function (lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (\n      SANITIZE_DOM &&\n      (lcName === 'id' || lcName === 'name') &&\n      (value in document || value in formElement)\n    ) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (\n      ALLOW_DATA_ATTR &&\n      !FORBID_ATTR[lcName] &&\n      regExpTest(DATA_ATTR, lcName)\n    ) {\n      // This attribute is safe\n    } else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) {\n      // This attribute is safe\n      /* Otherwise, check the name is permitted */\n    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        (_basicCustomElementTest(lcTag) &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag))) &&\n          ((CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName)) ||\n            (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)))) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        (lcName === 'is' &&\n          CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))))\n      ) {\n        // If user has supplied a regexp or function in CUSTOM_ELEMENT_HANDLING.tagNameCheck, we need to also allow derived custom elements using the same tagName test.\n        // Additionally, we need to allow attributes passing the CUSTOM_ELEMENT_HANDLING.attributeNameCheck user has configured, as custom elements can define these at their own discretion.\n      } else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n      // This attribute is safe\n      /* Check no script, data or unknown possibly unsafe URI\n        unless we know URI values are safe for that attribute */\n    } else if (\n      regExpTest(IS_ALLOWED_URI, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Keep image data URIs alive if src/xlink:href is allowed */\n      /* Further prevent gadget XSS for dynamically built script tags */\n    } else if (\n      (lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') &&\n      lcTag !== 'script' &&\n      stringIndexOf(value, 'data:') === 0 &&\n      DATA_URI_TAGS[lcTag]\n    ) {\n      // This attribute is safe\n      /* Allow unknown protocols: This provides support for links that\n        are handled by protocol handlers which may be unknown ahead of\n        time, e.g. fb:, spotify: */\n    } else if (\n      ALLOW_UNKNOWN_PROTOCOLS &&\n      !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Check for binary attributes */\n      // eslint-disable-next-line no-negated-condition\n    } else if (!value) {\n      // Binary attributes are safe at this point\n      /* Anything else, presume unsafe, do not add it back */\n    } else {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * _basicCustomElementCheck\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   * @param {string} tagName name of the tag of the node to sanitize\n   */\n  const _basicCustomElementTest = function (tagName) {\n    return tagName.indexOf('-') > 0;\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  const _sanitizeAttributes = function (currentNode) {\n    let attr;\n    let value;\n    let lcName;\n    let l;\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    const { attributes } = currentNode;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n    };\n    l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      attr = attributes[l];\n      const { name, namespaceURI } = attr;\n      value = name === 'value' ? attr.value : stringTrim(attr.value);\n      lcName = transformCaseFunc(name);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        value = stringReplace(value, MUSTACHE_EXPR, ' ');\n        value = stringReplace(value, ERB_EXPR, ' ');\n      }\n\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Handle attributes that require Trusted Types */\n      if (\n        trustedTypesPolicy &&\n        typeof trustedTypes === 'object' &&\n        typeof trustedTypes.getAttributeType === 'function'\n      ) {\n        if (namespaceURI) {\n          /* Namespaces are not yet supported, see https://bugs.chromium.org/p/chromium/issues/detail?id=1305293 */\n        } else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              value = trustedTypesPolicy.createHTML(value);\n              break;\n            case 'TrustedScriptURL':\n              value = trustedTypesPolicy.createScriptURL(value);\n              break;\n            default:\n              break;\n          }\n        }\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        arrayPop(DOMPurify.removed);\n      } catch (_) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function (fragment) {\n    let shadowNode;\n    const shadowIterator = _createIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while ((shadowNode = shadowIterator.nextNode())) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} configuration object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg) {\n    let body;\n    let importedNode;\n    let currentNode;\n    let oldNode;\n    let returnNode;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      // eslint-disable-next-line no-negated-condition\n      if (typeof dirty.toString !== 'function') {\n        throw typeErrorCreate('toString is not a function');\n      } else {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      }\n    }\n\n    /* Check we can run. Otherwise fall back or ignore */\n    if (!DOMPurify.isSupported) {\n      if (\n        typeof window.toStaticHTML === 'object' ||\n        typeof window.toStaticHTML === 'function'\n      ) {\n        if (typeof dirty === 'string') {\n          return window.toStaticHTML(dirty);\n        }\n\n        if (_isNode(dirty)) {\n          return window.toStaticHTML(dirty.outerHTML);\n        }\n      }\n\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate(\n            'root node is forbidden and cannot be sanitized in-place'\n          );\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (\n        !RETURN_DOM &&\n        !SAFE_FOR_TEMPLATES &&\n        !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1\n      ) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n          ? trustedTypesPolicy.createHTML(dirty)\n          : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    const nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while ((currentNode = nodeIterator.nextNode())) {\n      /* Fix IE's strange behavior with manipulated textNodes #89 */\n      if (currentNode.nodeType === 3 && currentNode === oldNode) {\n        continue;\n      }\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n\n      oldNode = currentNode;\n    }\n\n    oldNode = null;\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (ALLOWED_ATTR.shadowroot) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Serialize doctype if allowed */\n    if (\n      WHOLE_DOCUMENT &&\n      ALLOWED_TAGS['!doctype'] &&\n      body.ownerDocument &&\n      body.ownerDocument.doctype &&\n      body.ownerDocument.doctype.name &&\n      regExpTest(EXPRESSIONS.DOCTYPE_NAME, body.ownerDocument.doctype.name)\n    ) {\n      serializedHTML =\n        '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, ERB_EXPR, ' ');\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML(serializedHTML)\n      : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function (cfg) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {string} tag Tag name of containing element.\n   * @param  {string} attr Attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   * @return {Function} removed(popped) hook\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      return arrayPop(hooks[entryPoint]);\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   *\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nexport default createDOMPurify();\n","\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toString = Object.prototype.toString;\n\nmodule.exports = function forEach (obj, fn, ctx) {\n    if (toString.call(fn) !== '[object Function]') {\n        throw new TypeError('iterator must be a function');\n    }\n    var l = obj.length;\n    if (l === +l) {\n        for (var i = 0; i < l; i++) {\n            fn.call(ctx, obj[i], i, obj);\n        }\n    } else {\n        for (var k in obj) {\n            if (hasOwn.call(obj, k)) {\n                fn.call(ctx, obj[k], k, obj);\n            }\n        }\n    }\n};\n\n","module.exports = window.DOMPurify || (window.DOMPurify = require('dompurify').default || require('dompurify'));","'use strict';\n\nvar each = require('foreach');\nmodule.exports = api;\n\n\n/**\n * Convenience wrapper around the api.\n * Calls `.get` when called with an `object` and a `pointer`.\n * Calls `.set` when also called with `value`.\n * If only supplied `object`, returns a partially applied function, mapped to the object.\n *\n * @param {Object} obj\n * @param {String|Array} pointer\n * @param value\n * @returns {*}\n */\n\nfunction api (obj, pointer, value) {\n    // .set()\n    if (arguments.length === 3) {\n        return api.set(obj, pointer, value);\n    }\n    // .get()\n    if (arguments.length === 2) {\n        return api.get(obj, pointer);\n    }\n    // Return a partially applied function on `obj`.\n    var wrapped = api.bind(api, obj);\n\n    // Support for oo style\n    for (var name in api) {\n        if (api.hasOwnProperty(name)) {\n            wrapped[name] = api[name].bind(wrapped, obj);\n        }\n    }\n    return wrapped;\n}\n\n\n/**\n * Lookup a json pointer in an object\n *\n * @param {Object} obj\n * @param {String|Array} pointer\n * @returns {*}\n */\napi.get = function get (obj, pointer) {\n    var refTokens = Array.isArray(pointer) ? pointer : api.parse(pointer);\n\n    for (var i = 0; i < refTokens.length; ++i) {\n        var tok = refTokens[i];\n        if (!(typeof obj == 'object' && tok in obj)) {\n            throw new Error('Invalid reference token: ' + tok);\n        }\n        obj = obj[tok];\n    }\n    return obj;\n};\n\n/**\n * Sets a value on an object\n *\n * @param {Object} obj\n * @param {String|Array} pointer\n * @param value\n */\napi.set = function set (obj, pointer, value) {\n    var refTokens = Array.isArray(pointer) ? pointer : api.parse(pointer),\n      nextTok = refTokens[0];\n\n    if (refTokens.length === 0) {\n      throw Error('Can not set the root object');\n    }\n\n    for (var i = 0; i < refTokens.length - 1; ++i) {\n        var tok = refTokens[i];\n        if (typeof tok !== 'string' && typeof tok !== 'number') {\n          tok = String(tok)\n        }\n        if (tok === \"__proto__\" || tok === \"constructor\" || tok === \"prototype\") {\n            continue\n        }\n        if (tok === '-' && Array.isArray(obj)) {\n          tok = obj.length;\n        }\n        nextTok = refTokens[i + 1];\n\n        if (!(tok in obj)) {\n            if (nextTok.match(/^(\\d+|-)$/)) {\n                obj[tok] = [];\n            } else {\n                obj[tok] = {};\n            }\n        }\n        obj = obj[tok];\n    }\n    if (nextTok === '-' && Array.isArray(obj)) {\n      nextTok = obj.length;\n    }\n    obj[nextTok] = value;\n    return this;\n};\n\n/**\n * Removes an attribute\n *\n * @param {Object} obj\n * @param {String|Array} pointer\n */\napi.remove = function (obj, pointer) {\n    var refTokens = Array.isArray(pointer) ? pointer : api.parse(pointer);\n    var finalToken = refTokens[refTokens.length -1];\n    if (finalToken === undefined) {\n        throw new Error('Invalid JSON pointer for remove: \"' + pointer + '\"');\n    }\n\n    var parent = api.get(obj, refTokens.slice(0, -1));\n    if (Array.isArray(parent)) {\n      var index = +finalToken;\n      if (finalToken === '' && isNaN(index)) {\n        throw new Error('Invalid array index: \"' + finalToken + '\"');\n      }\n\n      Array.prototype.splice.call(parent, index, 1);\n    } else {\n      delete parent[finalToken];\n    }\n};\n\n/**\n * Returns a (pointer -> value) dictionary for an object\n *\n * @param obj\n * @param {function} descend\n * @returns {}\n */\napi.dict = function dict (obj, descend) {\n    var results = {};\n    api.walk(obj, function (value, pointer) {\n        results[pointer] = value;\n    }, descend);\n    return results;\n};\n\n/**\n * Iterates over an object\n * Iterator: function (value, pointer) {}\n *\n * @param obj\n * @param {function} iterator\n * @param {function} descend\n */\napi.walk = function walk (obj, iterator, descend) {\n    var refTokens = [];\n\n    descend = descend || function (value) {\n        var type = Object.prototype.toString.call(value);\n        return type === '[object Object]' || type === '[object Array]';\n    };\n\n    (function next (cur) {\n        each(cur, function (value, key) {\n            refTokens.push(String(key));\n            if (descend(value)) {\n                next(value);\n            } else {\n                iterator(value, api.compile(refTokens));\n            }\n            refTokens.pop();\n        });\n    }(obj));\n};\n\n/**\n * Tests if an object has a value for a json pointer\n *\n * @param obj\n * @param pointer\n * @returns {boolean}\n */\napi.has = function has (obj, pointer) {\n    try {\n        api.get(obj, pointer);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n\n/**\n * Escapes a reference token\n *\n * @param str\n * @returns {string}\n */\napi.escape = function escape (str) {\n    return str.toString().replace(/~/g, '~0').replace(/\\//g, '~1');\n};\n\n/**\n * Unescapes a reference token\n *\n * @param str\n * @returns {string}\n */\napi.unescape = function unescape (str) {\n    return str.replace(/~1/g, '/').replace(/~0/g, '~');\n};\n\n/**\n * Converts a json pointer into a array of reference tokens\n *\n * @param pointer\n * @returns {Array}\n */\napi.parse = function parse (pointer) {\n    if (pointer === '') { return []; }\n    if (pointer.charAt(0) !== '/') { throw new Error('Invalid JSON pointer: ' + pointer); }\n    return pointer.substring(1).split(/\\//).map(api.unescape);\n};\n\n/**\n * Builds a json pointer from a array of reference tokens\n *\n * @param refTokens\n * @returns {string}\n */\napi.compile = function compile (refTokens) {\n    if (refTokens.length === 0) { return ''; }\n    return '/' + refTokens.map(api.escape).join('/');\n};\n"],"names":["SpecificationHelpers","schema","constructor","name","version","_json","asyncapi","JSON","parse","e","AsyncAPIDocumentModel","tags","tagsToCheck","undefined","Array","isArray","some","tag","t","spec","Map","Object","entries","channels","forEach","_a","channel","publish","hasTags","set","subscribe","from","values","defaultConfig","schemaID","show","sidebar","info","servers","operations","messages","schemas","errors","showOperations","extractSize","entry","boxProp","sizeType","contentRect","useResizeObserver","opts","onResize","onResizeRef","useRef","current","round","Math","resizeObserverRef","_useState","useState","width","height","size","setSize","didUnmount","useEffect","previous","refCallback","subscriber","refOrElement","callbackRefElement","lastReportRef","cleanupRef","callSubscriber","useCallback","element","HTMLElement","reporter","useResolvedElement","box","instance","ResizeObserver","reportedWidth","reportedHeight","newWidth","newHeight","newSize","observe","unobserve","ref","useMemo","CollapseButton","chevronProps","children","rest","React","className","viewBox","x","xmlns","y","points","SpecificationContext","useSpec","useContext","SidebarContext","setShowSidebar","value","Sidebar","config","showSidebar","logo","ext","components","hasComponents","Operations","OperationsList","OperationsByRootTags","OperationsByOperationsTags","messagesList","keys","length","href","onClick","map","messageName","message","key","uid","schemasList","schemaName","Provider","prev","src","alt","title","concat","hasServers","hasChannels","operationsList","channelName","hasPublish","push","OperationsPubItem","hasSubscribe","OperationsSubItem","taggedOperations","containTags","untaggedOperations","OperationsByTagItem","tagName","operationsTags","expand","setExpand","Href","target","rel","getDefaults","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","defaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","html","encode","test","replace","unescapeTest","unescape","_","n","toLowerCase","charAt","String","fromCharCode","parseInt","substring","caret","edit","regex","opt","source","obj","val","getRegex","RegExp","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","prot","decodeURIComponent","indexOf","baseUrls","justDomain","rtrim","relativeBase","protocol","domain","resolveUrl","encodeURI","noopTest","exec","merge","i","arguments","prototype","hasOwnProperty","call","splitCells","tableRow","count","cells","match","offset","str","escaped","curr","split","trim","shift","pop","splice","c","invert","l","suffLen","currChar","slice","checkSanitizeDeprecation","console","warn","repeatString","pattern","result","outputLink","cap","link","raw","lexer","text","state","inLink","token","type","tokens","inlineTokens","Tokenizer","options","this","rules","block","newline","code","codeBlockStyle","fences","matchIndentToCode","indentToCode","node","matchIndentInNode","join","indentCodeCompensation","lang","heading","trimmed","depth","inline","hr","blockquote","blockTokens","list","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","start","loose","items","itemRegex","trimLeft","search","nextBulletRegex","min","hrRegex","fencesBeginRegex","headingBeginRegex","task","checked","trimRight","top","spacers","filter","hasMultipleLineBreaks","every","chars","lineBreaks","pre","def","table","item","header","align","rows","j","k","row","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","b","level","findClosingBracket","linkLen","_escapes","links","reflink","nolink","maskedSrc","prevChar","emStrong","lDelim","nextChar","punctuation","rDelim","rLength","lLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","index","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","out","charCodeAt","random","toString","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","Lexer","create","inlineQueue","next","lastToken","cutSrc","lastParagraphClipped","leading","tabs","repeat","extTokenizer","space","startBlock","startIndex","Infinity","tempSrc","tempStart","getStartIndex","errMsg","error","Error","keepPrevChar","includes","lastIndexOf","codespan","startInline","inlineText","lex","Renderer","infostring","quote","slugger","id","slug","body","content","flags","TextRenderer","Slugger","seen","originalSlug","isDryRun","occurenceAccumulator","serialize","getNextSafeSlug","dryrun","Parser","textRenderer","l2","l3","cell","itemBody","checkbox","ret","renderers","parser","parseInline","tablecell","tablerow","unshift","listitem","image","marked","callback","done","err","pending","setTimeout","setOptions","newDefaults","use","args","hasExtensions","childTokens","pack","prevRenderer","apply","prop","prevTokenizer","lexInline","hljs","json","yaml","bash","markedOptions","language","Markdown","dangerouslySetInnerHTML","__html","Tag","description","externalDocs","Tags","CONTENT_TYPES_SITE","EXTERAL_DOCUMENTATION_TEXT","ERROR_TEXT","Info","specId","license","termsOfService","defaultContentType","contact","showInfoList","email","hasDescription","ServerHelpers","securitySchema","securityProtocol","saslMechanism","Security","renderedSecurities","_b","security","_c","_d","securitySchemes","securities","requirement","requirements","requiredScopes","SecurityItem","Boolean","s","idx","SchemaCustomTypes","renderedKafkaSecurity","in","scheme","bearerFormat","openIdConnectUrl","collectSecuritySchemas","getKafkaSecurity","flows","renderedFlows","flowName","flow","authorizationUrl","tokenUrl","refreshUrl","scopes","scopeName","scopeDesc","securityType","jsonSchemaTypes","jsonSchemaKeywords","maxLength","minLength","contentMediaType","contentEncoding","multipleOf","maximum","exclusiveMaximum","minimum","exclusiveMinimum","maxItems","minItems","uniqueItems","contains","additionalItems","maxProperties","minProperties","required","properties","patternProperties","propertyNames","dependencies","additionalProperties","SchemaHelpers","UNKNOWN","isBooleanSchema","ANY","NEVER","not","inferType","toType","combinedType","toCombinedType","typeOf","stringify","constraints","numberRange","humanizeNumberRangeConstraint","multipleOfConstraint","humanizeMultipleOfConstraint","stringRange","humanizeRangeConstraint","hasUniqueItems","arrayRange","objectRange","oneOf","anyOf","allOf","if","then","else","customExtensions","getCustomExtensions","urlVariables","reduce","variableName","variable","assign","extRenderType","extRenderAdditionalInfo","SchemaClass","parameters","paramaterName","parameter","parameterSchema","_this","extParameterLocation","location","jsonFieldToSchema","extName","startsWith","propertyName","dependentRequired","_i","array","records","propSchema","propertySchema","isCircular","toItemsType","toSchemaType","types","additionalType","constValue","const","enumValue","enum","inferredType","Set","schemaKeys","RESTRICTED_ANY","exclusiveMin","max","exclusiveMax","hasExclusiveMin","hasMin","hasExclusiveMax","hasMax","strigifiedMultipleOf","extRawValue","isJSONSchema","v","Extensions","jsonToSchema","Schema","onlyTitle","SchemaContext","reverse","isPatternProperty","isProperty","_e","_f","expanded","_g","dependentSchemas","getDependentSchemas","humanizeConstraints","renderType","rawValue","parameterLocation","isExpandable","schemaType","schemaItems","circularSchema","styledSchemaName","renderedSchemaName","deprecated","writeOnly","readOnly","format","default","prettifyValue","examples","SchemaProperties","SchemaItems","AdditionalProperties","AdditionalItems","circularProps","property","getDependentRequired","Bindings","bindings","renderedBindings","bindingName","binding","ConfigContext","createContext","useConfig","CommonHelpers","Server","serverName","server","serverVariablesToSchema","variables","protocolVersion","getIdentifier","hasBindings","Servers","JSONSnippet","snippet","pad","number","ensureMinLength","sample","trunc","mergeDeep","isObject","objects","pVal","oVal","getResultForCircular","popSchemaStack","seenSchemasStack","context","schemaKeywordTypes","keywords","keyword","$refCache","inferExample","example","tryInferExample","traverse","maxSampleDepth","$ref","referenced","JsonPointer","into","res","subSamples","subSchema","quiet","lastSample","allOfSample","traverseOneOrAnyOf","ifSchema","sampler","_samplers","selectedSubSchema","inferred","localExample","subSchemaExample","mergedExample","sampleNumber","floor","commonDateTimeSample","omitTime","omitDate","date","milliseconds","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","toRFCDateTime","Date","defaultSample","stringFormats","_min","_max","a","d","hash","hashCode","uuid","r","skipReadOnly","_registerSampler","arrayLength","prefixItems","itemSchemaGetter","itemNumber","itemSchema","requiredKeys","requiredKeyDict","dict","skipNonRequired","skipWriteOnly","PayloadType","MessageHelpers","sanitizeExample","msg","payload","messageExamples","flatMap","summary","headers","MessageExample","Example","getPayloadExamples","getHeadersExamples","generateExample","Message","showExamples","messageId","correlationId","contentType","Operation","props","PUBLISH","operation","parametersToSchema","OperationInfo","__assign","hasMultipleMessages","operationSummary","operationId","SUBSCRIBE","Messages","SchemaComponent","Schemas","validationErrors","singleError","startLine","_j","observerClassName","setObserverClassName","requestAnimationFrame","possibleClassName","_h","_super","parsedSpec","retrieveParsedSpec","__extends","AsyncApiComponent","updateState","prevProps","oldSchema","newSchema","propError","stateError","concatenatedConfig","AsyncApiLayout","setState","Component","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","Reflect","construct","fun","thisValue","Func","_toConsumableArray","arrayForEach","unapply","arrayPop","arrayPush","stringToLowerCase","stringMatch","stringReplace","stringIndexOf","stringTrim","regExpTest","typeErrorCreate","unconstruct","TypeError","func","thisArg","addToSet","transformCaseFunc","lcElement","clone","object","newObject","lookupGetter","desc","get","fallbackValue","svg","svgFilters","svgDisallowed","mathMl","mathMlDisallowed","xml","MUSTACHE_EXPR","ERB_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","getGlobal","window","_createTrustedTypesPolicy","trustedTypes","document","createPolicy","suffix","ATTR_NAME","currentScript","hasAttribute","getAttribute","policyName","createHTML","createScriptURL","scriptUrl","createDOMPurify","DOMPurify","root","VERSION","removed","nodeType","isSupported","originalDocument","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","getNextSibling","getChildNodes","getParentNode","template","createElement","ownerDocument","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","documentMode","hooks","createHTMLDocument","PARSER_MEDIA_TYPE","EXPRESSIONS","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","ATTRS","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","configurable","enumerable","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","formElement","isRegexOrFunction","testValue","Function","_parseConfig","cfg","_typeof","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","tbody","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","namespaceURI","parentTagName","_forceRemove","parentNode","removeChild","outerHTML","remove","_removeAttribute","attribute","getAttributeNode","removeAttribute","setAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","createDocument","innerHTML","insertBefore","createTextNode","childNodes","_createIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","_isClobbered","elm","nodeName","textContent","attributes","_isNode","_executeHook","entryPoint","currentNode","data","hook","_sanitizeElements","allowedTags","hasChildNodes","firstElementChild","_basicCustomElementTest","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","attr","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","forceKeepAttr","getAttributeType","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","importedNode","oldNode","returnNode","toStaticHTML","appendChild","firstChild","nodeIterator","shadowroot","serializedHTML","doctype","setConfig","clearConfig","isValidAttribute","addHook","hookFunction","removeHook","removeHooks","removeAllHooks","hasOwn","module","exports","fn","ctx","require","each","api","pointer","wrapped","bind","refTokens","tok","nextTok","finalToken","isNaN","descend","results","walk","iterator","cur","compile","has"],"sourceRoot":""}