{"version":3,"file":"static/js/558.da1b5b5d.chunk.js","mappings":"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,EAAK1wB,MAEvB,CAEDuC,EAASmsB,EAAensB,EACzB,CAEQquB,SAAAA,EAAcvzB,GAErB,OADA+M,QAAQC,KAAK,qBAAsBhN,GAC5B,IACR,CAED,OAAOuzB,CACR,CCjIM,IAAMvqB,EAAOuoB,EAAO,CACzB,IACA,OACA,UACA,UACA,OACA,UACA,QACA,QACA,IACA,MACA,MACA,MACA,QACA,aACA,OACA,KACA,SACA,SACA,UACA,SACA,OACA,OACA,MACA,WACA,UACA,OACA,WACA,KACA,YACA,MACA,UACA,MACA,SACA,MACA,MACA,KACA,KACA,UACA,KACA,WACA,aACA,SACA,OACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,IACA,MACA,QACA,MACA,MACA,QACA,SACA,KACA,OACA,MACA,OACA,UACA,OACA,WACA,QACA,MACA,OACA,KACA,WACA,SACA,SACA,IACA,UACA,MACA,WACA,IACA,KACA,KACA,OACA,IACA,OACA,UACA,SACA,SACA,QACA,SACA,SACA,OACA,SACA,SACA,QACA,MACA,UACA,MACA,QACA,QACA,KACA,WACA,WACA,QACA,KACA,QACA,OACA,KACA,QACA,KACA,IACA,KACA,MACA,QACA,QAIWiC,EAAMjC,EAAO,CACxB,MACA,IACA,WACA,cACA,eACA,eACA,gBACA,mBACA,SACA,WACA,OACA,OACA,UACA,SACA,OACA,IACA,QACA,WACA,QACA,QACA,OACA,iBACA,SACA,OACA,WACA,QACA,OACA,UACA,UACA,WACA,iBACA,OACA,OACA,QACA,SACA,SACA,OACA,WACA,QACA,OACA,QACA,OACA,UAGWkC,EAAalC,EAAO,CAC/B,UACA,gBACA,sBACA,cACA,mBACA,oBACA,oBACA,iBACA,UACA,UACA,UACA,UACA,UACA,iBACA,UACA,UACA,cACA,eACA,WACA,eACA,qBACA,cACA,SACA,iBAOWmC,EAAgBnC,EAAO,CAClC,UACA,gBACA,SACA,UACA,eACA,YACA,mBACA,iBACA,gBACA,gBACA,gBACA,QACA,YACA,OACA,eACA,YACA,UACA,gBACA,SACA,MACA,aACA,UACA,QAGWoC,EAASpC,EAAO,CAC3B,OACA,WACA,SACA,UACA,QACA,SACA,KACA,aACA,gBACA,KACA,KACA,QACA,UACA,WACA,QACA,OACA,KACA,SACA,QACA,SACA,OACA,OACA,UACA,SACA,MACA,QACA,MACA,SACA,eAKWqC,EAAmBrC,EAAO,CACrC,UACA,cACA,aACA,WACA,YACA,UACA,UACA,SACA,SACA,QACA,YACA,aACA,iBACA,cACA,SAGW9jB,EAAO8jB,EAAO,CAAC,UCpRfvoB,EAAOuoB,EAAO,CACzB,SACA,SACA,QACA,MACA,iBACA,eACA,uBACA,WACA,aACA,UACA,SACA,UACA,cACA,cACA,UACA,OACA,QACA,QACA,QACA,OACA,UACA,WACA,eACA,SACA,cACA,WACA,WACA,UACA,MACA,WACA,0BACA,wBACA,WACA,YACA,UACA,eACA,OACA,MACA,UACA,SACA,SACA,OACA,OACA,WACA,KACA,YACA,YACA,QACA,OACA,QACA,OACA,OACA,UACA,OACA,MACA,MACA,YACA,QACA,SACA,MACA,YACA,WACA,QACA,OACA,QACA,UACA,aACA,SACA,OACA,UACA,UACA,cACA,cACA,SACA,UACA,UACA,aACA,WACA,MACA,WACA,MACA,WACA,OACA,OACA,UACA,aACA,QACA,WACA,QACA,OACA,QACA,OACA,UACA,QACA,MACA,SACA,OACA,QACA,UACA,WACA,QACA,YACA,OACA,SACA,SACA,QACA,QACA,QACA,SAGWiC,EAAMjC,EAAO,CACxB,gBACA,aACA,WACA,qBACA,SACA,gBACA,gBACA,UACA,gBACA,iBACA,QACA,OACA,KACA,QACA,OACA,gBACA,YACA,YACA,QACA,sBACA,8BACA,gBACA,kBACA,KACA,KACA,IACA,KACA,KACA,kBACA,YACA,UACA,UACA,MACA,WACA,YACA,MACA,OACA,eACA,YACA,SACA,cACA,cACA,gBACA,cACA,YACA,mBACA,eACA,aACA,eACA,cACA,KACA,KACA,KACA,KACA,aACA,WACA,gBACA,oBACA,SACA,OACA,KACA,kBACA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,UACA,YACA,aACA,WACA,OACA,eACA,iBACA,eACA,mBACA,iBACA,QACA,aACA,aACA,eACA,eACA,cACA,cACA,mBACA,YACA,MACA,OACA,QACA,SACA,OACA,MACA,OACA,aACA,SACA,WACA,UACA,QACA,SACA,cACA,SACA,WACA,cACA,OACA,aACA,sBACA,mBACA,eACA,SACA,gBACA,sBACA,iBACA,IACA,KACA,KACA,SACA,OACA,OACA,cACA,YACA,UACA,SACA,SACA,QACA,OACA,kBACA,mBACA,mBACA,eACA,cACA,eACA,cACA,aACA,eACA,mBACA,oBACA,iBACA,kBACA,oBACA,iBACA,SACA,eACA,QACA,eACA,iBACA,WACA,UACA,UACA,YACA,mBACA,cACA,kBACA,iBACA,aACA,OACA,KACA,KACA,UACA,SACA,UACA,aACA,UACA,aACA,gBACA,gBACA,QACA,eACA,OACA,eACA,mBACA,mBACA,IACA,KACA,KACA,QACA,IACA,KACA,KACA,IACA,eAGWoC,EAASpC,EAAO,CAC3B,SACA,cACA,QACA,WACA,QACA,eACA,cACA,aACA,aACA,QACA,MACA,UACA,eACA,WACA,QACA,QACA,SACA,OACA,KACA,UACA,SACA,gBACA,SACA,SACA,iBACA,YACA,WACA,cACA,UACA,UACA,gBACA,WACA,WACA,OACA,WACA,WACA,aACA,UACA,SACA,SACA,cACA,gBACA,uBACA,YACA,YACA,aACA,WACA,iBACA,iBACA,YACA,UACA,QACA,UAGWsC,EAAMtC,EAAO,CACxB,aACA,SACA,cACA,YACA,gBCrWWuC,EAAgBtC,EAAK,6BACrBuC,EAAWvC,EAAK,yBAChBwC,EAAcxC,EAAK,iBACnByC,EAAYzC,EAAK,8BACjB0C,EAAY1C,EAAK,kBACjB2C,EAAiB3C,EAC5B,yFAEW4C,GAAoB5C,EAAK,yBACzB6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","sources":["../node_modules/@asyncapi/react-component/src/helpers/specification.ts","../node_modules/@asyncapi/react-component/src/constants.ts","../node_modules/@asyncapi/react-component/src/config/default.ts","../node_modules/use-resize-observer/dist/bundle.esm.js","../node_modules/@asyncapi/react-component/src/components/CollapseButton.tsx","../node_modules/@asyncapi/react-component/src/contexts/useSpec.ts","../node_modules/@asyncapi/react-component/src/contexts/useConfig.ts","../node_modules/@asyncapi/react-component/src/containers/Sidebar/Sidebar.tsx","../node_modules/@asyncapi/react-component/src/components/Href.tsx","../node_modules/marked/lib/marked.esm.js","../node_modules/@asyncapi/react-component/src/helpers/marked.ts","../node_modules/@asyncapi/react-component/src/components/Markdown.tsx","../node_modules/@asyncapi/react-component/src/components/Tag.tsx","../node_modules/@asyncapi/react-component/src/components/Tags.tsx","../node_modules/@asyncapi/react-component/src/containers/Info/Info.tsx","../node_modules/@asyncapi/react-component/src/helpers/server.ts","../node_modules/@asyncapi/react-component/src/containers/Servers/Security.tsx","../node_modules/@asyncapi/react-component/src/helpers/schema.ts","../node_modules/@asyncapi/react-component/src/components/Extensions.tsx","../node_modules/@asyncapi/react-component/src/components/Schema.tsx","../node_modules/@asyncapi/react-component/src/components/Bindings.tsx","../node_modules/@asyncapi/react-component/src/helpers/common.ts","../node_modules/@asyncapi/react-component/src/containers/Servers/Server.tsx","../node_modules/@asyncapi/react-component/src/containers/Servers/Servers.tsx","../node_modules/@asyncapi/react-component/src/components/JSONSnippet.tsx","../node_modules/openapi-sampler/src/utils.js","../node_modules/openapi-sampler/src/infer.js","../node_modules/openapi-sampler/src/traverse.js","../node_modules/openapi-sampler/src/allOf.js","../node_modules/openapi-sampler/src/samplers/number.js","../node_modules/openapi-sampler/src/samplers/string.js","../node_modules/openapi-sampler/src/openapi-sampler.js","../node_modules/openapi-sampler/src/samplers/array.js","../node_modules/openapi-sampler/src/samplers/boolean.js","../node_modules/openapi-sampler/src/samplers/object.js","../node_modules/@asyncapi/react-component/src/helpers/message.ts","../node_modules/@asyncapi/react-component/src/types.ts","../node_modules/@asyncapi/react-component/src/containers/Messages/MessageExample.tsx","../node_modules/@asyncapi/react-component/src/containers/Messages/Message.tsx","../node_modules/@asyncapi/react-component/src/containers/Operations/Operation.tsx","../node_modules/@asyncapi/react-component/src/containers/Operations/Operations.tsx","../node_modules/@asyncapi/react-component/src/containers/Messages/Messages.tsx","../node_modules/@asyncapi/react-component/src/containers/Schemas/Schema.tsx","../node_modules/@asyncapi/react-component/src/containers/Schemas/Schemas.tsx","../node_modules/@asyncapi/react-component/src/containers/Error/Error.tsx","../node_modules/@asyncapi/react-component/src/containers/AsyncApi/Layout.tsx","../node_modules/@asyncapi/react-component/src/containers/AsyncApi/Standalone.tsx","../node_modules/@asyncapi/react-component/src/without-parser.ts","../node_modules/dompurify/src/utils.js","../node_modules/dompurify/src/tags.js","../node_modules/dompurify/src/attrs.js","../node_modules/dompurify/src/regexp.js","../node_modules/dompurify/src/purify.js","../node_modules/foreach/index.js","../node_modules/isomorphic-dompurify/browser.js","../node_modules/json-pointer/index.js"],"sourcesContent":["import { AsyncAPIDocument, Tag } from '@asyncapi/parser';\n// @ts-ignore\nimport AsyncAPIDocumentModel from '@asyncapi/parser/lib/models/asyncapi';\n\nexport class SpecificationHelpers {\n  /**\n   * Returns parsed AsyncAPI specification.\n   */\n  static retrieveParsedSpec(schema: any): AsyncAPIDocument | undefined {\n    if (!schema) {\n      return undefined;\n    }\n\n    // check if schema is an instance of AsyncAPIDocument (model from AsyncAPI Parser)\n    if (schema.constructor && schema.constructor.name === 'AsyncAPIDocument') {\n      return schema as AsyncAPIDocument;\n    }\n\n    // then check if schema is an instance of AsyncAPIDocument (model from AsyncAPI Parser)\n    // this check is used for security in case of code mangling (unification)\n    if (\n      typeof schema.version === 'function' &&\n      schema._json &&\n      schema._json.asyncapi\n    ) {\n      return schema as AsyncAPIDocument;\n    }\n\n    // check if input is a string and try parse it\n    if (typeof schema === 'string') {\n      try {\n        schema = JSON.parse(schema);\n      } catch (e) {\n        return undefined;\n      }\n    }\n\n    // at the end check if schema is a parsed JS object (as output from AsyncAPI Parser)\n    if (typeof schema === 'object' && schema['x-parser-spec-parsed'] === true) {\n      // if schema is stringified by `AsyncAPIDocument.stringify` function\n      if (schema['x-parser-spec-stringified'] === true) {\n        return AsyncAPIDocumentModel.parse(schema);\n      }\n      return new AsyncAPIDocumentModel(schema);\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Check if given schema have one of the specified tags.\n   */\n  static containTags(schema: any, tags: Tag | Tag[]): boolean {\n    const tagsToCheck =\n      typeof schema.tags === 'function' ? schema.tags() : undefined;\n    if (tagsToCheck === undefined || !Array.isArray(tagsToCheck)) {\n      return false;\n    }\n    tags = Array.isArray(tags) ? tags : [tags];\n    return tagsToCheck.some((tag: Tag) =>\n      (tags as Tag[]).some(t => t.name() === tag.name()),\n    );\n  }\n\n  /**\n   * Return all tags from operations\n   */\n  static operationsTags(spec: AsyncAPIDocument) {\n    const tags = new Map<string, Tag>();\n    Object.entries(spec.channels()).forEach(([_, channel]) => {\n      const publish = channel.publish();\n      if (publish && publish.hasTags()) {\n        publish.tags().forEach(tag => tags.set(tag.name(), tag));\n      }\n      const subscribe = channel.subscribe();\n      if (subscribe && subscribe.hasTags()) {\n        subscribe.tags().forEach(tag => tags.set(tag.name(), tag));\n      }\n    });\n    return Array.from(tags.values());\n  }\n\n  /**\n   * Return all tags from servers\n   */\n  static serversTags(spec: AsyncAPIDocument) {\n    const tags = {} as { string: string[] };\n    Object.entries(spec.servers()).forEach(([_, server]) => {\n      if (server.hasTags()) {\n        server.tags().forEach(tag => {\n          if (tags[tag.name()]) {\n            tags[tag.name()] = [tags[tag.name()], _];\n          } else {\n            tags[tag.name()] = _;\n          }\n        });\n      }\n    });\n    return tags;\n  }\n}\n","export const CSS_PREFIX = 'asyncapi';\nexport const CONTENT_TYPES_SITE =\n  'https://www.iana.org/assignments/media-types';\nexport const COLLAPSE_ALL_TEXT = 'Collapse All';\nexport const EXPAND_ALL_TEXT = 'Expand All';\n\nexport const VALIDATION_ERRORS_TYPE =\n  'https://github.com/asyncapi/parser-js/validation-errors';\nexport const SERVERS = 'Servers';\n\nexport const ONE_OF_PAYLOADS_TEXT = 'One of those payloads:';\nexport const ANY_OF_PAYLOADS_TEXT = 'Any of those payloads:';\nexport const GENERATED_BADGE_TEXT = 'generated';\nexport const ONE_OF_FOLLOWING_MESSAGES_PUBLISH_TEXT =\n  'You can send one of the following messages:';\nexport const ONE_OF_FOLLOWING_MESSAGES_PUBLISH_SINGLE_TEXT =\n  'You can send the following message:';\nexport const ONE_OF_FOLLOWING_MESSAGES_SUBSCRIBE_TEXT =\n  'You can subscribe to one of the following messages:';\nexport const ONE_OF_FOLLOWING_MESSAGES_SUBSCRIBE_SINGLE_TEXT =\n  'You can subscribe to the following message:';\n\nexport const CONTACT_TEXT = 'Contact';\nexport const NAM_TEXTE = 'Name';\nexport const URL_TEXT = 'Url';\nexport const EMAIL_TEXT = 'Email';\nexport const LICENSE_TEXT = 'License';\nexport const TERMS_OF_SERVICE_TEXT = 'Terms of service';\nexport const URL_SUPPORT_TEXT = 'Support';\nexport const EMAIL_SUPPORT_TEXT = 'Email support';\nexport const EXTERAL_DOCUMENTATION_TEXT = 'External Docs';\nexport const LOCATION_TEXT = 'Location';\nexport const TYPE_TEXT = 'Type';\nexport const SPECIFICATION_TEXT = 'Specification';\n\nexport const DEPRECATED_TEXT = 'Deprecated';\nexport const PUBLISH_TEXT = 'Publish';\nexport const PUBLISH_LABEL_DEFAULT_TEXT = 'PUB';\nexport const SUBSCRIBE_TEXT = 'Subscribe';\nexport const SUBSCRIBE_LABEL_DEFAULT_TEXT = 'SUB';\nexport const REQUIRED_TEXT = 'Required';\nexport const GENERATED_TEXT = 'Generated';\n\nexport const SERVERS_TEXT = 'Servers';\nexport const OPERATIONS_TEXT = 'Operations';\nexport const MESSAGES_TEXT = 'Messages';\nexport const SCHEMAS_TEXT = 'Schemas';\n\nexport const CHANNELS_TEXT = 'Channels';\nexport const PARAMETERS_TEXT = 'Parameters';\nexport const HEADERS_TEXT = 'Headers';\nexport const MESSAGE_HEADERS_TEXT = 'Message Headers';\nexport const HEADERS_EXAMPLE_TEXT = 'Example of headers';\nexport const TAGS_TEXT = 'Tags';\nexport const PAYLOAD_TEXT = 'Payload';\nexport const MESSAGE_PAYLOAD_TEXT = 'Message Payload';\nexport const PAYLOAD_EXAMPLE_TEXT = 'Example of payload';\nexport const SCHEMA_EXAMPLE_TEXT = 'Example';\n\nexport const NONE_TEXT = 'None';\nexport const ANY_TEXT = 'Any';\nexport const ERROR_TEXT = 'Error';\nexport const EXPAND_ERROR_BUTTON_TEXT = 'Expand';\nexport const COLLAPSE_ERROR_BUTTON_TEXT = 'Collapse';\n\nexport const SECURITY_TEXT = 'Security';\n\nexport const URL_VARIABLES_TEXT = 'URL Variables';\n","import { ConfigInterface } from './config';\nimport {\n  PUBLISH_LABEL_DEFAULT_TEXT,\n  SUBSCRIBE_LABEL_DEFAULT_TEXT,\n} from '../constants';\n\nexport const defaultConfig: ConfigInterface = {\n  schemaID: '',\n  show: {\n    sidebar: false,\n    info: true,\n    servers: true,\n    operations: true,\n    messages: true,\n    schemas: true,\n    errors: true,\n  },\n  expand: {\n    messageExamples: false,\n  },\n  sidebar: {\n    showServers: 'byDefault',\n    showOperations: 'byDefault',\n  },\n  publishLabel: PUBLISH_LABEL_DEFAULT_TEXT,\n  subscribeLabel: SUBSCRIBE_LABEL_DEFAULT_TEXT,\n};\n","import { useRef, useState, useEffect, useCallback, useMemo } from 'react';\n\n// This of course could've been more streamlined with internal state instead of\n// refs, but then host hooks / components could not opt out of renders.\n// This could've been exported to its own module, but the current build doesn't\n// seem to work with module imports and I had no more time to spend on this...\nfunction useResolvedElement(subscriber, refOrElement) {\n  var callbackRefElement = useRef(null);\n  var lastReportRef = useRef(null);\n  var cleanupRef = useRef();\n  var callSubscriber = useCallback(function () {\n    var element = null;\n\n    if (callbackRefElement.current) {\n      element = callbackRefElement.current;\n    } else if (refOrElement) {\n      if (refOrElement instanceof HTMLElement) {\n        element = refOrElement;\n      } else {\n        element = refOrElement.current;\n      }\n    }\n\n    if (lastReportRef.current && lastReportRef.current.element === element && lastReportRef.current.reporter === callSubscriber) {\n      return;\n    }\n\n    if (cleanupRef.current) {\n      cleanupRef.current(); // Making sure the cleanup is not called accidentally multiple times.\n\n      cleanupRef.current = null;\n    }\n\n    lastReportRef.current = {\n      reporter: callSubscriber,\n      element: element\n    }; // Only calling the subscriber, if there's an actual element to report.\n\n    if (element) {\n      cleanupRef.current = subscriber(element);\n    }\n  }, [refOrElement, subscriber]); // On each render, we check whether a ref changed, or if we got a new raw\n  // element.\n\n  useEffect(function () {\n    // With this we're *technically* supporting cases where ref objects' current value changes, but only if there's a\n    // render accompanying that change as well.\n    // To guarantee we always have the right element, one must use the ref callback provided instead, but we support\n    // RefObjects to make the hook API more convenient in certain cases.\n    callSubscriber();\n  }, [callSubscriber]);\n  return useCallback(function (element) {\n    callbackRefElement.current = element;\n    callSubscriber();\n  }, [callSubscriber]);\n}\n\n// We're only using the first element of the size sequences, until future versions of the spec solidify on how\n// exactly it'll be used for fragments in multi-column scenarios:\n// From the spec:\n// > The box size properties are exposed as FrozenArray in order to support elements that have multiple fragments,\n// > which occur in multi-column scenarios. However the current definitions of content rect and border box do not\n// > mention how those boxes are affected by multi-column layout. In this spec, there will only be a single\n// > ResizeObserverSize returned in the FrozenArray, which will correspond to the dimensions of the first column.\n// > A future version of this spec will extend the returned FrozenArray to contain the per-fragment size information.\n// (https://drafts.csswg.org/resize-observer/#resize-observer-entry-interface)\n//\n// Also, testing these new box options revealed that in both Chrome and FF everything is returned in the callback,\n// regardless of the \"box\" option.\n// The spec states the following on this:\n// > This does not have any impact on which box dimensions are returned to the defined callback when the event\n// > is fired, it solely defines which box the author wishes to observe layout changes on.\n// (https://drafts.csswg.org/resize-observer/#resize-observer-interface)\n// I'm not exactly clear on what this means, especially when you consider a later section stating the following:\n// > This section is non-normative. An author may desire to observe more than one CSS box.\n// > In this case, author will need to use multiple ResizeObservers.\n// (https://drafts.csswg.org/resize-observer/#resize-observer-interface)\n// Which is clearly not how current browser implementations behave, and seems to contradict the previous quote.\n// For this reason I decided to only return the requested size,\n// even though it seems we have access to results for all box types.\n// This also means that we get to keep the current api, being able to return a simple { width, height } pair,\n// regardless of box option.\nvar extractSize = function extractSize(entry, boxProp, sizeType) {\n  if (!entry[boxProp]) {\n    if (boxProp === \"contentBoxSize\") {\n      // The dimensions in `contentBoxSize` and `contentRect` are equivalent according to the spec.\n      // See the 6th step in the description for the RO algorithm:\n      // https://drafts.csswg.org/resize-observer/#create-and-populate-resizeobserverentry-h\n      // > Set this.contentRect to logical this.contentBoxSize given target and observedBox of \"content-box\".\n      // In real browser implementations of course these objects differ, but the width/height values should be equivalent.\n      return entry.contentRect[sizeType === \"inlineSize\" ? \"width\" : \"height\"];\n    }\n\n    return undefined;\n  } // A couple bytes smaller than calling Array.isArray() and just as effective here.\n\n\n  return entry[boxProp][0] ? entry[boxProp][0][sizeType] : // TS complains about this, because the RO entry type follows the spec and does not reflect Firefox's current\n  // behaviour of returning objects instead of arrays for `borderBoxSize` and `contentBoxSize`.\n  // @ts-ignore\n  entry[boxProp][sizeType];\n};\n\nfunction useResizeObserver(opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  // Saving the callback as a ref. With this, I don't need to put onResize in the\n  // effect dep array, and just passing in an anonymous function without memoising\n  // will not reinstantiate the hook's ResizeObserver.\n  var onResize = opts.onResize;\n  var onResizeRef = useRef(undefined);\n  onResizeRef.current = onResize;\n  var round = opts.round || Math.round; // Using a single instance throughout the hook's lifetime\n\n  var resizeObserverRef = useRef();\n\n  var _useState = useState({\n    width: undefined,\n    height: undefined\n  }),\n      size = _useState[0],\n      setSize = _useState[1]; // In certain edge cases the RO might want to report a size change just after\n  // the component unmounted.\n\n\n  var didUnmount = useRef(false);\n  useEffect(function () {\n    return function () {\n      didUnmount.current = true;\n    };\n  }, []); // Using a ref to track the previous width / height to avoid unnecessary renders.\n\n  var previous = useRef({\n    width: undefined,\n    height: undefined\n  }); // This block is kinda like a useEffect, only it's called whenever a new\n  // element could be resolved based on the ref option. It also has a cleanup\n  // function.\n\n  var refCallback = useResolvedElement(useCallback(function (element) {\n    // We only use a single Resize Observer instance, and we're instantiating it on demand, only once there's something to observe.\n    // This instance is also recreated when the `box` option changes, so that a new observation is fired if there was a previously observed element with a different box option.\n    if (!resizeObserverRef.current || resizeObserverRef.current.box !== opts.box || resizeObserverRef.current.round !== round) {\n      resizeObserverRef.current = {\n        box: opts.box,\n        round: round,\n        instance: new ResizeObserver(function (entries) {\n          var entry = entries[0];\n          var boxProp = opts.box === \"border-box\" ? \"borderBoxSize\" : opts.box === \"device-pixel-content-box\" ? \"devicePixelContentBoxSize\" : \"contentBoxSize\";\n          var reportedWidth = extractSize(entry, boxProp, \"inlineSize\");\n          var reportedHeight = extractSize(entry, boxProp, \"blockSize\");\n          var newWidth = reportedWidth ? round(reportedWidth) : undefined;\n          var newHeight = reportedHeight ? round(reportedHeight) : undefined;\n\n          if (previous.current.width !== newWidth || previous.current.height !== newHeight) {\n            var newSize = {\n              width: newWidth,\n              height: newHeight\n            };\n            previous.current.width = newWidth;\n            previous.current.height = newHeight;\n\n            if (onResizeRef.current) {\n              onResizeRef.current(newSize);\n            } else {\n              if (!didUnmount.current) {\n                setSize(newSize);\n              }\n            }\n          }\n        })\n      };\n    }\n\n    resizeObserverRef.current.instance.observe(element, {\n      box: opts.box\n    });\n    return function () {\n      if (resizeObserverRef.current) {\n        resizeObserverRef.current.instance.unobserve(element);\n      }\n    };\n  }, [opts.box, round]), opts.ref);\n  return useMemo(function () {\n    return {\n      ref: refCallback,\n      width: size.width,\n      height: size.height\n    };\n  }, [refCallback, size ? size.width : null, size ? size.height : null]);\n}\n\nexport { useResizeObserver as default };\n","import React, { ButtonHTMLAttributes, SVGAttributes } from 'react';\n\ninterface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\n  chevronProps?: SVGAttributes<SVGElement>;\n  expanded?: boolean;\n}\n\nconst HiChevronRight = (props: SVGAttributes<SVGElement> = {}) => (\n  // Copied from https://icon-sets.iconify.design/heroicons-solid/chevron-right/\n  <svg\n    stroke=\"currentColor\"\n    fill=\"currentColor\"\n    strokeWidth=\"0\"\n    viewBox=\"0 0 20 20\"\n    height=\"1em\"\n    width=\"1em\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\n\nexport const CollapseButton: React.FunctionComponent<Props> = ({\n  chevronProps,\n  expanded = false,\n  children,\n  ...rest\n}) => (\n  <button\n    {...rest}\n    className={`focus:outline-none ${rest.className}`}\n    type=\"button\"\n  >\n    <div className=\"inline-block\">{children}</div>\n    <HiChevronRight\n      {...chevronProps}\n      className={`inline-block align-baseline cursor-pointer ml-0.5 -mb-1 w-5 h-5 transform transition-transform duration-150 ease-linear ${\n        expanded ? '-rotate-90' : ''\n      } ${chevronProps?.className || ''}`}\n    />\n  </button>\n);\n","import React, { useContext } from 'react';\nimport { AsyncAPIDocument } from '@asyncapi/parser';\n\nexport const SpecificationContext = React.createContext<AsyncAPIDocument>(\n  null as any,\n);\n\nexport function useSpec() {\n  return useContext(SpecificationContext);\n}\n","import { createContext, useContext } from 'react';\nimport { ConfigInterface } from '../config';\n\nexport const ConfigContext = createContext<ConfigInterface>({});\n\nexport function useConfig() {\n  return useContext(ConfigContext);\n}\n","import React, { useState, useContext } from 'react';\n\nimport { CollapseButton } from '../../components';\nimport { useConfig, useSpec } from '../../contexts';\nimport {\n  PUBLISH_LABEL_DEFAULT_TEXT,\n  SUBSCRIBE_LABEL_DEFAULT_TEXT,\n} from '../../constants';\n\nconst SidebarContext = React.createContext<{\n  setShowSidebar: React.Dispatch<React.SetStateAction<boolean>>;\n}>({\n  setShowSidebar: (value: boolean | ((prevValue: boolean) => boolean)) => value,\n});\n\nexport const Sidebar: React.FunctionComponent = () => {\n  const [showSidebar, setShowSidebar] = useState(false);\n  const asyncapi = useSpec();\n\n  const info = asyncapi.info();\n  const logo = info.ext('x-logo');\n  const components = asyncapi.hasComponents() && asyncapi.components();\n  const messages = components && components.messages();\n  const schemas = components && components.schemas();\n  const hasOperations =\n    asyncapi.hasChannels() &&\n    Object.values(asyncapi.channels()).some(\n      channel => channel.hasPublish() || channel.hasSubscribe(),\n    );\n\n  const messagesList = messages && Object.keys(messages).length > 0 && (\n    <li className=\"mb-3 mt-9\">\n      <a\n        className=\"text-xs uppercase text-gray-700 mt-10 mb-4 font-thin hover:text-gray-900\"\n        href=\"#messages\"\n        onClick={() => setShowSidebar(false)}\n      >\n        Messages\n      </a>\n      <ul className=\"text-sm mt-2\">\n        {Object.entries(messages).map(([messageName, message]) => (\n          <li key={messageName}>\n            <a\n              className=\"flex break-words no-underline text-gray-700 mt-2 hover:text-gray-900\"\n              href={`#message-${messageName}`}\n              onClick={() => setShowSidebar(false)}\n            >\n              <div className=\"break-all inline-block\">{message.uid()}</div>\n            </a>\n          </li>\n        ))}\n      </ul>\n    </li>\n  );\n\n  const schemasList = schemas && Object.keys(schemas).length > 0 && (\n    <li className=\"mb-3 mt-9\">\n      <a\n        className=\"text-xs uppercase text-gray-700 mt-10 mb-4 font-thin hover:text-gray-900\"\n        href=\"#schemas\"\n        onClick={() => setShowSidebar(false)}\n      >\n        Schemas\n      </a>\n      <ul className=\"text-sm mt-2\">\n        {Object.keys(schemas).map(schemaName => (\n          <li key={schemaName}>\n            <a\n              className=\"flex break-words no-underline text-gray-700 mt-2 hover:text-gray-900\"\n              href={`#schema-${schemaName}`}\n              onClick={() => setShowSidebar(false)}\n            >\n              <div className=\"break-all inline-block\">{schemaName}</div>\n            </a>\n          </li>\n        ))}\n      </ul>\n    </li>\n  );\n\n  return (\n    <SidebarContext.Provider value={{ setShowSidebar }}>\n      <div\n        className=\"burger-menu rounded-full h-16 w-16 bg-white fixed bottom-16 right-8 flex items-center justify-center z-30 cursor-pointer shadow-md bg-teal-500\"\n        onClick={() => setShowSidebar(prev => !prev)}\n        data-lol={showSidebar}\n      >\n        <svg\n          viewBox=\"0 0 100 70\"\n          width=\"40\"\n          height=\"30\"\n          className=\"fill-current text-gray-200\"\n        >\n          <rect width=\"100\" height=\"10\" />\n          <rect y=\"30\" width=\"100\" height=\"10\" />\n          <rect y=\"60\" width=\"100\" height=\"10\" />\n        </svg>\n      </div>\n      <div\n        className={`${\n          showSidebar ? 'block fixed w-full' : 'hidden'\n        } sidebar relative w-64 max-h-screen h-full bg-gray-200 shadow z-20`}\n        // className={`${\n        //   showSidebar ? 'block fixed w-full' : 'hidden'\n        // } sidebar bg-gray-200 font-sans font-light px-4 py-8 z-20 shadow overflow-auto`}\n      >\n        <div\n          className={`${\n            showSidebar ? 'w-full' : ''\n          } block fixed max-h-screen h-full font-sans px-4 pt-8 pb-16 overflow-y-auto bg-gray-200`}\n        >\n          <div className=\"sidebar--content\">\n            <div>\n              {logo ? (\n                <img\n                  src={logo}\n                  alt={`${info.title()} logo, ${info.version()} version`}\n                />\n              ) : (\n                <h1 className=\"text-2xl font-light\">\n                  {info.title()} {info.version()}\n                </h1>\n              )}\n            </div>\n\n            <ul className=\"text-sm mt-10 relative\">\n              <li className=\"mb-3\">\n                <a\n                  className=\"text-gray-700 no-underline hover:text-gray-900\"\n                  href=\"#introduction\"\n                  onClick={() => setShowSidebar(false)}\n                >\n                  Introduction\n                </a>\n              </li>\n              {asyncapi.hasServers() && (\n                <li className=\"mb-3 mt-9\">\n                  <a\n                    className=\"text-xs uppercase text-gray-700 mt-10 mb-4 font-thin hover:text-gray-900\"\n                    href=\"#servers\"\n                    onClick={() => setShowSidebar(false)}\n                  >\n                    Servers\n                  </a>\n                  <ServersList />\n                </li>\n              )}\n              {hasOperations && (\n                <>\n                  <li className=\"mb-3 mt-9\">\n                    <a\n                      className=\"text-xs uppercase text-gray-700 mt-10 mb-4 font-thin hover:text-gray-900\"\n                      href=\"#operations\"\n                      onClick={() => setShowSidebar(false)}\n                    >\n                      Operations\n                    </a>\n                    <OperationsList />\n                  </li>\n                  {messagesList}\n                  {schemasList}\n                </>\n              )}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </SidebarContext.Provider>\n  );\n};\n\ninterface TagObject<T = any> {\n  name: string;\n  object: { tags?: () => Array<{ name: () => string }> };\n  data: T;\n}\n\nfunction filterObjectsByTags<T = any>(\n  tags: string[],\n  objects: Array<TagObject<T>>,\n): { tagged: Map<string, TagObject[]>; untagged: TagObject[] } {\n  const taggedObjects = new Set<TagObject>();\n  const tagged = new Map<string, TagObject[]>();\n\n  tags.forEach(tag => {\n    const taggedForTag: TagObject[] = [];\n    objects.forEach(obj => {\n      const object = obj.object;\n      if (typeof object.tags !== 'function') {\n        return;\n      }\n\n      const objectTags = (object.tags() || []).map(t => t.name());\n      const hasTag = objectTags.includes(tag);\n      if (hasTag) {\n        taggedForTag.push(obj);\n        taggedObjects.add(obj);\n      }\n    });\n    tagged.set(tag, taggedForTag);\n  });\n\n  const untagged: TagObject[] = [];\n  objects.forEach(obj => {\n    if (!taggedObjects.has(obj)) {\n      untagged.push(obj);\n    }\n  });\n\n  return { tagged, untagged };\n}\n\nconst ServersList: React.FunctionComponent = () => {\n  const sidebarConfig = useConfig().sidebar;\n  const asyncapi = useSpec();\n  const servers = asyncapi.servers();\n  const showServers = sidebarConfig?.showServers || 'byDefault';\n\n  if (showServers === 'byDefault') {\n    return (\n      <ul className=\"text-sm mt-2\">\n        {Object.keys(servers).map(serverName => (\n          <ServerItem serverName={serverName} key={serverName} />\n        ))}\n      </ul>\n    );\n  }\n\n  let specTagNames: string[];\n  if (showServers === 'bySpecTags') {\n    specTagNames = (asyncapi.tags() || []).map(tag => tag.name());\n  } else {\n    const serverTagNamesSet = new Set<string>();\n    Object.values(servers).forEach(server => {\n      if (typeof server.tags !== 'function') {\n        return;\n      }\n      server.tags().forEach(t => serverTagNamesSet.add(t.name()));\n    });\n    specTagNames = Array.from(serverTagNamesSet);\n  }\n\n  const serializedServers: TagObject[] = Object.entries(servers).map(\n    ([serverName, server]) => ({\n      name: serverName,\n      object: server,\n      data: {},\n    }),\n  );\n  const { tagged, untagged } = filterObjectsByTags(\n    specTagNames,\n    serializedServers,\n  );\n  return (\n    <ul className=\"text-sm mt-2\">\n      {Array.from(tagged.entries()).map(([tag, taggedServers]) => (\n        <li key={tag}>\n          <ItemsByTagItem tagName={tag}>\n            {taggedServers.map(({ name: serverName }) => (\n              <ServerItem serverName={serverName} key={serverName} />\n            ))}\n          </ItemsByTagItem>\n        </li>\n      ))}\n      {untagged.length > 0 ? (\n        <li>\n          <ItemsByTagItem tagName=\"Untagged\">\n            {untagged.map(({ name: serverName }) => (\n              <ServerItem serverName={serverName} key={serverName} />\n            ))}\n          </ItemsByTagItem>\n        </li>\n      ) : null}\n    </ul>\n  );\n};\n\nconst OperationsList: React.FunctionComponent = () => {\n  const sidebarConfig = useConfig().sidebar;\n  const asyncapi = useSpec();\n  const channels = asyncapi.channels();\n  const showOperations = sidebarConfig?.showOperations || 'byDefault';\n\n  const operations: Array<TagObject<{\n    channelName: string;\n    summary: string;\n    kind: 'publish' | 'subscribe';\n  }>> = [];\n  Object.entries(channels).forEach(([channelName, channel]) => {\n    if (channel.hasPublish()) {\n      const operation = channel.publish();\n      operations.push({\n        name: `publish-${channelName}`,\n        object: operation,\n        data: { channelName, kind: 'publish', summary: operation.summary() },\n      });\n    }\n    if (channel.hasSubscribe()) {\n      const operation = channel.subscribe();\n      operations.push({\n        name: `subscribe-${channelName}`,\n        object: operation,\n        data: { channelName, kind: 'subscribe', summary: operation.summary() },\n      });\n    }\n  });\n\n  if (showOperations === 'byDefault') {\n    return (\n      <ul className=\"text-sm mt-2\">\n        {operations.map(({ name, data }) => (\n          <OperationItem key={name} {...data} />\n        ))}\n      </ul>\n    );\n  }\n\n  let operationTagNames: string[];\n  if (showOperations === 'bySpecTags') {\n    operationTagNames = (asyncapi.tags() || []).map(tag => tag.name());\n  } else {\n    const operationTagNamesSet = new Set<string>();\n    Object.values(operations).forEach(({ object }) => {\n      if (typeof object.tags !== 'function') {\n        return;\n      }\n      object.tags().forEach(t => operationTagNamesSet.add(t.name()));\n    });\n    operationTagNames = Array.from(operationTagNamesSet);\n  }\n\n  const { tagged, untagged } = filterObjectsByTags(\n    operationTagNames,\n    operations,\n  );\n  return (\n    <ul className=\"text-sm mt-2\">\n      {Array.from(tagged.entries()).map(([tag, taggedOperations]) => (\n        <li key={tag}>\n          <ItemsByTagItem tagName={tag}>\n            {taggedOperations.map(({ name, data }) => (\n              <OperationItem key={name} {...data} />\n            ))}\n          </ItemsByTagItem>\n        </li>\n      ))}\n      {untagged.length > 0 ? (\n        <li>\n          <ItemsByTagItem tagName=\"Untagged\">\n            {untagged.map(({ name, data }) => (\n              <OperationItem key={name} {...data} />\n            ))}\n          </ItemsByTagItem>\n        </li>\n      ) : null}\n    </ul>\n  );\n};\n\ninterface OperationItemProps {\n  channelName: string;\n  summary: string;\n  kind: 'publish' | 'subscribe';\n}\n\nconst OperationItem: React.FunctionComponent<OperationItemProps> = ({\n  channelName,\n  summary,\n  kind,\n}) => {\n  const config = useConfig();\n  const { setShowSidebar } = useContext(SidebarContext);\n\n  const isPublish = kind === 'publish';\n  let label: string = '';\n  if (isPublish) {\n    label = config.publishLabel || PUBLISH_LABEL_DEFAULT_TEXT;\n  } else {\n    label = config.subscribeLabel || SUBSCRIBE_LABEL_DEFAULT_TEXT;\n  }\n\n  return (\n    <li>\n      <a\n        className=\"flex no-underline text-gray-700 mb-2 hover:text-gray-900\"\n        href={`#operation-${kind}-${channelName}`}\n        onClick={() => setShowSidebar(false)}\n      >\n        <span\n          className={`${\n            isPublish ? 'bg-blue-600' : 'bg-green-600'\n          } font-bold h-6 no-underline text-white uppercase p-1 mr-2 rounded text-xs`}\n          title={isPublish ? 'Publish' : 'Subscribe'}\n        >\n          {label}\n        </span>\n        <span className=\"break-all inline-block\">{summary || channelName}</span>\n      </a>\n    </li>\n  );\n};\n\ninterface ServerItemProps {\n  serverName: string;\n}\n\nconst ServerItem: React.FunctionComponent<ServerItemProps> = ({\n  serverName,\n}) => {\n  const { setShowSidebar } = useContext(SidebarContext);\n\n  return (\n    <li>\n      <a\n        className=\"flex no-underline text-gray-700 mb-2 hover:text-gray-900\"\n        href={`#server-${serverName}`}\n        onClick={() => setShowSidebar(false)}\n      >\n        <span className=\"break-all inline-block\">{serverName}</span>\n      </a>\n    </li>\n  );\n};\n\ninterface ItemsByTagItemProps {\n  tagName: string;\n}\n\nconst ItemsByTagItem: React.FunctionComponent<ItemsByTagItemProps> = ({\n  tagName,\n  children,\n}) => {\n  const [expand, setExpand] = useState(false);\n\n  return (\n    <div>\n      <CollapseButton\n        onClick={() => setExpand(prev => !prev)}\n        chevronProps={{\n          className: expand ? '-rotate-180' : '-rotate-90',\n        }}\n      >\n        <span className=\"text-sm inline-block mt-1 font-extralight\">\n          {tagName}\n        </span>\n      </CollapseButton>\n      <ul className={`${expand ? 'block' : 'hidden'} text-sm mt-2 font-light`}>\n        {children}\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  href: string;\n  title?: string;\n  className?: string;\n}\n\nexport const Href: React.FunctionComponent<Props> = ({\n  href,\n  title,\n  className,\n  children,\n}) => (\n  <a\n    href={href}\n    title={title}\n    className={className}\n    target=\"_blank\"\n    rel=\"nofollow noopener noreferrer\"\n  >\n    {children}\n  </a>\n);\n","/**\n * marked v4.2.12 - a markdown parser\n * Copyright (c) 2011-2023, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\nfunction getDefaults() {\n  return {\n    async: false,\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nlet defaults = getDefaults();\n\nfunction changeDefaults(newDefaults) {\n  defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n/**\n * @param {string} html\n */\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\n\n/**\n * @param {string | RegExp} regex\n * @param {string} opt\n */\nfunction edit(regex, opt) {\n  regex = typeof regex === 'string' ? regex : regex.source;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n/**\n * @param {boolean} sanitize\n * @param {string} base\n * @param {string} href\n */\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n/**\n * @param {string} base\n * @param {string} href\n */\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction merge(obj) {\n  let i = 1,\n    target,\n    key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) { cells.shift(); }\n  if (cells.length > 0 && !cells[cells.length - 1].trim()) { cells.pop(); }\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param {string} str\n * @param {string} c\n * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.slice(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\n/**\n * @param {string} pattern\n * @param {number} count\n */\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text)\n    };\n    lexer.state.inLink = false;\n    return token;\n  }\n  return {\n    type: 'image',\n    raw,\n    href,\n    title,\n    text: escape(text)\n  };\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nclass Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim().replace(this.rules.inline._escapes, '$1') : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n      const top = this.lexer.state.top;\n      this.lexer.state.top = true;\n      const tokens = this.lexer.blockTokens(text);\n      this.lexer.state.top = top;\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens,\n        text\n      };\n    }\n  }\n\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine,\n        line, nextLine, rawLine, itemContents, endEarly;\n\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, (t) => ' '.repeat(3 * t.length));\n        nextLine = src.split('\\n', 1)[0];\n\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        blankLine = false;\n\n        if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`);\n          const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n          const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n          const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            rawLine = src.split('\\n', 1)[0];\n            nextLine = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n\n            // End list item if found code fences\n            if (fencesBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new heading\n            if (headingBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(nextLine)) {\n              break;\n            }\n\n            // Horizontal rule found\n            if (hrRegex.test(src)) {\n              break;\n            }\n\n            if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) { // Dedent if possible\n              itemContents += '\\n' + nextLine.slice(indent);\n            } else {\n              // not enough indentation\n              if (blankLine) {\n                break;\n              }\n\n              // paragraph continuation unless last line was a different block level element\n              if (line.search(/[^ ]/) >= 4) { // indented code block\n                break;\n              }\n              if (fencesBeginRegex.test(line)) {\n                break;\n              }\n              if (headingBeginRegex.test(line)) {\n                break;\n              }\n              if (hrRegex.test(line)) {\n                break;\n              }\n\n              itemContents += '\\n' + nextLine;\n            }\n\n            if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n            line = nextLine.slice(indent);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n\n      const l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n\n        if (!list.loose) {\n          // Check if list should be loose\n          const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n          const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => /\\n.*\\n/.test(t.raw));\n\n          list.loose = hasMultipleLineBreaks;\n        }\n      }\n\n      // Set all items to loose if list is loose\n      if (list.loose) {\n        for (i = 0; i < l; i++) {\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        const text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.type = 'paragraph';\n        token.text = text;\n        token.tokens = this.lexer.inline(text);\n      }\n      return token;\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline._escapes, '$1') : '';\n      const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline._escapes, '$1') : cap[3];\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href,\n        title\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(c => { return { text: c }; }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => { return { text: c }; });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = this.lexer.inline(item.header[j].text);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = this.lexer.inline(row[k].text);\n          }\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: this.lexer.inline(cap[1])\n      };\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n        ? cap[1].slice(0, -1)\n        : cap[1];\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: this.lexer.inline(cap[0])\n      };\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || (nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        const raw = src.slice(0, lLength + match.index + (match[0].length - rDelim.length) + rLength);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = raw.slice(1, -1);\n          return {\n            type: 'em',\n            raw,\n            text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = raw.slice(2, -2);\n        return {\n          type: 'strong',\n          raw,\n          text,\n          tokens: this.lexer.inlineTokens(text)\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2])\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + cap[0];\n        } else {\n          href = cap[0];\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^((?:.|\\n(?!\\n))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n});\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n  nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //          () Skip orphan inside strong                                      () Consume to delim     (1) #***                (2) a***#, a***                             (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /^(?:[^_*\\\\]|\\\\.)*?\\_\\_(?:[^_*\\\\]|\\\\.)*?\\*(?:[^_*\\\\]|\\\\.)*?(?=\\_\\_)|(?:[^*\\\\]|\\\\.)+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /^(?:[^_*\\\\]|\\\\.)*?\\*\\*(?:[^_*\\\\]|\\\\.)*?\\_(?:[^_*\\\\]|\\\\.)*?(?=\\*\\*)|(?:[^_\\\\]|\\\\.)+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n// lookbehind is not available on Safari as of version 16\n// inline.escapedEmSt = /(?<=(?:^|[^\\\\)(?:\\\\[^])*)\\\\[*_]/g;\ninline.escapedEmSt = /(?:^|[^\\\\])(?:\\\\\\\\)*\\\\[*_]/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim)\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.nolink = edit(inline.nolink)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\n/**\n * smartypants text replacement\n * @param {string} text\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n * @param {string} text\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nclass Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n');\n\n    this.blockTokens(src, this.tokens);\n\n    let next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n    } else {\n      src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n        return leading + '    '.repeat(tabs.length);\n      });\n    }\n\n    let token, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.length === 1 && tokens.length > 0) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unecessary paragraph tags\n          tokens[tokens.length - 1].raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src, tokens = []) {\n    this.inlineQueue.push({ src, tokens });\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index + match[0].length - 2) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      this.tokenizer.rules.inline.escapedEmSt.lastIndex--;\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  /**\n   * @param {string} quote\n   */\n  blockquote(quote) {\n    return `<blockquote>\\n${quote}</blockquote>\\n`;\n  }\n\n  html(html) {\n    return html;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} level\n   * @param {string} raw\n   * @param {any} slugger\n   */\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      const id = this.options.headerPrefix + slugger.slug(raw);\n      return `<h${level} id=\"${id}\">${text}</h${level}>\\n`;\n    }\n\n    // ignore IDs\n    return `<h${level}>${text}</h${level}>\\n`;\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  /**\n   * @param {string} text\n   */\n  listitem(text) {\n    return `<li>${text}</li>\\n`;\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  /**\n   * @param {string} text\n   */\n  paragraph(text) {\n    return `<p>${text}</p>\\n`;\n  }\n\n  /**\n   * @param {string} header\n   * @param {string} body\n   */\n  table(header, body) {\n    if (body) body = `<tbody>${body}</tbody>`;\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  /**\n   * @param {string} content\n   */\n  tablerow(content) {\n    return `<tr>\\n${content}</tr>\\n`;\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? `<${type} align=\"${flags.align}\">`\n      : `<${type}>`;\n    return tag + content + `</${type}>\\n`;\n  }\n\n  /**\n   * span level renderer\n   * @param {string} text\n   */\n  strong(text) {\n    return `<strong>${text}</strong>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  em(text) {\n    return `<em>${text}</em>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  codespan(text) {\n    return `<code>${text}</code>`;\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  /**\n   * @param {string} text\n   */\n  del(text) {\n    return `<del>${text}</del>`;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + href + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${title}\"`;\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n\n/**\n * Slugger generates header id\n */\nclass Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * @param {string} value\n   */\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   * @param {string} originalSlug\n   * @param {boolean} isDryRun\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} [options]\n   * @param {boolean} [options.dryrun] Generates the next unique slug without\n   * updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.header[j].tokens),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.rows.length;\n          for (j = 0; j < l2; j++) {\n            row = token.rows[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k].tokens),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (typeof opt === 'function') {\n    callback = opt;\n    opt = null;\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  if (callback) {\n    const highlight = opt.highlight;\n    let tokens;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    const done = function(err) {\n      let out;\n\n      if (!err) {\n        try {\n          if (opt.walkTokens) {\n            marked.walkTokens(tokens, opt.walkTokens);\n          }\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!tokens.length) return done();\n\n    let pending = 0;\n    marked.walkTokens(tokens, function(token) {\n      if (token.type === 'code') {\n        pending++;\n        setTimeout(() => {\n          highlight(token.text, token.lang, function(err, code) {\n            if (err) {\n              return done(err);\n            }\n            if (code != null && code !== token.text) {\n              token.text = code;\n              token.escaped = true;\n            }\n\n            pending--;\n            if (pending === 0) {\n              done();\n            }\n          });\n        }, 0);\n      }\n    });\n\n    if (pending === 0) {\n      done();\n    }\n\n    return;\n  }\n\n  function onError(e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n\n  try {\n    const tokens = Lexer.lex(src, opt);\n    if (opt.walkTokens) {\n      if (opt.async) {\n        return Promise.all(marked.walkTokens(tokens, opt.walkTokens))\n          .then(() => {\n            return Parser.parse(tokens, opt);\n          })\n          .catch(onError);\n      }\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parse(tokens, opt);\n  } catch (e) {\n    onError(e);\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };\n\n  args.forEach((pack) => {\n    // copy options to new object\n    const opts = merge({}, pack);\n\n    // set async to true if it was set to true before\n    opts.async = marked.defaults.async || opts.async;\n\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      pack.extensions.forEach((ext) => {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) { // Renderer extensions\n          const prevRenderer = extensions.renderers[ext.name];\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function(...args) {\n              let ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) { // Tokenizer Extensions\n          if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) { // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) { // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n      opts.extensions = extensions;\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      const renderer = marked.defaults.renderer || new Renderer();\n      for (const prop in pack.renderer) {\n        const prevRenderer = renderer[prop];\n        // Replace renderer with func to run extension, but fall back if false\n        renderer[prop] = (...args) => {\n          let ret = pack.renderer[prop].apply(renderer, args);\n          if (ret === false) {\n            ret = prevRenderer.apply(renderer, args);\n          }\n          return ret;\n        };\n      }\n      opts.renderer = renderer;\n    }\n    if (pack.tokenizer) {\n      const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n      for (const prop in pack.tokenizer) {\n        const prevTokenizer = tokenizer[prop];\n        // Replace tokenizer with func to run extension, but fall back if false\n        tokenizer[prop] = (...args) => {\n          let ret = pack.tokenizer[prop].apply(tokenizer, args);\n          if (ret === false) {\n            ret = prevTokenizer.apply(tokenizer, args);\n          }\n          return ret;\n        };\n      }\n      opts.tokenizer = tokenizer;\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      const walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function(token) {\n        let values = [];\n        values.push(pack.walkTokens.call(this, token));\n        if (walkTokens) {\n          values = values.concat(walkTokens.call(this, token));\n        }\n        return values;\n      };\n    }\n\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  let values = [];\n  for (const token of tokens) {\n    values = values.concat(callback.call(marked, token));\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.header) {\n          values = values.concat(marked.walkTokens(cell.tokens, callback));\n        }\n        for (const row of token.rows) {\n          for (const cell of row) {\n            values = values.concat(marked.walkTokens(cell.tokens, callback));\n          }\n        }\n        break;\n      }\n      case 'list': {\n        values = values.concat(marked.walkTokens(token.items, callback));\n        break;\n      }\n      default: {\n        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n            values = values.concat(marked.walkTokens(token[childTokens], callback));\n          });\n        } else if (token.tokens) {\n          values = values.concat(marked.walkTokens(token.tokens, callback));\n        }\n      }\n    }\n  }\n  return values;\n};\n\n/**\n * Parse Inline\n * @param {string} src\n */\nmarked.parseInline = function(src, opt) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked.parseInline(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked.parseInline(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  try {\n    const tokens = Lexer.lexInline(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parseInline(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n};\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.parse = marked;\n\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = Parser.parse;\nconst lexer = Lexer.lex;\n\nexport { Lexer, Parser, Renderer, Slugger, TextRenderer, Tokenizer, defaults, getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n","import { marked } from 'marked';\n\n// @ts-ignore\nimport hljs from 'highlight.js/lib/core';\n\n// @ts-ignore\nimport json from 'highlight.js/lib/languages/json';\nhljs.registerLanguage('json', json);\n\n// @ts-ignore\nimport yaml from 'highlight.js/lib/languages/yaml';\nhljs.registerLanguage('yaml', yaml);\n\n// @ts-ignore\nimport bash from 'highlight.js/lib/languages/bash';\nhljs.registerLanguage('bash', bash);\n\nconst markedOptions: marked.MarkedOptions = {\n  langPrefix: 'hljs language-',\n  highlight: (code, language) => {\n    if (!hljs.getLanguage(language)) {\n      return code;\n    }\n    try {\n      return hljs.highlight(code, { language }).value;\n    } catch (e) {\n      return code;\n    }\n  },\n};\n\nexport function renderMarkdown(content: string): string {\n  return marked(content, markedOptions);\n}\n\nexport { hljs };\n","import React from 'react';\nimport { sanitize } from 'isomorphic-dompurify';\n\nimport { renderMarkdown } from '../helpers';\n\nexport const Markdown: React.FunctionComponent = ({ children }) => {\n  if (!children) {\n    return null;\n  }\n  if (typeof children !== 'string') {\n    return <>{children}</>;\n  }\n\n  return (\n    <div\n      className=\"prose max-w-none text-sm\"\n      dangerouslySetInnerHTML={{ __html: sanitize(renderMarkdown(children)) }}\n    />\n  );\n};\n","import React from 'react';\nimport { Tag as TagType } from '@asyncapi/parser';\n\nimport { Href } from './Href';\n\ninterface Props {\n  tag: TagType;\n}\n\nexport const Tag: React.FunctionComponent<Props> = ({ tag }) => {\n  const name = `#${tag.name()}`;\n  const description = tag.description() || '';\n  const externalDocs = tag.externalDocs();\n\n  const element = (\n    <div\n      title={description}\n      className=\"border border-solid border-blue-300 hover:bg-blue-300 hover:text-blue-600 text-blue-500 font-bold no-underline text-xs rounded px-3 py-1\"\n    >\n      <span className={externalDocs ? 'underline' : ''}>{name}</span>\n    </div>\n  );\n\n  if (externalDocs) {\n    return (\n      <Href href={externalDocs.url()} title={description}>\n        {element}\n      </Href>\n    );\n  }\n  return element;\n};\n","import React from 'react';\nimport { Tag as TagType } from '@asyncapi/parser';\n\nimport { Tag } from './Tag';\n\ninterface Props {\n  tags?: TagType[];\n}\n\nexport const Tags: React.FunctionComponent<Props> = ({ tags }) => {\n  if (!tags || !tags.length) {\n    return null;\n  }\n\n  return (\n    <ul className=\"flex flex-wrap leading-normal\">\n      {tags.map(tag => (\n        <li className=\"inline-block mt-2 mr-2\" key={tag.name()}>\n          <Tag tag={tag} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\n\nimport { Href, Markdown, Tags } from '../../components';\nimport { useSpec } from '../../contexts';\n\nimport {\n  TERMS_OF_SERVICE_TEXT,\n  CONTENT_TYPES_SITE,\n  URL_SUPPORT_TEXT,\n  EXTERAL_DOCUMENTATION_TEXT,\n} from '../../constants';\n\nexport const Info: React.FunctionComponent = () => {\n  const asyncapi = useSpec();\n\n  const info = asyncapi.info();\n  if (!info) {\n    return null;\n  }\n\n  const specId = asyncapi.id();\n  const externalDocs = asyncapi.externalDocs();\n  const license = info.license();\n  const termsOfService = info.termsOfService();\n  const defaultContentType = asyncapi.defaultContentType();\n  const contact = info.contact();\n\n  const showInfoList =\n    license || termsOfService || defaultContentType || contact || externalDocs;\n\n  return (\n    <div className=\"panel-item\">\n      <div className=\"panel-item--center px-8 text-left\" id=\"introduction\">\n        <div className=\"text-4xl\">\n          {info.title()}&nbsp;{info.version()}\n        </div>\n\n        {showInfoList && (\n          <ul className=\"flex flex-wrap mt-2 leading-normal\">\n            {license && (\n              <li className=\"inline-block mt-2 mr-2\">\n                {license.url() ? (\n                  <Href\n                    className=\"border border-solid border-orange-300 hover:bg-orange-300 hover:text-orange-600 text-orange-500 font-bold no-underline text-xs uppercase rounded px-3 py-1\"\n                    href={license.url()}\n                  >\n                    <span>{license.name()}</span>\n                  </Href>\n                ) : (\n                  <span className=\"border border-solid border-orange-300 hover:bg-orange-300 hover:text-orange-600 text-orange-500 font-bold no-underline text-xs uppercase rounded px-3 py-1\">\n                    {license.name()}\n                  </span>\n                )}\n              </li>\n            )}\n            {termsOfService && (\n              <li className=\"inline-block mt-2 mr-2\">\n                <Href\n                  className=\"border border-solid border-orange-300 hover:bg-orange-300 hover:text-orange-600 text-orange-500 font-bold no-underline text-xs uppercase rounded px-3 py-1\"\n                  href={termsOfService}\n                >\n                  <span>{TERMS_OF_SERVICE_TEXT}</span>\n                </Href>\n              </li>\n            )}\n            {defaultContentType && (\n              <li className=\"inline-block mt-2 mr-2\">\n                <Href\n                  className=\"border border-solid border-orange-300 hover:bg-orange-300 hover:text-orange-600 text-orange-500 font-bold no-underline text-xs uppercase rounded px-3 py-1\"\n                  href={`${CONTENT_TYPES_SITE}/${defaultContentType}`}\n                >\n                  <span>{defaultContentType}</span>\n                </Href>\n              </li>\n            )}\n            {externalDocs && (\n              <li className=\"inline-block mt-2 mr-2\">\n                <Href\n                  className=\"border border-solid border-orange-300 hover:bg-orange-300 hover:text-orange-600 text-orange-500 font-bold no-underline text-xs uppercase rounded px-3 py-1\"\n                  href={externalDocs.url()}\n                >\n                  <span>{EXTERAL_DOCUMENTATION_TEXT}</span>\n                </Href>\n              </li>\n            )}\n            {contact && (\n              <>\n                {contact.url() && (\n                  <li className=\"inline-block mt-2 mr-2\">\n                    <Href\n                      className=\"border border-solid border-purple-300 hover:bg-purple-300 hover:text-purple-600 text-purple-500 font-bold no-underline text-xs uppercase rounded px-3 py-1\"\n                      href={contact.url()}\n                    >\n                      <span>{contact.name() || URL_SUPPORT_TEXT}</span>\n                    </Href>\n                  </li>\n                )}\n                {contact.email() && (\n                  <li className=\"inline-block mt-2 mr-2\">\n                    <Href\n                      className=\"border border-solid border-purple-300 hover:bg-purple-300 hover:text-purple-600 text-purple-500 font-bold no-underline text-xs uppercase rounded px-3 py-1\"\n                      href={`mailto:${contact.email()}`}\n                    >\n                      <span>{contact.email()}</span>\n                    </Href>\n                  </li>\n                )}\n              </>\n            )}\n            {specId && (\n              <li className=\"inline-block mt-2 mr-2\">\n                <span className=\"border border-solid border-blue-300 hover:bg-blue-300 hover:text-blue-600 text-blue-500 font-bold no-underline text-xs uppercase rounded px-3 py-1\">\n                  ID: {specId}\n                </span>\n              </li>\n            )}\n          </ul>\n        )}\n\n        {info.hasDescription() && (\n          <div className=\"mt-4\">\n            <Markdown>{info.description()}</Markdown>\n          </div>\n        )}\n\n        {asyncapi.hasTags() && (\n          <div className=\"mt-4\">\n            <Tags tags={asyncapi.tags()} />\n          </div>\n        )}\n      </div>\n\n      <div className=\"panel-item--right\" />\n    </div>\n  );\n};\n","import { SecurityScheme } from '@asyncapi/parser';\n\nexport class ServerHelpers {\n  static securityType(value: string) {\n    switch (value) {\n      case 'apiKey':\n        return 'API key';\n      case 'oauth2':\n        return 'OAuth2';\n      case 'openIdConnect':\n        return 'Open ID';\n      case 'http':\n        return 'HTTP';\n      case 'userPassword':\n        return 'User/Password';\n      case 'X509':\n        return 'X509:';\n      case 'symmetricEncryption':\n        return 'Symmetric Encription';\n      case 'asymmetricEncryption':\n        return 'Asymmetric Encription';\n      case 'httpApiKey':\n        return 'HTTP API key';\n      case 'scramSha256':\n        return 'ScramSha256';\n      case 'scramSha512':\n        return 'ScramSha512';\n      case 'gssapi':\n        return 'GSSAPI';\n      default:\n        return 'API key';\n    }\n  }\n\n  static flowName(value: string) {\n    switch (value) {\n      case 'implicit':\n        return 'Implicit';\n      case 'password':\n        return 'Password';\n      case 'clientCredentials':\n        return 'Client credentials';\n      case 'authorizationCode':\n        return 'Authorization Code';\n      default:\n        return 'Implicit';\n    }\n  }\n\n  static getKafkaSecurity(\n    protocol: string,\n    securitySchema: SecurityScheme | null,\n  ) {\n    let securityProtocol;\n    let saslMechanism;\n    if (protocol === 'kafka') {\n      if (securitySchema) {\n        securityProtocol = 'SASL_PLAINTEXT';\n      } else {\n        securityProtocol = 'PLAINTEXT';\n      }\n    } else {\n      if (securitySchema) {\n        securityProtocol = 'SASL_SSL';\n      } else {\n        securityProtocol = 'SSL';\n      }\n    }\n    if (securitySchema) {\n      switch (securitySchema.type()) {\n        case 'plain':\n          saslMechanism = 'PLAIN';\n          break;\n        case 'scramSha256':\n          saslMechanism = 'SCRAM-SHA-256';\n          break;\n        case 'scramSha512':\n          saslMechanism = 'SCRAM-SHA-512';\n          break;\n        case 'oauth2':\n          saslMechanism = 'OAUTHBEARER';\n          break;\n        case 'gssapi':\n          saslMechanism = 'GSSAPI';\n          break;\n        case 'X509':\n          securityProtocol = 'SSL';\n          break;\n      }\n    }\n\n    return { securityProtocol, saslMechanism };\n  }\n}\n","import React from 'react';\nimport { ServerSecurityRequirement, SecurityScheme } from '@asyncapi/parser';\n\nimport { Href, Markdown } from '../../components';\n\nimport { useSpec } from '../../contexts';\nimport { ServerHelpers } from '../../helpers';\n\ninterface Props {\n  security: ServerSecurityRequirement[];\n  protocol?: string;\n  header?: string;\n}\n\nexport const Security: React.FunctionComponent<Props> = ({\n  security = [],\n  protocol = '',\n  header = 'Security',\n}) => {\n  const asyncapi = useSpec();\n  const securitySchemes =\n    asyncapi.hasComponents() && asyncapi.components().securitySchemes();\n\n  let renderedSecurities;\n  if (\n    !security ||\n    !security.length ||\n    !securitySchemes ||\n    !Object.keys(securitySchemes).length\n  ) {\n    if (protocol === 'kafka' || protocol === 'kafka-secure') {\n      renderedSecurities = (\n        <SecurityItem protocol={protocol} securitySchema={null} />\n      );\n    }\n  } else {\n    const securities: React.ReactNodeArray = security\n      .map(requirement => {\n        const requirements = requirement.json();\n        const key = Object.keys(requirements)[0];\n        const def = securitySchemes[String(key)];\n        const requiredScopes: string[] = requirements[String(key)];\n\n        if (!def) {\n          return null;\n        }\n        return (\n          <SecurityItem\n            protocol={protocol}\n            securitySchema={def}\n            requiredScopes={requiredScopes}\n            key={def.type()}\n          />\n        );\n      })\n      .filter(Boolean);\n\n    renderedSecurities = (\n      <ul>\n        {securities.map((s, idx) => (\n          <li className=\"mt-2\" key={idx}>\n            {s}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  if (!renderedSecurities) {\n    return null;\n  }\n\n  return (\n    <div className=\"text-sm mt-4\">\n      <h5 className=\"text-gray-800\">{header}:</h5>\n      {renderedSecurities}\n    </div>\n  );\n};\n\nfunction collectSecuritySchemas(\n  securitySchema: SecurityScheme | null,\n  requiredScopes: string[] = [],\n): React.ReactNodeArray {\n  const schemas: React.ReactNodeArray = [];\n  if (securitySchema) {\n    if (securitySchema.name()) {\n      schemas.push(<span>Name: {securitySchema.name()}</span>);\n    }\n    if (securitySchema.in()) {\n      schemas.push(<span>In: {securitySchema.in()}</span>);\n    }\n    if (securitySchema.scheme()) {\n      schemas.push(<span>Scheme: {securitySchema.scheme()}</span>);\n    }\n    if (securitySchema.bearerFormat()) {\n      schemas.push(<span>Bearer format: {securitySchema.bearerFormat()}</span>);\n    }\n    if (securitySchema.openIdConnectUrl()) {\n      schemas.push(\n        <Href href={securitySchema.openIdConnectUrl()} className=\"underline\">\n          Connect URL\n        </Href>,\n      );\n    }\n    if (requiredScopes.length) {\n      schemas.push(<span>Required scopes: {requiredScopes.join(', ')}</span>);\n    }\n  }\n  return schemas;\n}\n\ninterface SecurityItemProps {\n  securitySchema: SecurityScheme | null;\n  protocol: string;\n  requiredScopes?: string[];\n}\n\nconst SecurityItem: React.FunctionComponent<SecurityItemProps> = ({\n  securitySchema,\n  protocol,\n  requiredScopes,\n}) => {\n  const schemas: React.ReactNodeArray = collectSecuritySchemas(\n    securitySchema,\n    requiredScopes,\n  );\n\n  let renderedKafkaSecurity;\n  if (['kafka', 'kafka-secure'].includes(protocol)) {\n    const { securityProtocol, saslMechanism } = ServerHelpers.getKafkaSecurity(\n      protocol,\n      securitySchema,\n    );\n\n    renderedKafkaSecurity = (\n      <div className=\"px-4 py-2 ml-2 mb-2 border border-gray-400 bg-gray-100 rounded\">\n        {securityProtocol && (\n          <div className=\"mt-1\">\n            <span className=\"text-xs font-bold text-gray-600 mt-1 mr-1 uppercase\">\n              security.protocol:\n            </span>\n            <span className=\"inline-block font-bold no-underline bg-indigo-400 text-white text-xs rounded py-0 px-1 ml-1\">\n              {securityProtocol}\n            </span>\n          </div>\n        )}\n        {saslMechanism && (\n          <div className=\"mt-1\">\n            <span className=\"text-xs font-bold text-gray-600 mt-1 mr-1 uppercase\">\n              sasl.mechanism:\n            </span>\n            <span className=\"inline-block font-bold no-underline bg-indigo-400 text-white text-xs rounded py-0 px-1 ml-1\">\n              {saslMechanism}\n            </span>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  const flows = securitySchema && securitySchema.flows();\n  const renderedFlows =\n    flows &&\n    Object.entries(flows).map(([flowName, flow]) => {\n      const authorizationUrl = flow.authorizationUrl();\n      const tokenUrl = flow.tokenUrl();\n      const refreshUrl = flow.refreshUrl();\n      const scopes = flow.scopes();\n\n      return (\n        <div\n          className=\"px-4 py-2 ml-2 mb-2 border border-gray-400 bg-gray-100 rounded\"\n          key={flowName}\n        >\n          <div>\n            <span className=\"text-xs font-bold text-gray-600 mt-1 mr-1 uppercase\">\n              Flow:\n            </span>\n            <span className=\"text-xs font-bold text-gray-600 mt-1 mr-1 uppercase\">\n              {ServerHelpers.flowName(flowName)}\n            </span>\n          </div>\n\n          {authorizationUrl && (\n            <div className=\"mt-1\">\n              <span className=\"text-xs font-bold text-gray-600 mt-1 mr-1 uppercase\">\n                Auth URL:\n              </span>\n              <Href href={authorizationUrl} className=\"underline\">\n                {authorizationUrl}\n              </Href>\n            </div>\n          )}\n          {tokenUrl && (\n            <div className=\"mt-1\">\n              <span className=\"text-xs font-bold text-gray-600 mt-1 mr-1 uppercase\">\n                Token URL:\n              </span>\n              <Href href={tokenUrl} className=\"underline\">\n                {tokenUrl}\n              </Href>\n            </div>\n          )}\n          {refreshUrl && (\n            <div className=\"mt-1\">\n              <span className=\"text-xs font-bold text-gray-600 mt-1 mr-1 uppercase\">\n                Refresh URL:\n              </span>\n              <Href href={refreshUrl} className=\"underline\">\n                {refreshUrl}\n              </Href>\n            </div>\n          )}\n          {scopes && (\n            <div className=\"mt-1\">\n              <span className=\"text-xs font-bold text-gray-600 mt-1 mr-1 uppercase\">\n                Scopes:\n              </span>\n              <ul className=\"inline-block\">\n                {scopes &&\n                  Object.entries(scopes).map(([scopeName, scopeDesc]) => (\n                    <li\n                      className=\"inline-block font-bold no-underline bg-indigo-400 text-white text-xs rounded py-0 px-1 ml-1\"\n                      title={scopeDesc}\n                      key={scopeName}\n                    >\n                      {scopeName}\n                    </li>\n                  ))}\n              </ul>\n            </div>\n          )}\n        </div>\n      );\n    });\n\n  return (\n    <div>\n      {securitySchema && schemas && (\n        <div>\n          <span>\n            {ServerHelpers.securityType(securitySchema.type())}\n            {schemas.length > 0 && (\n              <ul className=\"inline-block ml-2\">\n                {schemas.map((schema, idx) => (\n                  <li\n                    className=\"inline-block font-bold no-underline bg-blue-400 text-white text-xs uppercase rounded px-2 py-0 ml-1\"\n                    key={idx}\n                  >\n                    {schema}\n                  </li>\n                ))}\n              </ul>\n            )}\n          </span>\n        </div>\n      )}\n\n      {securitySchema && securitySchema.hasDescription() && (\n        <div>\n          <Markdown>{securitySchema.description()}</Markdown>\n        </div>\n      )}\n\n      {renderedFlows && renderedFlows.length > 0 && (\n        <ul className=\"my-2\">\n          <li>{renderedFlows}</li>\n        </ul>\n      )}\n\n      {renderedKafkaSecurity && <div>{renderedKafkaSecurity}</div>}\n    </div>\n  );\n};\n","import { ChannelParameter, ServerVariable, Schema } from '@asyncapi/parser';\n// @ts-ignore\nimport SchemaClass from '@asyncapi/parser/lib/models/schema';\n\nexport enum SchemaCustomTypes {\n  // for `true` and `{}` schemas\n  ANY = 'any',\n  // for schemas without `type` keyword\n  RESTRICTED_ANY = 'restricted any',\n  // for `false` and `{ not: {}, ... }` schemas\n  NEVER = 'never',\n  // for types that we cannot infer\n  UNKNOWN = 'unknown',\n}\n\nconst jsonSchemaTypes = [\n  'string',\n  'number',\n  'integer',\n  'boolean',\n  'array',\n  'object',\n  'null',\n];\nconst jsonSchemaKeywordTypes: Record<string, string> = {\n  // string\n  maxLength: 'string',\n  minLength: 'string',\n  pattern: 'string',\n  contentMediaType: 'string',\n  contentEncoding: 'string',\n  // number\n  multipleOf: 'number',\n  maximum: 'number',\n  exclusiveMaximum: 'number',\n  minimum: 'number',\n  exclusiveMinimum: 'number',\n  // array\n  items: 'array',\n  maxItems: 'array',\n  minItems: 'array',\n  uniqueItems: 'array',\n  contains: 'array',\n  additionalItems: 'array',\n  // object\n  maxProperties: 'object',\n  minProperties: 'object',\n  required: 'object',\n  properties: 'object',\n  patternProperties: 'object',\n  propertyNames: 'object',\n  dependencies: 'object',\n  additionalProperties: 'object',\n};\nconst jsonSchemaKeywords = Object.keys(jsonSchemaKeywordTypes);\n\nexport class SchemaHelpers {\n  static extRenderType = 'x-schema-private-render-type';\n  static extRenderAdditionalInfo = 'x-schema-private-render-additional-info';\n  static extRawValue = 'x-schema-private-raw-value';\n  static extParameterLocation = 'x-schema-private-parameter-location';\n\n  static toSchemaType(schema: Schema): string {\n    if (!schema || typeof schema.json !== 'function') {\n      return SchemaCustomTypes.UNKNOWN;\n    }\n    if (schema.isBooleanSchema()) {\n      if (schema.json() === true) {\n        return SchemaCustomTypes.ANY;\n      } else {\n        return SchemaCustomTypes.NEVER;\n      }\n    }\n    // handle case with `{}` schemas\n    if (Object.keys(schema.json()).length === 0) {\n      return SchemaCustomTypes.ANY;\n    }\n    // handle case with `{ not: {}, ... }` schemas\n    const not = schema.not();\n    if (not && this.inferType(not) === SchemaCustomTypes.ANY) {\n      return SchemaCustomTypes.NEVER;\n    }\n\n    let type = this.inferType(schema);\n    if (Array.isArray(type)) {\n      return type.map(t => this.toType(t, schema)).join(' | ');\n    }\n    type = this.toType(type, schema);\n    const combinedType = this.toCombinedType(schema);\n\n    if (type && combinedType) {\n      return `${type} ${combinedType}`;\n    }\n    if (combinedType) {\n      return combinedType;\n    }\n    return type;\n  }\n\n  static prettifyValue(value: any, strict = true): string {\n    const typeOf = typeof value;\n    if (typeOf === 'string') {\n      return strict ? `\"${value}\"` : value;\n    }\n    if (typeOf === 'number' || typeOf === 'bigint' || typeOf === 'boolean') {\n      return `${value}`;\n    }\n    if (Array.isArray(value)) {\n      return `[${value.toString()}]`;\n    }\n    return JSON.stringify(value);\n  }\n\n  static humanizeConstraints(schema: Schema): string[] {\n    const constraints: string[] = [];\n\n    // related to number/integer\n    const numberRange = this.humanizeNumberRangeConstraint(\n      schema.minimum(),\n      schema.exclusiveMinimum(),\n      schema.maximum(),\n      schema.exclusiveMaximum(),\n    );\n    if (numberRange !== undefined) {\n      constraints.push(numberRange);\n    }\n    const multipleOfConstraint = this.humanizeMultipleOfConstraint(\n      schema.multipleOf(),\n    );\n    if (multipleOfConstraint !== undefined) {\n      constraints.push(multipleOfConstraint);\n    }\n\n    // related to string\n    const stringRange = this.humanizeRangeConstraint(\n      'characters',\n      schema.minLength(),\n      schema.maxLength(),\n    );\n    if (stringRange !== undefined) {\n      constraints.push(stringRange);\n    }\n\n    // related to array\n    const hasUniqueItems = schema.uniqueItems();\n    const arrayRange = this.humanizeRangeConstraint(\n      hasUniqueItems ? 'unique items' : 'items',\n      schema.minItems(),\n      schema.maxItems(),\n    );\n    if (arrayRange !== undefined) {\n      constraints.push(arrayRange);\n    }\n\n    // related to object\n    const objectRange = this.humanizeRangeConstraint(\n      'properties',\n      schema.minProperties(),\n      schema.maxProperties(),\n    );\n    if (objectRange !== undefined) {\n      constraints.push(objectRange);\n    }\n\n    return constraints;\n  }\n\n  static isExpandable(schema: Schema): boolean {\n    let type = this.inferType(schema);\n    type = Array.isArray(type) ? type : [type];\n    if (type.includes('object') || type.includes('array')) {\n      return true;\n    }\n\n    if (\n      schema.oneOf() ||\n      schema.anyOf() ||\n      schema.allOf() ||\n      Object.keys(schema.properties()).length ||\n      schema.items() ||\n      schema.not() ||\n      schema.if() ||\n      schema.then() ||\n      schema.else()\n    ) {\n      return true;\n    }\n\n    const customExtensions = this.getCustomExtensions(schema);\n    if (customExtensions && Object.keys(customExtensions).length) {\n      return true;\n    }\n\n    return false;\n  }\n\n  static serverVariablesToSchema(\n    urlVariables?: Record<string, ServerVariable>,\n  ): Schema | undefined {\n    if (!urlVariables || !Object.keys(urlVariables).length) {\n      return undefined;\n    }\n\n    const json = {\n      type: 'object',\n      properties: Object.entries(urlVariables).reduce(\n        (obj, [variableName, variable]) => {\n          obj[variableName] = Object.assign({}, variable.json() || {});\n          obj[variableName].type = 'string';\n          return obj;\n        },\n        {},\n      ),\n      required: Object.keys(urlVariables),\n      [this.extRenderType]: false,\n      [this.extRenderAdditionalInfo]: false,\n    };\n    return new SchemaClass(json);\n  }\n\n  static parametersToSchema(\n    parameters?: Record<string, ChannelParameter>,\n  ): Schema | undefined {\n    if (!parameters || !Object.keys(parameters).length) {\n      return undefined;\n    }\n\n    const json = {\n      type: 'object',\n      properties: Object.entries(parameters).reduce(\n        (obj, [paramaterName, parameter]) => {\n          const parameterSchema = parameter.schema();\n          obj[paramaterName] = Object.assign(\n            {},\n            parameterSchema ? parameterSchema.json() : {},\n          );\n          obj[paramaterName].description =\n            parameter.description() || obj[paramaterName].description;\n          obj[paramaterName][this.extParameterLocation] = parameter.location();\n          return obj;\n        },\n        {},\n      ),\n      required: Object.keys(parameters),\n      [this.extRenderType]: false,\n      [this.extRenderAdditionalInfo]: false,\n    };\n    return new SchemaClass(json);\n  }\n\n  static jsonToSchema(value: any): any {\n    const json = this.jsonFieldToSchema(value);\n    return new SchemaClass(json);\n  }\n\n  /**\n   * Retrieves from given value all custom extensions (value with key started by `x-`).\n   * However, it skips those private extensions that begin with `x-parser-` and `x-schema-private-`.\n   *\n   * @param value\n   */\n  static getCustomExtensions(value: any) {\n    if (!value || typeof value.extensions !== 'function') {\n      return;\n    }\n    return Object.entries(value.extensions() || {}).reduce(\n      (obj, [extName, ext]) => {\n        if (\n          !extName.startsWith('x-parser-') &&\n          !extName.startsWith('x-schema-private-')\n        ) {\n          obj[extName] = ext;\n        }\n        return obj;\n      },\n      {},\n    );\n  }\n\n  /**\n   * Retrieves from given schema all dependent required requires by given propertyName from `dependencies` object.\n   *\n   * @param propertyName\n   * @param schema\n   */\n  static getDependentRequired(\n    propertyName: string,\n    schema: Schema,\n  ): string[] | undefined {\n    const dependentRequired: string[] = [];\n    const dependencies = schema.dependencies();\n    if (!dependencies) {\n      return;\n    }\n\n    for (const [prop, array] of Object.entries(dependencies)) {\n      if (Array.isArray(array) && array.includes(propertyName)) {\n        dependentRequired.push(prop);\n      }\n    }\n    return dependentRequired.length ? dependentRequired : undefined;\n  }\n\n  /**\n   * Retrieves from given schema all dependent schemas from `dependencies` object.\n   *\n   * @param schema\n   */\n  static getDependentSchemas(schema: Schema): Schema | undefined {\n    const dependencies = schema.dependencies();\n    if (!dependencies) {\n      return;\n    }\n\n    const records: Record<string, Schema> = {};\n    for (const [prop, propSchema] of Object.entries(dependencies)) {\n      if (typeof propSchema === 'object' && !Array.isArray(propSchema)) {\n        records[prop] = propSchema;\n      }\n    }\n    if (!Object.keys(records).length) {\n      return undefined;\n    }\n\n    const json = {\n      type: 'object',\n      properties: Object.entries(records).reduce(\n        (obj, [propertyName, propertySchema]) => {\n          obj[propertyName] = Object.assign({}, propertySchema.json());\n          return obj;\n        },\n        {},\n      ),\n      [this.extRenderType]: false,\n      [this.extRenderAdditionalInfo]: false,\n    };\n    return new SchemaClass(json);\n  }\n\n  private static toType(type: string, schema: Schema): string {\n    if (schema.isCircular()) {\n      return type;\n    }\n    if (type === 'array') {\n      const items = schema.items();\n      if (Array.isArray(items)) {\n        return this.toItemsType(items, schema);\n      }\n      if (!items) {\n        return `array<${SchemaCustomTypes.ANY}>`;\n      }\n      return `array<${this.toSchemaType(items) || SchemaCustomTypes.UNKNOWN}>`;\n    }\n    return type;\n  }\n\n  private static toItemsType(items: Schema[], schema: Schema): string {\n    const types = items.map(item => this.toSchemaType(item)).join(', ');\n    const additionalItems = schema.additionalItems() as any;\n    if (additionalItems === undefined || additionalItems.json()) {\n      const additionalType =\n        additionalItems === undefined || additionalItems.json() === true\n          ? SchemaCustomTypes.ANY\n          : this.toSchemaType(additionalItems);\n      return `tuple<${types ||\n        SchemaCustomTypes.UNKNOWN}, ...optional<${additionalType}>>`;\n    }\n    return `tuple<${types || SchemaCustomTypes.UNKNOWN}>`;\n  }\n\n  private static toCombinedType(schema: Schema): string | undefined {\n    const oneOf = schema.oneOf();\n    if (oneOf) {\n      return 'oneOf';\n    }\n    if (schema.anyOf()) {\n      return 'anyOf';\n    }\n    if (schema.allOf()) {\n      return 'allOf';\n    }\n    return;\n  }\n\n  private static inferType(schema: Schema): string[] | string {\n    let types = schema.type();\n\n    if (types !== undefined) {\n      if (Array.isArray(types)) {\n        // if types have `integer` and `number` types, `integer` is unnecessary\n        if (types.includes('integer') && types.includes('number')) {\n          types = types.filter(t => t !== 'integer');\n        }\n        return types.length === 1 ? types[0] : types;\n      }\n      return types;\n    }\n\n    const constValue = schema.const();\n    if (constValue !== undefined) {\n      return typeof constValue;\n    }\n    const enumValue = schema.enum();\n    if (Array.isArray(enumValue) && enumValue.length) {\n      const inferredType = Array.from(new Set(enumValue.map(e => typeof e)));\n      return inferredType.length === 1 ? inferredType[0] : inferredType;\n    }\n\n    const schemaKeys = Object.keys(schema.json() || {}) || [];\n    const hasInferredTypes = jsonSchemaKeywords.some(key =>\n      schemaKeys.includes(key),\n    );\n    if (hasInferredTypes === true) {\n      return SchemaCustomTypes.RESTRICTED_ANY;\n    }\n    if (this.toCombinedType(schema)) {\n      return '';\n    }\n    return SchemaCustomTypes.ANY;\n  }\n\n  private static humanizeNumberRangeConstraint(\n    min: number | undefined,\n    exclusiveMin: number | undefined,\n    max: number | undefined,\n    exclusiveMax: number | undefined,\n  ): string | undefined {\n    const hasExclusiveMin = exclusiveMin !== undefined;\n    const hasMin = min !== undefined || hasExclusiveMin;\n    const hasExclusiveMax = exclusiveMax !== undefined;\n    const hasMax = max !== undefined || hasExclusiveMax;\n\n    let numberRange;\n    if (hasMin && hasMax) {\n      numberRange = hasExclusiveMin ? '( ' : '[ ';\n      numberRange += hasExclusiveMin ? exclusiveMin : min;\n      numberRange += ' .. ';\n      numberRange += hasExclusiveMax ? exclusiveMax : max;\n      numberRange += hasExclusiveMax ? ' )' : ' ]';\n    } else if (hasMin) {\n      numberRange = hasExclusiveMin ? '> ' : '>= ';\n      numberRange += hasExclusiveMin ? exclusiveMin : min;\n    } else if (hasMax) {\n      numberRange = hasExclusiveMax ? '< ' : '<= ';\n      numberRange += hasExclusiveMax ? exclusiveMax : max;\n    }\n    return numberRange;\n  }\n\n  private static humanizeMultipleOfConstraint(\n    multipleOf: number | undefined,\n  ): string | undefined {\n    if (multipleOf === undefined) {\n      return;\n    }\n    const strigifiedMultipleOf = multipleOf.toString(10);\n    if (!/^0\\.0*1$/.test(strigifiedMultipleOf)) {\n      return `multiple of ${strigifiedMultipleOf}`;\n    }\n    return `decimal places <= ${strigifiedMultipleOf.split('.')[1].length}`;\n  }\n\n  private static humanizeRangeConstraint(\n    description: string,\n    min: number | undefined,\n    max: number | undefined,\n  ): string | undefined {\n    let stringRange;\n    if (min !== undefined && max !== undefined) {\n      if (min === max) {\n        stringRange = `${min} ${description}`;\n      } else {\n        stringRange = `[ ${min} .. ${max} ] ${description}`;\n      }\n    } else if (max !== undefined) {\n      stringRange = `<= ${max} ${description}`;\n    } else if (min !== undefined) {\n      if (min === 1) {\n        stringRange = 'non-empty';\n      } else {\n        stringRange = `>= ${min} ${description}`;\n      }\n    }\n    return stringRange;\n  }\n\n  private static jsonFieldToSchema(value: any): any {\n    if (value === undefined || value === null) {\n      return {\n        type: 'string',\n        const: '',\n        [this.extRawValue]: true,\n      };\n    }\n    if (typeof value !== 'object') {\n      const str =\n        typeof value.toString === 'function' ? value.toString() : value;\n      return {\n        type: 'string',\n        const: str,\n        [this.extRawValue]: true,\n      };\n    }\n    if (this.isJSONSchema(value)) {\n      return value;\n    }\n    if (Array.isArray(value)) {\n      return {\n        type: 'array',\n        items: value.map(v => this.jsonFieldToSchema(v)),\n        [this.extRenderType]: false,\n        [this.extRenderAdditionalInfo]: false,\n      };\n    }\n    return {\n      type: 'object',\n      properties: Object.entries(value).reduce((obj, [k, v]) => {\n        obj[k] = this.jsonFieldToSchema(v);\n        return obj;\n      }, {}),\n      [this.extRenderType]: false,\n      [this.extRenderAdditionalInfo]: false,\n    };\n  }\n\n  private static isJSONSchema(value: any): boolean {\n    if (\n      value &&\n      typeof value === 'object' &&\n      (jsonSchemaTypes.includes(value.type) ||\n        (Array.isArray(value.type) &&\n          value.type.some((t: string) => !jsonSchemaTypes.includes(t))))\n    ) {\n      return true;\n    }\n    return false;\n  }\n}\n","import React from 'react';\n\nimport { Schema } from './Schema';\n\nimport { SchemaHelpers } from '../helpers';\n\ninterface Props {\n  name?: string;\n  item: any;\n}\n\nexport const Extensions: React.FunctionComponent<Props> = ({\n  name = 'Extensions',\n  item,\n}) => {\n  const extensions = SchemaHelpers.getCustomExtensions(item);\n  if (!extensions || !Object.keys(extensions).length) {\n    return null;\n  }\n\n  const schema = SchemaHelpers.jsonToSchema(extensions);\n  return (\n    schema && (\n      <div className=\"mt-2\">\n        <Schema schemaName={name} schema={schema} onlyTitle={true} />\n      </div>\n    )\n  );\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Schema as SchemaType } from '@asyncapi/parser';\n\nimport { Href, CollapseButton, Markdown, Extensions } from './index';\nimport { SchemaHelpers } from '../helpers';\n\ninterface Props {\n  schemaName?: React.ReactNode;\n  schema?: SchemaType;\n  required?: boolean;\n  isPatternProperty?: boolean;\n  isProperty?: boolean;\n  isCircular?: boolean;\n  dependentRequired?: string[];\n  expanded?: boolean;\n  onlyTitle?: boolean;\n}\n\nconst SchemaContext = React.createContext({\n  reverse: false,\n  deepExpanded: false,\n});\n\nexport const Schema: React.FunctionComponent<Props> = ({\n  schemaName,\n  schema,\n  required = false,\n  isPatternProperty = false,\n  isProperty = false,\n  isCircular = false,\n  dependentRequired,\n  expanded: propExpanded = false,\n  onlyTitle = false,\n}) => {\n  const { reverse, deepExpanded } = useContext(SchemaContext);\n  const [expanded, setExpanded] = useState(propExpanded);\n  const [deepExpand, setDeepExpand] = useState(false);\n\n  useEffect(() => {\n    setDeepExpand(deepExpanded);\n  }, [deepExpanded, setDeepExpand]);\n\n  useEffect(() => {\n    setExpanded(deepExpand);\n  }, [deepExpand, setExpanded]);\n\n  if (\n    !schema ||\n    (typeof schemaName === 'string' &&\n      (schemaName?.startsWith('x-parser-') ||\n        schemaName?.startsWith('x-schema-private-')))\n  ) {\n    return null;\n  }\n\n  const dependentSchemas = SchemaHelpers.getDependentSchemas(schema);\n\n  const constraints = SchemaHelpers.humanizeConstraints(schema);\n  const externalDocs = schema.externalDocs();\n\n  const renderType = schema.ext(SchemaHelpers.extRenderType) !== false;\n  const rawValue = schema.ext(SchemaHelpers.extRawValue) === true;\n  const parameterLocation = schema.ext(SchemaHelpers.extParameterLocation);\n  const isExpandable = SchemaHelpers.isExpandable(schema) || dependentSchemas;\n\n  let schemaType = SchemaHelpers.toSchemaType(schema);\n  isCircular =\n    isCircular ||\n    schema.isCircular() ||\n    schema.ext('x-parser-circular') ||\n    false;\n  const uid = schema.uid();\n\n  const schemaItems = schema.items();\n  if (schemaItems && !Array.isArray(schemaItems)) {\n    /**\n     * fallback for older logic for circular references:\n     *\n     * checking uid for circular items\n     * `x-parser-circular` extension is added to every schema which has circular `items` field,\n     * so we must check that `items` is schema (not array of schemas) and infer UID of schema to display which schema is circular (by the name of schema)\n     */\n    isCircular =\n      isCircular ||\n      schemaItems.isCircular() ||\n      schemaItems.ext('x-parser-circular') ||\n      false;\n    if (\n      isCircular &&\n      typeof (schemaItems as any).circularSchema === 'function'\n    ) {\n      schemaType = SchemaHelpers.toSchemaType(\n        (schemaItems as any).circularSchema(),\n      );\n    }\n  } else if (\n    isCircular &&\n    typeof (schema as any).circularSchema === 'function'\n  ) {\n    schemaType = SchemaHelpers.toSchemaType((schema as any).circularSchema());\n  }\n\n  const styledSchemaName = isProperty ? 'italic' : '';\n  const renderedSchemaName =\n    typeof schemaName === 'string' ? (\n      <span className={`break-words text-sm ${styledSchemaName}`}>\n        {schemaName}\n      </span>\n    ) : (\n      schemaName\n    );\n\n  return (\n    <SchemaContext.Provider\n      value={{ reverse: !reverse, deepExpanded: deepExpand }}\n    >\n      <div>\n        <div className=\"flex py-2\">\n          <div className={`${onlyTitle ? '' : 'min-w-1/4'} mr-2`}>\n            {isExpandable && !isCircular ? (\n              <>\n                <CollapseButton\n                  onClick={() => setExpanded(prev => !prev)}\n                  expanded={expanded}\n                >\n                  {renderedSchemaName}\n                </CollapseButton>\n                <button\n                  type=\"button\"\n                  onClick={() => setDeepExpand(prev => !prev)}\n                  className=\"ml-1 text-sm text-gray-500\"\n                >\n                  {deepExpand ? 'Collapse all' : 'Expand all'}\n                </button>\n              </>\n            ) : (\n              <span\n                className={`break-words text-sm ${isProperty ? 'italic' : ''}`}\n              >\n                {schemaName}\n              </span>\n            )}\n            {isPatternProperty && (\n              <div className=\"text-gray-500 text-xs italic\">\n                (pattern property)\n              </div>\n            )}\n            {required && <div className=\"text-red-600 text-xs\">required</div>}\n            {dependentRequired && (\n              <>\n                <div className=\"text-gray-500 text-xs\">\n                  required when defined:\n                </div>\n                <div className=\"text-red-600 text-xs\">\n                  {dependentRequired.join(', ')}\n                </div>\n              </>\n            )}\n            {schema.deprecated() && (\n              <div className=\"text-red-600 text-xs\">deprecated</div>\n            )}\n            {schema.writeOnly() && (\n              <div className=\"text-gray-500 text-xs\">write-only</div>\n            )}\n            {schema.readOnly() && (\n              <div className=\"text-gray-500 text-xs\">read-only</div>\n            )}\n          </div>\n          {rawValue ? (\n            <div>\n              <div className=\"text-sm\">\n                {SchemaHelpers.prettifyValue(schema.const(), false)}\n              </div>\n            </div>\n          ) : (\n            <div>\n              <div>\n                {renderType && (\n                  <div className=\"capitalize text-sm text-teal-500 font-bold inline-block mr-2\">\n                    {isCircular ? `${schemaType} [CIRCULAR]` : schemaType}\n                  </div>\n                )}\n                <div className=\"inline-block\">\n                  {schema.format() && (\n                    <span className=\"bg-yellow-600 font-bold no-underline text-white rounded lowercase mr-2 p-1 text-xs\">\n                      format: {schema.format()}\n                    </span>\n                  )}\n\n                  {/* related to string */}\n                  {schema.pattern() !== undefined && (\n                    <span className=\"bg-yellow-600 font-bold no-underline text-white rounded mr-2 p-1 text-xs\">\n                      must match: {schema.pattern()}\n                    </span>\n                  )}\n                  {schema.contentMediaType() !== undefined && (\n                    <span className=\"bg-yellow-600 font-bold no-underline text-white rounded lowercase mr-2 p-1 text-xs\">\n                      media type: {schema.contentMediaType()}\n                    </span>\n                  )}\n                  {schema.contentEncoding() !== undefined && (\n                    <span className=\"bg-yellow-600 font-bold no-underline text-white rounded lowercase mr-2 p-1 text-xs\">\n                      encoding: {schema.contentEncoding()}\n                    </span>\n                  )}\n\n                  {/* constraints */}\n                  {!!constraints.length &&\n                    constraints.map(c => (\n                      <span\n                        className=\"bg-purple-600 font-bold no-underline text-white rounded lowercase mr-2 p-1 text-xs\"\n                        key={c}\n                      >\n                        {c}\n                      </span>\n                    ))}\n\n                  {uid && !uid.startsWith('<anonymous-') && (\n                    <span className=\"border text-orange-600 rounded mr-2 p-1 text-xs\">\n                      uid: {uid}\n                    </span>\n                  )}\n                </div>\n\n                {schema.hasDescription() && (\n                  <div>\n                    <Markdown>{schema.description()}</Markdown>\n                  </div>\n                )}\n\n                {schema.default() !== undefined && (\n                  <div className=\"text-xs\">\n                    Default value:\n                    <span className=\"border inline-block text-orange-600 rounded ml-1 py-0 px-2\">\n                      {SchemaHelpers.prettifyValue(schema.default())}\n                    </span>\n                  </div>\n                )}\n                {schema.const() !== undefined && (\n                  <div className=\"text-xs\">\n                    Const:\n                    <span className=\"border inline-block text-orange-600 rounded ml-1 py-0 px-2\">\n                      {SchemaHelpers.prettifyValue(schema.const())}\n                    </span>\n                  </div>\n                )}\n                {schema.enum() && (\n                  <ul className=\"text-xs\">\n                    Allowed values:{' '}\n                    {schema.enum().map((e, idx) => (\n                      <li\n                        key={idx}\n                        className=\"border inline-block text-orange-600 rounded ml-1 py-0 px-2\"\n                      >\n                        <span>{SchemaHelpers.prettifyValue(e)}</span>\n                      </li>\n                    ))}\n                  </ul>\n                )}\n                {parameterLocation && (\n                  <div className=\"text-xs\">\n                    Parameter location:{' '}\n                    <span className=\"border text-orange-600 rounded mr-2 p-1 text-xs\">\n                      {parameterLocation}\n                    </span>\n                  </div>\n                )}\n                {externalDocs && (\n                  <span className=\"border border-solid border-orange-300 hover:bg-orange-300 hover:text-orange-600 text-orange-500 font-bold no-underline text-xs uppercase rounded px-2 py-0\">\n                    <Href\n                      href={externalDocs.url()}\n                      title={externalDocs.description() || ''}\n                    >\n                      Documentation\n                    </Href>\n                  </span>\n                )}\n                {schema.examples() && (\n                  <ul className=\"text-xs\">\n                    Examples values:{' '}\n                    {schema.examples().map((e, idx) => (\n                      <li\n                        key={idx}\n                        className=\"border inline-block text-orange-600 rounded ml-1 py-0 px-2 break-all\"\n                      >\n                        <span>{SchemaHelpers.prettifyValue(e)}</span>\n                      </li>\n                    ))}\n                  </ul>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n\n        {isCircular || !isExpandable ? null : (\n          <div\n            className={`rounded p-4 py-2 border bg-gray-100 ${\n              reverse ? 'bg-gray-200' : ''\n            } ${expanded ? 'block' : 'hidden'}`}\n          >\n            <SchemaProperties schema={schema} />\n            <SchemaItems schema={schema} />\n\n            {schema.oneOf() &&\n              schema\n                .oneOf()\n                .map((s, idx) => (\n                  <Schema\n                    key={idx}\n                    schema={s}\n                    schemaName={idx === 0 ? 'Adheres to:' : 'Or to:'}\n                  />\n                ))}\n            {schema.anyOf() &&\n              schema\n                .anyOf()\n                .map((s, idx) => (\n                  <Schema\n                    key={idx}\n                    schema={s}\n                    schemaName={idx === 0 ? 'Can adhere to:' : 'Or to:'}\n                  />\n                ))}\n            {schema.allOf() &&\n              schema\n                .allOf()\n                .map((s, idx) => (\n                  <Schema\n                    key={idx}\n                    schema={s}\n                    schemaName={idx === 0 ? 'Consists of:' : 'And with:'}\n                  />\n                ))}\n            {schema.not() && (\n              <Schema schema={schema.not()} schemaName=\"Cannot adhere to:\" />\n            )}\n\n            {schema.propertyNames() && (\n              <Schema\n                schema={schema.propertyNames()}\n                schemaName=\"Property names must adhere to:\"\n              />\n            )}\n            {schema.contains() && (\n              <Schema\n                schema={schema.contains()}\n                schemaName=\"Array must contain at least one of:\"\n              />\n            )}\n\n            {schema.if() && (\n              <Schema schema={schema.if()} schemaName=\"If schema adheres to:\" />\n            )}\n            {schema.then() && (\n              <Schema\n                schema={schema.then()}\n                schemaName=\"Then must adhere to:\"\n              />\n            )}\n            {schema.else() && (\n              <Schema schema={schema.else()} schemaName=\"Otherwise:\" />\n            )}\n\n            {dependentSchemas && (\n              <Schema\n                schema={dependentSchemas}\n                schemaName=\"Dependent schemas:\"\n              />\n            )}\n\n            <Extensions item={schema} />\n\n            <AdditionalProperties schema={schema} />\n            <AdditionalItems schema={schema} />\n          </div>\n        )}\n      </div>\n    </SchemaContext.Provider>\n  );\n};\n\ninterface SchemaPropertiesProps {\n  schema: SchemaType;\n}\n\nconst SchemaProperties: React.FunctionComponent<SchemaPropertiesProps> = ({\n  schema,\n}) => {\n  const properties = schema.properties() || {};\n  if (!Object.keys(properties)) {\n    return null;\n  }\n\n  const required = schema.required() || [];\n  const patternProperties = schema.patternProperties();\n  const circularProps = schema.ext('x-parser-circular-props') || [];\n\n  return (\n    <>\n      {Object.entries(properties).map(([propertyName, property]) => (\n        <Schema\n          schema={property}\n          schemaName={propertyName}\n          required={required.includes(propertyName)}\n          isProperty={true}\n          isCircular={circularProps.includes(propertyName)}\n          dependentRequired={SchemaHelpers.getDependentRequired(\n            propertyName,\n            schema,\n          )}\n          key={propertyName}\n        />\n      ))}\n      {Object.entries(patternProperties).map(([propertyName, property]) => (\n        <Schema\n          schema={property}\n          schemaName={propertyName}\n          isPatternProperty={true}\n          isProperty={true}\n          isCircular={circularProps.includes(propertyName)}\n          key={propertyName}\n        />\n      ))}\n    </>\n  );\n};\n\ninterface AdditionalPropertiesProps {\n  schema: SchemaType;\n}\n\nconst AdditionalProperties: React.FunctionComponent<AdditionalPropertiesProps> = ({\n  schema,\n}) => {\n  if (schema.ext(SchemaHelpers.extRenderAdditionalInfo) === false) {\n    return null;\n  }\n\n  let type = schema.type();\n  type = Array.isArray(type) ? type : [type];\n  if (!type.includes('object')) {\n    return null;\n  }\n\n  const additionalProperties = schema.additionalProperties();\n  if (additionalProperties === true || additionalProperties === undefined) {\n    return (\n      <p className=\"mt-2 text-xs text-gray-700\">\n        Additional properties are allowed.\n      </p>\n    );\n  }\n  if (additionalProperties === false) {\n    return (\n      <p className=\"mt-2 text-xs text-gray-700\">\n        Additional properties are <strong>NOT</strong> allowed.\n      </p>\n    );\n  }\n  return (\n    <Schema schemaName=\"Additional properties:\" schema={additionalProperties} />\n  );\n};\n\ninterface SchemaItemsProps {\n  schema: SchemaType;\n}\n\nconst SchemaItems: React.FunctionComponent<SchemaItemsProps> = ({ schema }) => {\n  let type = schema.type();\n  type = Array.isArray(type) ? type : [type];\n  if (!type.includes('array')) {\n    return null;\n  }\n  const items = schema.items();\n\n  // object in items\n  if (\n    items &&\n    !Array.isArray(items) &&\n    Object.keys(items.properties() || {}).length\n  ) {\n    return <SchemaProperties schema={items} />;\n  } else if (Array.isArray(items)) {\n    return (\n      <>\n        {items.map((item, idx) => (\n          <Schema schema={item} schemaName={`${idx + 1} item:`} key={idx} />\n        ))}\n      </>\n    );\n  }\n  return <Schema schema={items} schemaName=\"Items:\" />;\n};\n\ninterface AdditionalItemsProps {\n  schema: SchemaType;\n}\n\nconst AdditionalItems: React.FunctionComponent<AdditionalItemsProps> = ({\n  schema,\n}) => {\n  if (schema.ext(SchemaHelpers.extRenderAdditionalInfo) === false) {\n    return null;\n  }\n\n  let type = schema.type();\n  type = Array.isArray(type) ? type : [type];\n  if (!type.includes('array')) {\n    return null;\n  }\n  if (!Array.isArray(schema.items())) {\n    return null;\n  }\n\n  const additionalItems = schema.additionalItems() as any;\n  if (additionalItems === true || additionalItems === undefined) {\n    return (\n      <p className=\"mt-2 text-xs text-gray-700\">\n        Additional items are allowed.\n      </p>\n    );\n  }\n  if (additionalItems === false) {\n    return (\n      <p className=\"mt-2 text-xs text-gray-700\">\n        Additional items are <strong>NOT</strong> allowed.\n      </p>\n    );\n  }\n  return <Schema schemaName=\"Additional items:\" schema={additionalItems} />;\n};\n","import React from 'react';\n\nimport { Schema } from './Schema';\n\nimport { SchemaHelpers } from '../helpers';\n\ninterface Props {\n  name?: string;\n  bindings: any;\n}\n\nexport const Bindings: React.FunctionComponent<Props> = ({\n  name = 'Binding specific information',\n  bindings,\n}) => {\n  if (!bindings || !Object.keys(bindings).length) {\n    return null;\n  }\n\n  const renderedBindings = Object.entries(bindings).map(\n    ([bindingName, binding]) => {\n      const schema = SchemaHelpers.jsonToSchema(binding);\n      const schemaName = (\n        <div className=\"inline-block text-sm\">\n          <span>{name}</span>\n          <span className=\"bg-teal-500 font-bold no-underline text-white uppercase rounded mx-2 px-2 py-1 text-xs\">\n            {bindingName}\n          </span>\n        </div>\n      );\n      return (\n        schema && (\n          <Schema\n            schemaName={schemaName}\n            schema={schema}\n            key={bindingName}\n            onlyTitle={true}\n          />\n        )\n      );\n    },\n  );\n  return <>{renderedBindings}</>;\n};\n","import { ConfigInterface } from '../config';\n\nexport class CommonHelpers {\n  static getIdentifier(id: string, config?: ConfigInterface) {\n    const schemaID = config?.schemaID;\n    if (schemaID) {\n      return `${schemaID}-${id}`;\n    }\n    return id;\n  }\n}\n","import React from 'react';\nimport { Server as ServerType } from '@asyncapi/parser';\n\nimport { Security } from './Security';\nimport { Markdown, Schema, Bindings, Tags, Extensions } from '../../components';\n\nimport { useConfig } from '../../contexts';\nimport { CommonHelpers, SchemaHelpers } from '../../helpers';\n\ninterface Props {\n  serverName: string;\n  server: ServerType;\n}\n\nexport const Server: React.FunctionComponent<Props> = ({\n  serverName,\n  server,\n}) => {\n  const config = useConfig();\n\n  if (!server) {\n    return null;\n  }\n\n  const urlVariables = SchemaHelpers.serverVariablesToSchema(\n    server.variables(),\n  );\n  const protocolVersion = server.protocolVersion();\n  const security = server.security();\n\n  return (\n    <div className=\"panel-item\">\n      <div className=\"panel-item--center px-8\">\n        <div className=\"shadow rounded bg-gray-200 p-4 border bg-gray-100\">\n          <div>\n            <span className=\"font-mono text-base\">{server.url()}</span>\n            <span className=\"bg-teal-500 font-bold no-underline text-white uppercase rounded mx-2 px-2 py-1 text-sm\">\n              {protocolVersion\n                ? `${server.protocol()} ${protocolVersion}`\n                : server.protocol()}\n            </span>\n            <span className=\"bg-blue-500 font-bold no-underline text-white uppercase rounded px-2 py-1 text-sm\">\n              {serverName}\n            </span>\n          </div>\n\n          {server.hasDescription() && (\n            <div className=\"mt-2\">\n              <Markdown>{server.description()}</Markdown>\n            </div>\n          )}\n\n          {urlVariables && (\n            <div\n              className=\"mt-2\"\n              id={`${CommonHelpers.getIdentifier(\n                `server-${serverName}-url-variables`,\n                config,\n              )}`}\n            >\n              <Schema\n                schemaName=\"URL Variables\"\n                schema={urlVariables}\n                expanded={true}\n              />\n            </div>\n          )}\n\n          {\n            <div\n              id={`${CommonHelpers.getIdentifier(\n                `server-${serverName}-security`,\n                config,\n              )}`}\n            >\n              <Security protocol={server.protocol()} security={security} />\n            </div>\n          }\n\n          {server.hasBindings() && (\n            <div className=\"mt-2\">\n              <Bindings\n                name=\"Server specific information\"\n                bindings={server.bindings()}\n              />\n            </div>\n          )}\n\n          <Extensions name=\"Server Extensions\" item={server} />\n\n          {typeof server.hasTags === 'function' && server.hasTags() && (\n            <div className=\"mt-2\">\n              <Tags tags={server.tags()} />\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div className=\"panel-item--right\" />\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { Server } from './Server';\n\nimport { useConfig, useSpec } from '../../contexts';\nimport { CommonHelpers } from '../../helpers';\nimport { SERVERS_TEXT } from '../../constants';\n\nexport const Servers: React.FunctionComponent = () => {\n  const servers = useSpec().servers();\n  const config = useConfig();\n\n  if (!Object.keys(servers).length) {\n    return null;\n  }\n\n  return (\n    <section\n      id={`${CommonHelpers.getIdentifier('servers', config)}`}\n      className=\"mt-16\"\n    >\n      <h2 className=\"2xl:w-7/12 text-3xl font-light mb-4 px-8\">\n        {SERVERS_TEXT}\n      </h2>\n      <ul>\n        {Object.entries(servers).map(([serverName, server]) => (\n          <li\n            className=\"mb-4\"\n            key={serverName}\n            id={`${CommonHelpers.getIdentifier(\n              `server-${serverName}`,\n              config,\n            )}`}\n          >\n            <Server serverName={serverName} server={server} key={serverName} />\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n","import React from 'react';\n\nimport { Markdown } from './index';\n\ninterface Props {\n  snippet: string | object;\n}\n\nexport const JSONSnippet: React.FunctionComponent<Props> = ({ snippet }) => {\n  if (typeof snippet === 'object') {\n    // change code to markdown's json code block\n    snippet = '```json\\n' + JSON.stringify(snippet, undefined, 2) + '\\n```';\n  }\n\n  return <Markdown>{snippet}</Markdown>;\n};\n","'use strict';\n\nfunction pad(number) {\n  if (number < 10) {\n    return '0' + number;\n  }\n  return number;\n}\n\nexport function toRFCDateTime(date, omitTime, omitDate, milliseconds) {\n  var res = omitDate ? '' : (date.getUTCFullYear() +\n    '-' + pad(date.getUTCMonth() + 1) +\n    '-' + pad(date.getUTCDate()));\n  if (!omitTime) {\n    res += 'T' + pad(date.getUTCHours()) +\n      ':' + pad(date.getUTCMinutes()) +\n      ':' + pad(date.getUTCSeconds()) +\n      (milliseconds ? '.' + (date.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) : '') +\n      'Z';\n  }\n  return res;\n};\n\nexport function ensureMinLength(sample, min) {\n  if (min > sample.length) {\n    return sample.repeat(Math.trunc(min / sample.length) + 1).substring(0, min);\n  }\n  return sample;\n}\n\nexport function mergeDeep(...objects) {\n  const isObject = obj => obj && typeof obj === 'object';\n\n  return objects.reduce((prev, obj) => {\n    Object.keys(obj || {}).forEach(key => {\n      const pVal = prev[key];\n      const oVal = obj[key];\n\n      if (isObject(pVal) && isObject(oVal)) {\n        prev[key] = mergeDeep(pVal, oVal);\n      } else {\n        prev[key] = oVal;\n      }\n    });\n\n    return prev;\n  }, Array.isArray(objects[objects.length - 1]) ? [] : {});\n}\n\n// deterministic UUID sampler\n\nexport function uuid(str) {\n  var hash = hashCode(str);\n  var random = jsf32(hash, hash, hash, hash);\n  var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    var r = (random() * 16) % 16 | 0;\n    return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n  });\n  return uuid;\n}\n\nexport function getResultForCircular(type) {\n  return {\n    value: type === 'object' ?\n        {}\n      : type === 'array' ? [] : undefined\n  };\n}\n\nexport function popSchemaStack(seenSchemasStack, context) {\n  if (context) seenSchemasStack.pop();\n}\n\nfunction hashCode(str) {\n  var hash = 0;\n  if (str.length == 0) return hash;\n  for (var i = 0; i < str.length; i++) {\n    var char = str.charCodeAt(i);\n    hash = ((hash << 5) - hash) + char;\n    hash = hash & hash;\n  }\n  return hash;\n}\n\nfunction jsf32(a, b, c, d) {\n  return function () {\n    a |= 0; b |= 0; c |= 0; d |= 0;\n    var t = a - (b << 27 | b >>> 5) | 0;\n    a = b ^ (c << 17 | c >>> 15);\n    b = c + d | 0;\n    c = d + t | 0;\n    d = a + t | 0;\n    return (d >>> 0) / 4294967296;\n  }\n}\n","const schemaKeywordTypes = {\n  multipleOf: 'number',\n  maximum: 'number',\n  exclusiveMaximum: 'number',\n  minimum: 'number',\n  exclusiveMinimum: 'number',\n\n  maxLength: 'string',\n  minLength: 'string',\n  pattern: 'string',\n\n  items: 'array',\n  maxItems: 'array',\n  minItems: 'array',\n  uniqueItems: 'array',\n  additionalItems: 'array',\n\n  maxProperties: 'object',\n  minProperties: 'object',\n  required: 'object',\n  additionalProperties: 'object',\n  properties: 'object',\n  patternProperties: 'object',\n  dependencies: 'object'\n};\n\nexport function inferType(schema) {\n  if (schema.type !== undefined) {\n    return Array.isArray(schema.type) ? schema.type.length === 0 ? null : schema.type[0] : schema.type;\n  }\n  const keywords = Object.keys(schemaKeywordTypes);\n  for (var i = 0; i < keywords.length; i++) {\n    let keyword = keywords[i];\n    let type = schemaKeywordTypes[keyword];\n    if (schema[keyword] !== undefined) {\n      return type;\n    }\n  }\n\n  return null;\n}\n","import { _samplers } from './openapi-sampler';\nimport { allOfSample } from './allOf';\nimport { inferType } from './infer';\nimport { getResultForCircular, mergeDeep, popSchemaStack } from './utils';\nimport JsonPointer from 'json-pointer';\n\nlet $refCache = {};\n// for circular JS references we use additional array and not object as we need to compare entire schemas and not strings\nlet seenSchemasStack = [];\n\nexport function clearCache() {\n  $refCache = {};\n  seenSchemasStack = [];\n}\n\nfunction inferExample(schema) {\n  let example;\n  if (schema.const !== undefined) {\n    example = schema.const;\n  } else if (schema.examples !== undefined && schema.examples.length) {\n    example = schema.examples[0];\n  } else if (schema.enum !== undefined && schema.enum.length) {\n    example = schema.enum[0];\n  } else if (schema.default !== undefined) {\n    example = schema.default;\n  }\n  return example;\n}\n\nfunction tryInferExample(schema) {\n  const example = inferExample(schema);\n  // case when we don't infer example from schema but take from `const`, `examples`, `default` or `enum` keywords\n  if (example !== undefined) {\n    return {\n      value: example,\n      readOnly: schema.readOnly,\n      writeOnly: schema.writeOnly,\n      type: null,\n    };\n  }\n  return;\n}\n\nexport function traverse(schema, options, spec, context) {\n  // checking circular JS references by checking context\n  // because context is passed only when traversing through nested objects happens\n  if (context) {\n    if (seenSchemasStack.includes(schema)) return getResultForCircular(inferType(schema));\n    seenSchemasStack.push(schema);\n  }\n\n\n  if (context && context.depth > options.maxSampleDepth) {\n    popSchemaStack(seenSchemasStack, context);\n    return getResultForCircular(inferType(schema));\n  }\n\n  if (schema.$ref) {\n    if (!spec) {\n      throw new Error('Your schema contains $ref. You must provide full specification in the third parameter.');\n    }\n    let ref = decodeURIComponent(schema.$ref);\n    if (ref.startsWith('#')) {\n      ref = ref.substring(1);\n    }\n\n    const referenced = JsonPointer.get(spec, ref);\n    let result;\n\n    if ($refCache[ref] !== true) {\n      $refCache[ref] = true;\n      result = traverse(referenced, options, spec, context);\n      $refCache[ref] = false;\n    } else {\n      const referencedType = inferType(referenced);\n      result = getResultForCircular(referencedType);\n    }\n    popSchemaStack(seenSchemasStack, context);\n    return result;\n  }\n\n  if (schema.example !== undefined) {\n    popSchemaStack(seenSchemasStack, context);\n    return {\n      value: schema.example,\n      readOnly: schema.readOnly,\n      writeOnly: schema.writeOnly,\n      type: schema.type,\n    };\n  }\n\n  if (schema.allOf !== undefined) {\n    popSchemaStack(seenSchemasStack, context);\n    return tryInferExample(schema) || allOfSample(\n      { ...schema, allOf: undefined },\n      schema.allOf,\n      options,\n      spec,\n      context,\n    );\n  }\n\n  if (schema.oneOf && schema.oneOf.length) {\n    if (schema.anyOf) {\n      if (!options.quiet) console.warn('oneOf and anyOf are not supported on the same level. Skipping anyOf');\n    }\n    popSchemaStack(seenSchemasStack, context);\n\n    // Make sure to pass down readOnly and writeOnly annotations from the parent\n    const firstOneOf = Object.assign({\n      readOnly: schema.readOnly,\n      writeOnly: schema.writeOnly\n    }, schema.oneOf[0]);\n\n    return traverseOneOrAnyOf(schema, firstOneOf)\n  }\n\n  if (schema.anyOf && schema.anyOf.length) {\n    popSchemaStack(seenSchemasStack, context);\n\n    // Make sure to pass down readOnly and writeOnly annotations from the parent\n    const firstAnyOf = Object.assign({\n      readOnly: schema.readOnly,\n      writeOnly: schema.writeOnly\n    }, schema.anyOf[0]);\n\n    return traverseOneOrAnyOf(schema, firstAnyOf)\n  }\n\n  if (schema.if && schema.then) {\n    popSchemaStack(seenSchemasStack, context);\n    const { if: ifSchema, then, ...rest } = schema;\n    return traverse(mergeDeep(rest, ifSchema, then), options, spec, context);\n  }\n\n  let example = inferExample(schema);\n  let type = null;\n  if (example === undefined) {\n    example = null;\n    type = schema.type;\n    if (Array.isArray(type) && schema.type.length > 0) {\n      type = schema.type[0];\n    }\n    if (!type) {\n      type = inferType(schema);\n    }\n    let sampler = _samplers[type];\n    if (sampler) {\n      example = sampler(schema, options, spec, context);\n    }\n  }\n\n  popSchemaStack(seenSchemasStack, context);\n  return {\n    value: example,\n    readOnly: schema.readOnly,\n    writeOnly: schema.writeOnly,\n    type: type\n  };\n\n  function traverseOneOrAnyOf(schema, selectedSubSchema) {\n    const inferred = tryInferExample(schema);\n    if (inferred !== undefined) {\n      return inferred;\n    }\n\n    const localExample = traverse({...schema, oneOf: undefined, anyOf: undefined }, options, spec, context);\n    const subSchemaExample = traverse(selectedSubSchema, options, spec, context);\n\n    if (typeof localExample.value === 'object' && typeof subSchemaExample.value === 'object') {\n      const mergedExample = mergeDeep(localExample.value, subSchemaExample.value);\n      return {...subSchemaExample, value: mergedExample };\n    }\n\n    return subSchemaExample;\n  }\n}\n","import { traverse } from './traverse';\nimport { mergeDeep } from './utils';\n\nexport function allOfSample(into, children, options, spec, context) {\n  let res = traverse(into, options, spec);\n  const subSamples = [];\n\n  for (let subSchema of children) {\n    const { type, readOnly, writeOnly, value } = traverse({ type: res.type, ...subSchema }, options, spec, context);\n    if (res.type && type && type !== res.type) {\n      console.warn('allOf: schemas with different types can\\'t be merged');\n      res.type = type;\n    }\n    res.type = res.type || type;\n    res.readOnly = res.readOnly || readOnly;\n    res.writeOnly = res.writeOnly || writeOnly;\n    if (value != null) subSamples.push(value);\n  }\n\n  if (res.type === 'object') {\n    res.value = mergeDeep(res.value || {}, ...subSamples.filter(sample => typeof sample === 'object'));\n    return res;\n  } else {\n    if (res.type === 'array') {\n      // TODO: implement arrays\n      if (!options.quiet) console.warn('OpenAPI Sampler: found allOf with \"array\" type. Result may be incorrect');\n    }\n    const lastSample = subSamples[subSamples.length - 1];\n    res.value = lastSample != null ? lastSample : res.value;\n    return res;\n  }\n}\n","export function sampleNumber(schema) {\n  let res = 0;\n  if (typeof schema.exclusiveMinimum === 'boolean' || typeof schema.exclusiveMaximum === 'boolean') { //legacy support for jsonschema draft 4 of exclusiveMaximum/exclusiveMinimum as booleans \n    if (schema.maximum && schema.minimum) {\n      res = schema.exclusiveMinimum ? Math.floor(schema.minimum) + 1 : schema.minimum;\n      if ((schema.exclusiveMaximum && res >= schema.maximum) ||\n        ((!schema.exclusiveMaximum && res > schema.maximum))) {\n        res = (schema.maximum + schema.minimum) / 2;\n      }\n      return res;\n    }\n    if (schema.minimum) {\n      if (schema.exclusiveMinimum) {\n        return Math.floor(schema.minimum) + 1;\n      } else {\n        return schema.minimum;\n      }\n    }\n    if (schema.maximum) {\n      if (schema.exclusiveMaximum) {\n        return (schema.maximum > 0) ? 0 : Math.floor(schema.maximum) - 1;\n      } else {\n        return (schema.maximum > 0) ? 0 : schema.maximum;\n      }\n    }\n  } else {\n    if (schema.minimum) {\n      return schema.minimum;\n    }\n    if (schema.exclusiveMinimum) {\n      res = Math.floor(schema.exclusiveMinimum) + 1;\n\n      if (res === schema.exclusiveMaximum) {\n        res = (res + Math.floor(schema.exclusiveMaximum) - 1) / 2;\n      }\n    } else if (schema.exclusiveMaximum) {\n      res = Math.floor(schema.exclusiveMaximum) - 1;\n    } else if (schema.maximum) {\n      res = schema.maximum;\n    }\n  }\n\n  return res;\n}\n","'use strict';\n\nimport { ensureMinLength, toRFCDateTime, uuid } from '../utils';\n\nconst passwordSymbols = 'qwerty!@#$%^123456';\n\nfunction emailSample() {\n  return 'user@example.com';\n}\nfunction idnEmailSample() {\n  return 'пошта@укр.нет';\n}\nfunction passwordSample(min, max) {\n  let res = 'pa$$word';\n  if (min > res.length) {\n    res += '_';\n    res += ensureMinLength(passwordSymbols, min - res.length).substring(0, min - res.length);\n  }\n  return res;\n}\n\nfunction commonDateTimeSample({ min, max, omitTime, omitDate }) {\n  let res = toRFCDateTime(new Date('2019-08-24T14:15:22.123Z'), omitTime, omitDate, false);\n  if (res.length < min) {\n    console.warn(`Using minLength = ${min} is incorrect with format \"date-time\"`);\n  }\n  if (max && res.length > max) {\n    console.warn(`Using maxLength = ${max} is incorrect with format \"date-time\"`);\n  }\n  return res;\n}\n\nfunction dateTimeSample(min, max) {\n  return commonDateTimeSample({ min, max, omitTime: false, omitDate: false });\n}\n\nfunction dateSample(min, max) {\n  return commonDateTimeSample({ min, max, omitTime: true, omitDate: false });\n}\n\nfunction timeSample(min, max) {\n  return commonDateTimeSample({ min, max, omitTime: false, omitDate: true }).slice(1);\n}\n\nfunction defaultSample(min, max) {\n  let res = ensureMinLength('string', min);\n  if (max && res.length > max) {\n    res = res.substring(0, max);\n  }\n  return res;\n}\n\nfunction ipv4Sample() {\n  return '192.168.0.1';\n}\n\nfunction ipv6Sample() {\n  return '2001:0db8:85a3:0000:0000:8a2e:0370:7334';\n}\n\nfunction hostnameSample() {\n  return 'example.com';\n}\nfunction idnHostnameSample() {\n  return 'приклад.укр';\n}\nfunction uriSample() {\n  return 'http://example.com';\n}\n\nfunction uriReferenceSample() {\n  return '../dictionary';\n}\n\nfunction uriTemplateSample() {\n  return 'http://example.com/{endpoint}';\n}\n\nfunction iriSample() {\n  return 'http://example.com/entity/1';\n}\n\nfunction iriReferenceSample() {\n  return '/entity/1';\n}\n\nfunction uuidSample(_min, _max, propertyName) {\n  return uuid(propertyName || 'id');\n}\n\nfunction jsonPointerSample() {\n  return '/json/pointer';\n}\n\nfunction relativeJsonPointerSample() {\n  return '1/relative/json/pointer';\n}\n\nfunction regexSample() {\n  return '/regex/';\n}\n\nconst stringFormats = {\n  'email': emailSample,\n  'idn-email': idnEmailSample, // https://tools.ietf.org/html/rfc6531#section-3.3\n  'password': passwordSample,\n  'date-time': dateTimeSample,\n  'date': dateSample,\n  'time': timeSample, // full-time in https://tools.ietf.org/html/rfc3339#section-5.6\n  'ipv4': ipv4Sample,\n  'ipv6': ipv6Sample,\n  'hostname': hostnameSample,\n  'idn-hostname': idnHostnameSample, // https://tools.ietf.org/html/rfc5890#section-2.3.2.3\n  'iri': iriSample, // https://tools.ietf.org/html/rfc3987\n  'iri-reference': iriReferenceSample,\n  'uri': uriSample,\n  'uri-reference': uriReferenceSample, // either a URI or relative-reference https://tools.ietf.org/html/rfc3986#section-4.1\n  'uri-template': uriTemplateSample,\n  'uuid': uuidSample,\n  'default': defaultSample,\n  'json-pointer': jsonPointerSample,\n  'relative-json-pointer': relativeJsonPointerSample, // https://tools.ietf.org/html/draft-handrews-relative-json-pointer-01\n  'regex': regexSample,\n};\n\nexport function sampleString(schema, options, spec, context) {\n  let format = schema.format || 'default';\n  let sampler = stringFormats[format] || defaultSample;\n  let propertyName = context && context.propertyName;\n  return sampler(schema.minLength | 0, schema.maxLength, propertyName);\n}\n","import { traverse, clearCache } from './traverse';\nimport { sampleArray, sampleBoolean, sampleNumber, sampleObject, sampleString } from './samplers/index';\n\nexport var _samplers = {};\n\nconst defaults = {\n  skipReadOnly: false,\n  maxSampleDepth: 15,\n};\n\nexport function sample(schema, options, spec) {\n  let opts = Object.assign({}, defaults, options);\n  clearCache();\n  return traverse(schema, opts, spec).value;\n};\n\nexport function _registerSampler(type, sampler) {\n  _samplers[type] = sampler;\n};\n\nexport { inferType } from './infer';\n\n_registerSampler('array', sampleArray);\n_registerSampler('boolean', sampleBoolean);\n_registerSampler('integer', sampleNumber);\n_registerSampler('number', sampleNumber);\n_registerSampler('object', sampleObject);\n_registerSampler('string', sampleString);\n","import { traverse } from '../traverse';\nexport function sampleArray(schema, options = {}, spec, context) {\n  const depth = (context && context.depth || 1);\n\n  let arrayLength = Math.min(schema.maxItems != undefined ? schema.maxItems : Infinity, schema.minItems || 1);\n  // for the sake of simplicity, we're treating `contains` in a similar way to `items`\n  const items = schema.prefixItems || schema.items || schema.contains;\n  if (Array.isArray(items)) {\n    arrayLength = Math.max(arrayLength, items.length);\n  }\n\n  let itemSchemaGetter = itemNumber => {\n    if (Array.isArray(items)) {\n      return items[itemNumber] || {};\n    }\n    return items || {};\n  };\n\n  let res = [];\n  if (!items) return res;\n\n  for (let i = 0; i < arrayLength; i++) {\n    let itemSchema = itemSchemaGetter(i);\n    let { value: sample } = traverse(itemSchema, options, spec, {depth: depth + 1});\n    res.push(sample);\n  }\n  return res;\n}\n","export function sampleBoolean(schema) {\n  return true; // let be optimistic :)\n}\n","import { traverse } from '../traverse';\nexport function sampleObject(schema, options = {}, spec, context) {\n  let res = {};\n  const depth = (context && context.depth || 1);\n\n  if (schema && typeof schema.properties === 'object') {\n    let requiredKeys = (Array.isArray(schema.required) ? schema.required : []);\n    let requiredKeyDict = requiredKeys.reduce((dict, key) => {\n      dict[key] = true;\n      return dict;\n    }, {});\n\n    Object.keys(schema.properties).forEach(propertyName => {\n      // skip before traverse that could be costly\n      if (options.skipNonRequired && !requiredKeyDict.hasOwnProperty(propertyName)) {\n        return;\n      }\n\n      const sample = traverse(schema.properties[propertyName], options, spec, { propertyName, depth: depth + 1 });\n      if (options.skipReadOnly && sample.readOnly) {\n        return;\n      }\n\n      if (options.skipWriteOnly && sample.writeOnly) {\n        return;\n      }\n      res[propertyName] = sample.value;\n    });\n  }\n\n  if (schema && typeof schema.additionalProperties === 'object') {\n    const propertyName = schema.additionalProperties['x-additionalPropertiesName'] || 'property';\n    res[`${String(propertyName)}1`] = traverse(schema.additionalProperties, options, spec, {depth: depth + 1 }).value;\n    res[`${String(propertyName)}2`] = traverse(schema.additionalProperties, options, spec, {depth: depth + 1 }).value;\n  }\n  return res;\n}\n","import { Message } from '@asyncapi/parser';\n// @ts-ignore\nimport { sample } from 'openapi-sampler';\n\nimport { MessageExample } from '../types';\n\nexport class MessageHelpers {\n  static generateExample(schema: any, options: any = {}) {\n    try {\n      return this.sanitizeExample(sample(schema, options)) || '';\n    } catch (e) {\n      return '';\n    }\n  }\n\n  static sanitizeExample(schema: any): any {\n    if (typeof schema === 'object' && schema && !Array.isArray(schema)) {\n      return Object.entries(schema).reduce((obj, [propertyName, property]) => {\n        if (\n          !propertyName.startsWith('x-parser-') &&\n          !propertyName.startsWith('x-schema-private-')\n        ) {\n          obj[propertyName] = this.sanitizeExample(property);\n        }\n        return obj;\n      }, {});\n    }\n    return schema;\n  }\n\n  static getPayloadExamples(msg: Message): MessageExample[] | undefined {\n    const examples = msg.examples();\n    if (Array.isArray(examples) && examples.some(e => e.payload)) {\n      const messageExamples = examples\n        .flatMap(e => {\n          if (!e.payload) {\n            return;\n          }\n          return {\n            name: e.name,\n            summary: e.summary,\n            example: e.payload,\n          };\n        })\n        .filter(Boolean) as MessageExample[];\n\n      if (messageExamples.length > 0) {\n        return messageExamples;\n      }\n    }\n\n    const payload = msg.payload();\n    if (payload && payload.examples()) {\n      return payload.examples().map(example => ({ example }));\n    }\n\n    return;\n  }\n\n  static getHeadersExamples(msg: Message): MessageExample[] | undefined {\n    const examples = msg.examples();\n    if (Array.isArray(examples) && examples.some(e => e.headers)) {\n      const messageExamples = examples\n        .flatMap(e => {\n          if (!e.headers) {\n            return;\n          }\n          return {\n            name: e.name,\n            summary: e.summary,\n            example: e.headers,\n          };\n        })\n        .filter(Boolean) as MessageExample[];\n\n      if (messageExamples.length > 0) {\n        return messageExamples;\n      }\n    }\n\n    const headers = msg.headers();\n    if (headers && headers.examples()) {\n      return headers.examples().map(example => ({ example }));\n    }\n\n    return;\n  }\n}\n","import { AsyncAPIDocument } from '@asyncapi/parser';\n\nexport type PropsSchema =\n  | string\n  | FetchingSchemaInterface\n  | AsyncAPIDocument\n  | object;\n\nexport type NullableAsyncApi = AsyncAPIDocument | null;\n\nexport interface AsyncApiState {\n  validatedSchema: NullableAsyncApi;\n  error?: ErrorObject;\n}\n\nexport function isFetchingSchemaInterface(\n  schema: PropsSchema,\n): schema is FetchingSchemaInterface {\n  return (schema as FetchingSchemaInterface).url !== undefined;\n}\n\nexport interface FetchingSchemaInterface {\n  url: string;\n  requestOptions?: RequestInit;\n}\n\nexport interface ParserReturn {\n  asyncapi?: AsyncAPIDocument;\n  error?: ErrorObject;\n}\n\nexport enum PayloadType {\n  PUBLISH = 'publish',\n  SUBSCRIBE = 'subscribe',\n}\n\nexport interface MessageExample {\n  name?: string;\n  summary?: string;\n  example: any;\n}\n\nexport interface ValidationError {\n  title: string;\n  location: {\n    jsonPointer: string;\n    startLine: number;\n    startColumn: number;\n    startOffset: number;\n    endLine: number;\n    endColumn: number;\n    endOffset: number;\n  };\n}\n\nexport interface ErrorObject {\n  type: string;\n  title: string;\n  detail?: string;\n  parsedJSON?: any;\n  validationErrors?: ValidationError[];\n  location?: {\n    startLine: number;\n    startColumn: number;\n    startOffset: number;\n  };\n  refs?: Array<{\n    title: string;\n    jsonPointer: string;\n    startLine: number;\n    startColumn: number;\n    startOffset: number;\n    endLine: number;\n    endColumn: number;\n    endOffset: number;\n  }>;\n}\n","import React, { useState, useEffect } from 'react';\nimport { Message, Schema } from '@asyncapi/parser';\n\nimport { CollapseButton, JSONSnippet } from '../../components';\nimport { MessageHelpers } from '../../helpers/message';\nimport { MessageExample as MessageExampleType } from '../../types';\nimport { useConfig } from '../../contexts';\n\ninterface Props {\n  message: Message;\n}\n\nexport const MessageExample: React.FunctionComponent<Props> = ({ message }) => {\n  if (!message) {\n    return null;\n  }\n\n  const payload = message.payload();\n  const headers = message.headers();\n\n  return (\n    <div className=\"bg-gray-800 px-8 py-4 mt-4 -mx-8 2xl:mx-0 2xl:px-4 2xl:rounded examples\">\n      <h4 className=\"text-white text-lg\">Examples</h4>\n      {payload && (\n        <Example\n          type=\"Payload\"\n          schema={payload}\n          examples={MessageHelpers.getPayloadExamples(message)}\n        />\n      )}\n      {headers && (\n        <Example\n          type=\"Headers\"\n          schema={headers}\n          examples={MessageHelpers.getHeadersExamples(message)}\n        />\n      )}\n    </div>\n  );\n};\n\ninterface ExampleProps {\n  type: 'Payload' | 'Headers';\n  schema: Schema;\n  examples?: MessageExampleType[];\n}\n\nexport const Example: React.FunctionComponent<ExampleProps> = ({\n  type = 'Payload',\n  schema,\n  examples = [],\n}) => {\n  const config = useConfig();\n  const [expanded, setExpanded] = useState(\n    (config && config.expand && config.expand.messageExamples) || false,\n  );\n\n  useEffect(() => {\n    setExpanded(\n      (config && config.expand && config.expand.messageExamples) || false,\n    );\n  }, [config.expand]);\n\n  return (\n    <div className=\"mt-4\">\n      <div>\n        <CollapseButton\n          onClick={() => setExpanded(prev => !prev)}\n          expanded={expanded}\n          chevronProps={{\n            className: 'fill-current text-gray-200',\n          }}\n        >\n          <span className=\"inline-block w-20 py-0.5 mr-1 text-gray-200 text-sm border text-center rounded focus:outline-none\">\n            {type}\n          </span>\n        </CollapseButton>\n      </div>\n      <div className={expanded ? 'block' : 'hidden'}>\n        {examples && examples.length > 0 ? (\n          <ul>\n            {examples.map((example, idx) => (\n              <li className=\"mt-4\" key={idx}>\n                <h5 className=\"text-xs font-bold text-gray-500\">\n                  {example.name\n                    ? `#${idx + 1} Example - ${example.name}`\n                    : `#${idx + 1} Example`}\n                </h5>\n                {example.summary && (\n                  <p className=\"text-xs font-bold text-gray-500\">\n                    {example.summary}\n                  </p>\n                )}\n                <div className=\"mt-1\">\n                  <JSONSnippet\n                    snippet={MessageHelpers.sanitizeExample(example.example)}\n                  />\n                </div>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <div className=\"mt-4\">\n            <JSONSnippet\n              snippet={MessageHelpers.generateExample(schema.json())}\n            />\n            <h6 className=\"text-xs font-bold text-gray-600 italic mt-2\">\n              This example has been generated automatically.\n            </h6>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Message as MessageType } from '@asyncapi/parser';\n\nimport { MessageExample } from './MessageExample';\nimport {\n  Href,\n  Markdown,\n  Schema,\n  Bindings,\n  Tags,\n  Extensions,\n} from '../../components';\n\nimport { useConfig } from '../../contexts';\nimport { CommonHelpers } from '../../helpers';\nimport {\n  CONTENT_TYPES_SITE,\n  EXTERAL_DOCUMENTATION_TEXT,\n} from '../../constants';\n\ninterface Props {\n  message: MessageType;\n  messageName?: string;\n  index?: number | string;\n  showExamples?: boolean;\n}\n\nexport const Message: React.FunctionComponent<Props> = ({\n  message,\n  messageName,\n  index,\n  showExamples = false,\n}) => {\n  const config = useConfig();\n\n  if (!message) {\n    return null;\n  }\n\n  // check typeof as fallback for older version than `2.4.0`\n  const messageId = typeof message.id === 'function' && message.id();\n  const title = message.title();\n  const summary = message.summary();\n  const payload = message.payload();\n  const headers = message.headers();\n  const correlationId = message.correlationId();\n\n  const contentType = message.contentType();\n  const externalDocs = message.externalDocs();\n  const showInfoList = contentType || externalDocs;\n\n  return (\n    <div className=\"panel-item\">\n      <div className=\"panel-item--center px-8\">\n        <div className=\"shadow rounded bg-gray-200 p-4 border\">\n          <div>\n            {index !== undefined && (\n              <span className=\"text-gray-700 font-bold mr-2\">#{index}</span>\n            )}\n            {title && <span className=\"text-gray-700 mr-2\">{title}</span>}\n            <span className=\"border text-orange-600 rounded text-xs py-0 px-2\">\n              {message.uid()}\n            </span>\n          </div>\n\n          {summary && <p className=\"text-gray-600 text-sm\">{summary}</p>}\n\n          {showInfoList && (\n            <ul className=\"leading-normal mt-2 mb-4 space-x-2 space-y-2\">\n              {contentType && (\n                <li className=\"inline-block\">\n                  <Href\n                    className=\"border border-solid border-orange-300 hover:bg-orange-300 hover:text-orange-600 text-orange-500 font-bold no-underline text-xs uppercase rounded px-3 py-1\"\n                    href={`${CONTENT_TYPES_SITE}/${contentType}`}\n                  >\n                    <span>{contentType}</span>\n                  </Href>\n                </li>\n              )}\n              {externalDocs && (\n                <li className=\"inline-block\">\n                  <Href\n                    className=\"border border-solid border-orange-300 hover:bg-orange-300 hover:text-orange-600 text-orange-500 font-bold no-underline text-xs uppercase rounded px-3 py-1\"\n                    href={externalDocs.url()}\n                  >\n                    <span>{EXTERAL_DOCUMENTATION_TEXT}</span>\n                  </Href>\n                </li>\n              )}\n            </ul>\n          )}\n\n          {messageId && (\n            <div className=\"border bg-gray-100 rounded px-4 py-2 mt-2\">\n              <div className=\"text-sm text-gray-700\">\n                Message ID\n                <span className=\"border text-orange-600 rounded text-xs ml-2 py-0 px-2\">\n                  {messageId}\n                </span>\n              </div>\n            </div>\n          )}\n\n          {correlationId && (\n            <div className=\"border bg-gray-100 rounded px-4 py-2 mt-2\">\n              <div className=\"text-sm text-gray-700\">\n                Correlation ID\n                <span className=\"border text-orange-600 rounded text-xs ml-2 py-0 px-2\">\n                  {correlationId.location()}\n                </span>\n              </div>\n\n              {correlationId.hasDescription() && (\n                <div className=\"mt-2\">\n                  <Markdown>{correlationId.description()}</Markdown>\n                </div>\n              )}\n            </div>\n          )}\n\n          {message.hasDescription() && (\n            <div className=\"mt-2\">\n              <Markdown>{message.description()}</Markdown>\n            </div>\n          )}\n\n          {payload && (\n            <div\n              className=\"mt-2\"\n              id={\n                messageName\n                  ? CommonHelpers.getIdentifier(\n                      `message-${messageName}-payload`,\n                      config,\n                    )\n                  : undefined\n              }\n            >\n              <Schema schemaName=\"Payload\" schema={payload} />\n            </div>\n          )}\n          {headers && (\n            <div\n              className=\"mt-2\"\n              id={\n                messageName\n                  ? CommonHelpers.getIdentifier(\n                      `message-${messageName}-headers`,\n                      config,\n                    )\n                  : undefined\n              }\n            >\n              <Schema schemaName=\"Headers\" schema={headers} />\n            </div>\n          )}\n\n          {message.hasBindings() && (\n            <div className=\"mt-2\">\n              <Bindings\n                name=\"Message specific information\"\n                bindings={message.bindings()}\n              />\n            </div>\n          )}\n\n          <Extensions item={message} />\n\n          {message.hasTags() && (\n            <div className=\"mt-2\">\n              <Tags tags={message.tags()} />\n            </div>\n          )}\n        </div>\n      </div>\n\n      {showExamples && (\n        <div className=\"panel-item--right px-8\">\n          <MessageExample message={message} />\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport { Channel, Operation as OperationType } from '@asyncapi/parser';\n\nimport { Message } from '../Messages/Message';\nimport { Security } from '../Servers/Security';\nimport {\n  Href,\n  Markdown,\n  Schema,\n  Bindings,\n  Tags,\n  Extensions,\n} from '../../components';\n\nimport { useConfig } from '../../contexts';\nimport { CommonHelpers, SchemaHelpers } from '../../helpers';\nimport {\n  EXTERAL_DOCUMENTATION_TEXT,\n  PUBLISH_LABEL_DEFAULT_TEXT,\n  SUBSCRIBE_LABEL_DEFAULT_TEXT,\n} from '../../constants';\nimport { PayloadType } from '../../types';\n\ninterface Props {\n  type: PayloadType;\n  operation: OperationType;\n  channelName: string;\n  channel: Channel;\n}\n\nexport const Operation: React.FunctionComponent<Props> = props => {\n  const config = useConfig();\n  const { type = PayloadType.PUBLISH, operation, channelName, channel } = props;\n\n  if (!operation || !channel) {\n    return null;\n  }\n\n  // check typeof as fallback for older version than `2.2.0`\n  const servers = typeof channel.servers === 'function' && channel.servers();\n  // check typeof as fallback for older version than `2.4.0`\n  const security =\n    typeof operation.security === 'function' && operation.security();\n  const parameters = SchemaHelpers.parametersToSchema(channel.parameters());\n\n  return (\n    <div>\n      <div className=\"panel-item--center px-8\">\n        <OperationInfo {...props} />\n\n        {servers && servers.length > 0 ? (\n          <div className=\"mt-2 text-sm\">\n            <p>Available only on servers:</p>\n            <ul className=\"flex flex-wrap leading-normal\">\n              {servers.map(server => (\n                <li className=\"inline-block mt-2 mr-2\" key={server as string}>\n                  <a\n                    href={`#${CommonHelpers.getIdentifier(\n                      'server-' + server,\n                      config,\n                    )}`}\n                    className=\"border border-solid border-blue-300 hover:bg-blue-300 hover:text-blue-600 text-blue-500 font-bold no-underline text-xs rounded px-3 py-1 cursor-pointer\"\n                  >\n                    <span className=\"underline\">{server}</span>\n                  </a>\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : null}\n\n        {parameters && (\n          <div\n            className=\"mt-2\"\n            id={CommonHelpers.getIdentifier(\n              `operation-${type}-${channelName}-parameters`,\n              config,\n            )}\n          >\n            <Schema\n              schemaName=\"Parameters\"\n              schema={parameters}\n              expanded={true}\n            />\n          </div>\n        )}\n\n        {security && (\n          <div\n            className=\"mt-2\"\n            id={CommonHelpers.getIdentifier(\n              `operation-${type}-${channelName}-security`,\n              config,\n            )}\n          >\n            <Security\n              security={security}\n              header=\"Additional security requirements\"\n            />\n          </div>\n        )}\n\n        {channel.hasBindings() && (\n          <div className=\"mt-2\">\n            <Bindings\n              name=\"Channel specific information\"\n              bindings={channel.bindings()}\n            />\n          </div>\n        )}\n\n        <Extensions name=\"Channel Extensions\" item={channel} />\n\n        {operation.hasBindings() && (\n          <div className=\"mt-2\">\n            <Bindings\n              name=\"Operation specific information\"\n              bindings={operation.bindings()}\n            />\n          </div>\n        )}\n\n        <Extensions name=\"Operation Extensions\" item={operation} />\n\n        {operation.hasTags() && (\n          <div className=\"mt-2\">\n            <Tags tags={operation.tags()} />\n          </div>\n        )}\n      </div>\n\n      <div\n        className=\"w-full mt-4\"\n        id={CommonHelpers.getIdentifier(\n          `operation-${type}-${channelName}-message`,\n          config,\n        )}\n      >\n        {operation.hasMultipleMessages() ? (\n          <div className=\"mt-2\">\n            <p className=\"px-8\">\n              Accepts <strong>one of</strong> the following messages:\n            </p>\n            <ul>\n              {operation.messages().map((msg, idx) => (\n                <li className=\"mt-4\" key={idx}>\n                  <Message message={msg} index={idx} showExamples={true} />\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : (\n          <div className=\"mt-2\">\n            <p className=\"px-8\">Accepts the following message:</p>\n            <div className=\"mt-2\">\n              <Message\n                message={(operation.message as (index: number) => any)(0)}\n                showExamples={true}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport const OperationInfo: React.FunctionComponent<Props> = ({\n  type = PayloadType.PUBLISH,\n  operation,\n  channelName,\n  channel,\n}) => {\n  const config = useConfig();\n  const operationSummary = operation.summary();\n  const externalDocs = operation.externalDocs();\n  const operationId = operation.id();\n\n  return (\n    <>\n      <div className=\"mb-4\">\n        <h3>\n          <span\n            className={`font-mono border uppercase p-1 rounded mr-2 ${\n              type === PayloadType.PUBLISH\n                ? 'border-blue-600 text-blue-500'\n                : 'border-green-600 text-green-600'\n            }`}\n            title={type}\n          >\n            {type === PayloadType.PUBLISH\n              ? config.publishLabel || PUBLISH_LABEL_DEFAULT_TEXT\n              : config.subscribeLabel || SUBSCRIBE_LABEL_DEFAULT_TEXT}\n          </span>{' '}\n          <span className=\"font-mono text-base\">{channelName}</span>\n        </h3>\n      </div>\n\n      {channel.hasDescription() && (\n        <div className=\"mt-2\">\n          <Markdown>{channel.description()}</Markdown>\n        </div>\n      )}\n      {operationSummary && (\n        <p className=\"text-gray-600 text-sm mt-2\">{operationSummary}</p>\n      )}\n      {operation.hasDescription() && (\n        <div className=\"mt-2\">\n          <Markdown>{operation.description()}</Markdown>\n        </div>\n      )}\n\n      {externalDocs && (\n        <ul className=\"leading-normal mt-2 mb-4 space-x-2 space-y-2\">\n          {externalDocs && (\n            <li className=\"inline-block\">\n              <Href\n                className=\"border border-solid border-orange-300 hover:bg-orange-300 hover:text-orange-600 text-orange-500 font-bold no-underline text-xs uppercase rounded px-3 py-1\"\n                href={externalDocs.url()}\n              >\n                <span>{EXTERAL_DOCUMENTATION_TEXT}</span>\n              </Href>\n            </li>\n          )}\n        </ul>\n      )}\n\n      {operationId && (\n        <div className=\"border bg-gray-100 rounded px-4 py-2 mt-2\">\n          <div className=\"text-sm text-gray-700\">\n            Operation ID\n            <span className=\"border text-orange-600 rounded text-xs ml-2 py-0 px-2\">\n              {operationId}\n            </span>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import React from 'react';\n\nimport { Operation } from './Operation';\n\nimport { useConfig, useSpec } from '../../contexts';\nimport { CommonHelpers } from '../../helpers';\nimport { OPERATIONS_TEXT } from '../../constants';\nimport { PayloadType } from '../../types';\n\nexport const Operations: React.FunctionComponent = () => {\n  const channels = useSpec().channels();\n  const config = useConfig();\n\n  if (!Object.keys(channels).length) {\n    return null;\n  }\n\n  const operationsList: React.ReactNodeArray = [];\n  Object.entries(channels).forEach(([channelName, channel]) => {\n    if (channel.hasPublish()) {\n      operationsList.push(\n        <li\n          className=\"mb-12\"\n          key={`pub-${channelName}`}\n          id={CommonHelpers.getIdentifier(\n            `operation-${PayloadType.PUBLISH}-${channelName}`,\n            config,\n          )}\n        >\n          <Operation\n            type={PayloadType.PUBLISH}\n            operation={channel.publish()}\n            channelName={channelName}\n            channel={channel}\n          />\n        </li>,\n      );\n    }\n    if (channel.hasSubscribe()) {\n      operationsList.push(\n        <li\n          className=\"mb-12\"\n          key={`sub-${channelName}`}\n          id={CommonHelpers.getIdentifier(\n            `operation-${PayloadType.SUBSCRIBE}-${channelName}`,\n            config,\n          )}\n        >\n          <Operation\n            type={PayloadType.SUBSCRIBE}\n            operation={channel.subscribe()}\n            channelName={channelName}\n            channel={channel}\n          />\n        </li>,\n      );\n    }\n  });\n\n  return (\n    <section\n      id={`${CommonHelpers.getIdentifier('operations', config)}`}\n      className=\"mt-16\"\n    >\n      <h2 className=\"2xl:w-7/12 text-3xl font-light mb-4 px-8\">\n        {OPERATIONS_TEXT}\n      </h2>\n      <ul>{operationsList}</ul>\n    </section>\n  );\n};\n","import React from 'react';\n\nimport { Message } from './Message';\n\nimport { useConfig, useSpec } from '../../contexts';\nimport { CommonHelpers } from '../../helpers';\nimport { MESSAGES_TEXT } from '../../constants';\n\nexport const Messages: React.FunctionComponent = () => {\n  const asyncapi = useSpec();\n  const config = useConfig();\n  const messages = asyncapi.hasComponents() && asyncapi.components().messages();\n\n  if (!messages || Object.keys(messages).length === 0) {\n    return null;\n  }\n\n  return (\n    <section\n      id={`${CommonHelpers.getIdentifier('messages', config)}`}\n      className=\"mt-16\"\n    >\n      <h2 className=\"2xl:w-7/12 text-3xl font-light mb-4 px-8\">\n        {MESSAGES_TEXT}\n      </h2>\n      <ul>\n        {Object.entries(messages).map(([messageName, message], idx) => (\n          <li\n            className=\"mb-4\"\n            key={messageName}\n            id={CommonHelpers.getIdentifier(`message-${messageName}`, config)}\n          >\n            <Message\n              messageName={messageName}\n              message={message}\n              index={idx + 1}\n              key={messageName}\n            />\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n","import React from 'react';\nimport { Schema as SchemaType } from '@asyncapi/parser';\n\nimport { Schema as SchemaComponent } from '../../components';\n\ninterface Props {\n  schemaName: string;\n  schema: SchemaType;\n}\n\nexport const Schema: React.FunctionComponent<Props> = ({\n  schemaName,\n  schema,\n}) => {\n  if (!schema) {\n    return null;\n  }\n\n  return (\n    <div>\n      <div className=\"panel-item--center px-8\">\n        <div className=\"shadow rounded px-4 py-2 border bg-gray-200\">\n          <SchemaComponent schemaName={schemaName} schema={schema} />\n        </div>\n      </div>\n\n      <div className=\"w-full mt-4\" />\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { Schema } from './Schema';\n\nimport { useConfig, useSpec } from '../../contexts';\nimport { CommonHelpers } from '../../helpers';\nimport { SCHEMAS_TEXT } from '../../constants';\n\nexport const Schemas: React.FunctionComponent = () => {\n  const asyncapi = useSpec();\n  const config = useConfig();\n  const schemas = asyncapi.hasComponents() && asyncapi.components().schemas();\n\n  if (!schemas || Object.keys(schemas).length === 0) {\n    return null;\n  }\n\n  return (\n    <section\n      id={`${CommonHelpers.getIdentifier('schemas', config)}`}\n      className=\"mt-16\"\n    >\n      <h2 className=\"2xl:w-7/12 text-3xl font-light mb-4 px-8\">\n        {SCHEMAS_TEXT}\n      </h2>\n      <ul>\n        {Object.entries(schemas).map(([schemaName, schema]) => (\n          <li\n            className=\"mb-4\"\n            key={schemaName}\n            id={CommonHelpers.getIdentifier(`schema-${schemaName}`, config)}\n          >\n            <Schema schemaName={schemaName} schema={schema} />\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n","import React from 'react';\n\nimport { ERROR_TEXT } from '../../constants';\nimport { ErrorObject, ValidationError } from '../../types';\n\nconst renderErrors = (errors: ValidationError[]): React.ReactNode => {\n  if (!errors) {\n    return null;\n  }\n\n  return errors\n    .map((singleError: ValidationError, index: number) => {\n      if (!singleError || !singleError.title || !singleError.location) {\n        return null;\n      }\n      return (\n        <div key={index} className=\"flex\">\n          <span>{`${singleError.location.startLine}.`}</span>\n          <code className=\"whitespace-pre-wrap break-all ml-2\">\n            {singleError.title}\n          </code>\n        </div>\n      );\n    })\n    .filter(Boolean);\n};\n\ninterface Props {\n  error: ErrorObject;\n}\n\nexport const Error: React.FunctionComponent<Props> = ({ error }) => {\n  if (!error) {\n    return null;\n  }\n  const { title, validationErrors } = error;\n\n  return (\n    <div className=\"panel-item\">\n      <div className=\"panel-item--center p-8\">\n        <section className=\"shadow rounded bg-gray-200 border-red-500 border-l-8\">\n          <h2 className=\"p-2\">\n            {title ? `${ERROR_TEXT}: ${title}` : ERROR_TEXT}\n          </h2>\n          {validationErrors && validationErrors.length ? (\n            <div className=\"bg-gray-800 text-white text-xs p-2\">\n              <pre>{renderErrors(validationErrors)}</pre>\n            </div>\n          ) : null}\n        </section>\n      </div>\n      <div className=\"panel-item--right\" />\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { AsyncAPIDocument } from '@asyncapi/parser';\nimport useResizeObserver from 'use-resize-observer';\n\nimport { Sidebar } from '../Sidebar/Sidebar';\nimport { Info } from '../Info/Info';\nimport { Servers } from '../Servers/Servers';\nimport { Operations } from '../Operations/Operations';\nimport { Messages } from '../Messages/Messages';\nimport { Schemas } from '../Schemas/Schemas';\nimport { Error } from '../Error/Error';\n\nimport { ConfigInterface } from '../../config';\nimport { SpecificationContext, ConfigContext } from '../../contexts';\nimport { ErrorObject } from '../../types';\n\ninterface Props {\n  asyncapi: AsyncAPIDocument;\n  config: ConfigInterface;\n  error?: ErrorObject;\n}\n\nconst AsyncApiLayout: React.FunctionComponent<Props> = ({\n  asyncapi,\n  config,\n  error = null,\n}) => {\n  const [observerClassName, setObserverClassName] = useState('container:xl');\n\n  const { ref } = useResizeObserver<HTMLDivElement>({\n    onResize: ({ width }) => {\n      requestAnimationFrame(() => {\n        if (width === undefined) {\n          return;\n        }\n\n        const possibleClassName =\n          width <= 1280 ? 'container:xl' : 'container:base';\n        if (possibleClassName !== observerClassName) {\n          setObserverClassName(possibleClassName);\n        }\n      });\n    },\n  });\n\n  const configShow = config.show || {};\n  return (\n    <ConfigContext.Provider value={config}>\n      <SpecificationContext.Provider value={asyncapi}>\n        <section className=\"aui-root\">\n          <div\n            className={`${observerClassName} relative md:flex bg-white leading-normal`}\n            id={config.schemaID || undefined}\n            ref={ref}\n          >\n            {configShow.sidebar && <Sidebar />}\n            <div className=\"panel--center relative py-8 flex-1\">\n              <div className=\"relative z-10\">\n                {configShow.errors && error && <Error error={error} />}\n                {configShow.info && <Info />}\n                {configShow.servers && <Servers />}\n                {configShow.operations && <Operations />}\n                {configShow.messages && <Messages />}\n                {configShow.schemas && <Schemas />}\n              </div>\n              <div className=\"panel--right absolute top-0 right-0 h-full bg-gray-800\" />\n            </div>\n          </div>\n        </section>\n      </SpecificationContext.Provider>\n    </ConfigContext.Provider>\n  );\n};\n\nexport default AsyncApiLayout;\n","import React, { Component } from 'react';\nimport { AsyncAPIDocument } from '@asyncapi/parser';\n\nimport { SpecificationHelpers } from '../../helpers';\nimport { ErrorObject, PropsSchema } from '../../types';\nimport { ConfigInterface, defaultConfig } from '../../config';\n\nimport AsyncApiLayout from './Layout';\nimport { Error } from '../Error/Error';\n\nexport interface AsyncApiProps {\n  schema: PropsSchema;\n  config?: Partial<ConfigInterface>;\n  error?: ErrorObject;\n}\n\ninterface AsyncAPIState {\n  asyncapi?: AsyncAPIDocument;\n  error?: ErrorObject;\n}\n\nclass AsyncApiComponent extends Component<AsyncApiProps, AsyncAPIState> {\n  state: AsyncAPIState = {\n    asyncapi: undefined,\n    error: undefined,\n  };\n\n  constructor(props: AsyncApiProps) {\n    super(props);\n\n    const parsedSpec = SpecificationHelpers.retrieveParsedSpec(props.schema);\n    if (parsedSpec) {\n      this.state = { asyncapi: parsedSpec };\n    }\n    return;\n  }\n\n  async componentDidMount() {\n    if (!this.state.asyncapi) {\n      this.updateState(this.props.schema);\n    }\n  }\n\n  async componentDidUpdate(prevProps: AsyncApiProps) {\n    const oldSchema = prevProps.schema;\n    const newSchema = this.props.schema;\n\n    if (oldSchema !== newSchema) {\n      this.updateState(newSchema);\n    }\n  }\n\n  render() {\n    const { config, error: propError } = this.props;\n    const { asyncapi, error: stateError } = this.state;\n\n    const error = propError || stateError;\n    const concatenatedConfig: ConfigInterface = {\n      ...defaultConfig,\n      ...config,\n      show: {\n        ...defaultConfig.show,\n        ...(!!config && config.show),\n      },\n      expand: {\n        ...defaultConfig.expand,\n        ...(!!config && config.expand),\n      },\n      sidebar: {\n        ...defaultConfig.sidebar,\n        ...(!!config && config.sidebar),\n      },\n    };\n\n    if (!asyncapi) {\n      if (!error) {\n        return null;\n      }\n      return concatenatedConfig.show?.errors && <Error error={error} />;\n    }\n\n    return (\n      <AsyncApiLayout\n        asyncapi={asyncapi}\n        config={concatenatedConfig}\n        error={error}\n      />\n    );\n  }\n\n  private updateState(schema: PropsSchema) {\n    const parsedSpec = SpecificationHelpers.retrieveParsedSpec(schema);\n    if (!parsedSpec) {\n      this.setState({ asyncapi: undefined });\n      return;\n    }\n    this.setState({ asyncapi: parsedSpec });\n  }\n}\n\nexport default AsyncApiComponent;\n","import AsyncApiComponent from './containers/AsyncApi/Standalone';\n\nimport { hljs } from './helpers';\n\nexport { hljs };\nexport default AsyncApiComponent;\n","const {\n  hasOwnProperty,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n} = Object;\n\nlet { freeze, seal, create } = Object; // eslint-disable-line import/no-mutable-exports\nlet { apply, construct } = typeof Reflect !== 'undefined' && Reflect;\n\nif (!apply) {\n  apply = function (fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!freeze) {\n  freeze = function (x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function (x) {\n    return x;\n  };\n}\n\nif (!construct) {\n  construct = function (Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayIndexOf = unapply(Array.prototype.indexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySlice = unapply(Array.prototype.slice);\n\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\n\nconst regExpTest = unapply(RegExp.prototype.test);\n\nconst typeErrorCreate = unconstruct(TypeError);\n\nexport function unapply(func) {\n  return (thisArg, ...args) => apply(func, thisArg, args);\n}\n\nexport function unconstruct(func) {\n  return (...args) => construct(func, args);\n}\n\n/* Add properties to a lookup table */\nexport function addToSet(set, array, transformCaseFunc) {\n  transformCaseFunc = transformCaseFunc ? transformCaseFunc : stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/* Shallow clone an object */\nexport function clone(object) {\n  const newObject = create(null);\n\n  let property;\n  for (property in object) {\n    if (apply(hasOwnProperty, object, [property]) === true) {\n      newObject[property] = object[property];\n    }\n  }\n\n  return newObject;\n}\n\n/* IE10 doesn't support __lookupGetter__ so lets'\n * simulate it. It also automatically checks\n * if the prop is function or getter and behaves\n * accordingly. */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue(element) {\n    console.warn('fallback value for', element);\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nexport {\n  // Array\n  arrayForEach,\n  arrayIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySlice,\n  // Object\n  freeze,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n  hasOwnProperty,\n  isFrozen,\n  setPrototypeOf,\n  seal,\n  // RegExp\n  regExpTest,\n  // String\n  stringIndexOf,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringTrim,\n  // Errors\n  typeErrorCreate,\n  // Other\n  lookupGetter,\n};\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'a',\n  'abbr',\n  'acronym',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'bdi',\n  'bdo',\n  'big',\n  'blink',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'center',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'content',\n  'data',\n  'datalist',\n  'dd',\n  'decorator',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'element',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'font',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meter',\n  'nav',\n  'nobr',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'section',\n  'select',\n  'shadow',\n  'small',\n  'source',\n  'spacer',\n  'span',\n  'strike',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'track',\n  'tt',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n]);\n\n// SVG\nexport const svg = freeze([\n  'svg',\n  'a',\n  'altglyph',\n  'altglyphdef',\n  'altglyphitem',\n  'animatecolor',\n  'animatemotion',\n  'animatetransform',\n  'circle',\n  'clippath',\n  'defs',\n  'desc',\n  'ellipse',\n  'filter',\n  'font',\n  'g',\n  'glyph',\n  'glyphref',\n  'hkern',\n  'image',\n  'line',\n  'lineargradient',\n  'marker',\n  'mask',\n  'metadata',\n  'mpath',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialgradient',\n  'rect',\n  'stop',\n  'style',\n  'switch',\n  'symbol',\n  'text',\n  'textpath',\n  'title',\n  'tref',\n  'tspan',\n  'view',\n  'vkern',\n]);\n\nexport const svgFilters = freeze([\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n]);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nexport const svgDisallowed = freeze([\n  'animate',\n  'color-profile',\n  'cursor',\n  'discard',\n  'fedropshadow',\n  'font-face',\n  'font-face-format',\n  'font-face-name',\n  'font-face-src',\n  'font-face-uri',\n  'foreignobject',\n  'hatch',\n  'hatchpath',\n  'mesh',\n  'meshgradient',\n  'meshpatch',\n  'meshrow',\n  'missing-glyph',\n  'script',\n  'set',\n  'solidcolor',\n  'unknown',\n  'use',\n]);\n\nexport const mathMl = freeze([\n  'math',\n  'menclose',\n  'merror',\n  'mfenced',\n  'mfrac',\n  'mglyph',\n  'mi',\n  'mlabeledtr',\n  'mmultiscripts',\n  'mn',\n  'mo',\n  'mover',\n  'mpadded',\n  'mphantom',\n  'mroot',\n  'mrow',\n  'ms',\n  'mspace',\n  'msqrt',\n  'mstyle',\n  'msub',\n  'msup',\n  'msubsup',\n  'mtable',\n  'mtd',\n  'mtext',\n  'mtr',\n  'munder',\n  'munderover',\n]);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nexport const mathMlDisallowed = freeze([\n  'maction',\n  'maligngroup',\n  'malignmark',\n  'mlongdiv',\n  'mscarries',\n  'mscarry',\n  'msgroup',\n  'mstack',\n  'msline',\n  'msrow',\n  'semantics',\n  'annotation',\n  'annotation-xml',\n  'mprescripts',\n  'none',\n]);\n\nexport const text = freeze(['#text']);\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'accept',\n  'action',\n  'align',\n  'alt',\n  'autocapitalize',\n  'autocomplete',\n  'autopictureinpicture',\n  'autoplay',\n  'background',\n  'bgcolor',\n  'border',\n  'capture',\n  'cellpadding',\n  'cellspacing',\n  'checked',\n  'cite',\n  'class',\n  'clear',\n  'color',\n  'cols',\n  'colspan',\n  'controls',\n  'controlslist',\n  'coords',\n  'crossorigin',\n  'datetime',\n  'decoding',\n  'default',\n  'dir',\n  'disabled',\n  'disablepictureinpicture',\n  'disableremoteplayback',\n  'download',\n  'draggable',\n  'enctype',\n  'enterkeyhint',\n  'face',\n  'for',\n  'headers',\n  'height',\n  'hidden',\n  'high',\n  'href',\n  'hreflang',\n  'id',\n  'inputmode',\n  'integrity',\n  'ismap',\n  'kind',\n  'label',\n  'lang',\n  'list',\n  'loading',\n  'loop',\n  'low',\n  'max',\n  'maxlength',\n  'media',\n  'method',\n  'min',\n  'minlength',\n  'multiple',\n  'muted',\n  'name',\n  'nonce',\n  'noshade',\n  'novalidate',\n  'nowrap',\n  'open',\n  'optimum',\n  'pattern',\n  'placeholder',\n  'playsinline',\n  'poster',\n  'preload',\n  'pubdate',\n  'radiogroup',\n  'readonly',\n  'rel',\n  'required',\n  'rev',\n  'reversed',\n  'role',\n  'rows',\n  'rowspan',\n  'spellcheck',\n  'scope',\n  'selected',\n  'shape',\n  'size',\n  'sizes',\n  'span',\n  'srclang',\n  'start',\n  'src',\n  'srcset',\n  'step',\n  'style',\n  'summary',\n  'tabindex',\n  'title',\n  'translate',\n  'type',\n  'usemap',\n  'valign',\n  'value',\n  'width',\n  'xmlns',\n  'slot',\n]);\n\nexport const svg = freeze([\n  'accent-height',\n  'accumulate',\n  'additive',\n  'alignment-baseline',\n  'ascent',\n  'attributename',\n  'attributetype',\n  'azimuth',\n  'basefrequency',\n  'baseline-shift',\n  'begin',\n  'bias',\n  'by',\n  'class',\n  'clip',\n  'clippathunits',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'cx',\n  'cy',\n  'd',\n  'dx',\n  'dy',\n  'diffuseconstant',\n  'direction',\n  'display',\n  'divisor',\n  'dur',\n  'edgemode',\n  'elevation',\n  'end',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'filterunits',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'fx',\n  'fy',\n  'g1',\n  'g2',\n  'glyph-name',\n  'glyphref',\n  'gradientunits',\n  'gradienttransform',\n  'height',\n  'href',\n  'id',\n  'image-rendering',\n  'in',\n  'in2',\n  'k',\n  'k1',\n  'k2',\n  'k3',\n  'k4',\n  'kerning',\n  'keypoints',\n  'keysplines',\n  'keytimes',\n  'lang',\n  'lengthadjust',\n  'letter-spacing',\n  'kernelmatrix',\n  'kernelunitlength',\n  'lighting-color',\n  'local',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'markerheight',\n  'markerunits',\n  'markerwidth',\n  'maskcontentunits',\n  'maskunits',\n  'max',\n  'mask',\n  'media',\n  'method',\n  'mode',\n  'min',\n  'name',\n  'numoctaves',\n  'offset',\n  'operator',\n  'opacity',\n  'order',\n  'orient',\n  'orientation',\n  'origin',\n  'overflow',\n  'paint-order',\n  'path',\n  'pathlength',\n  'patterncontentunits',\n  'patterntransform',\n  'patternunits',\n  'points',\n  'preservealpha',\n  'preserveaspectratio',\n  'primitiveunits',\n  'r',\n  'rx',\n  'ry',\n  'radius',\n  'refx',\n  'refy',\n  'repeatcount',\n  'repeatdur',\n  'restart',\n  'result',\n  'rotate',\n  'scale',\n  'seed',\n  'shape-rendering',\n  'specularconstant',\n  'specularexponent',\n  'spreadmethod',\n  'startoffset',\n  'stddeviation',\n  'stitchtiles',\n  'stop-color',\n  'stop-opacity',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke',\n  'stroke-width',\n  'style',\n  'surfacescale',\n  'systemlanguage',\n  'tabindex',\n  'targetx',\n  'targety',\n  'transform',\n  'transform-origin',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'textlength',\n  'type',\n  'u1',\n  'u2',\n  'unicode',\n  'values',\n  'viewbox',\n  'visibility',\n  'version',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'width',\n  'word-spacing',\n  'wrap',\n  'writing-mode',\n  'xchannelselector',\n  'ychannelselector',\n  'x',\n  'x1',\n  'x2',\n  'xmlns',\n  'y',\n  'y1',\n  'y2',\n  'z',\n  'zoomandpan',\n]);\n\nexport const mathMl = freeze([\n  'accent',\n  'accentunder',\n  'align',\n  'bevelled',\n  'close',\n  'columnsalign',\n  'columnlines',\n  'columnspan',\n  'denomalign',\n  'depth',\n  'dir',\n  'display',\n  'displaystyle',\n  'encoding',\n  'fence',\n  'frame',\n  'height',\n  'href',\n  'id',\n  'largeop',\n  'length',\n  'linethickness',\n  'lspace',\n  'lquote',\n  'mathbackground',\n  'mathcolor',\n  'mathsize',\n  'mathvariant',\n  'maxsize',\n  'minsize',\n  'movablelimits',\n  'notation',\n  'numalign',\n  'open',\n  'rowalign',\n  'rowlines',\n  'rowspacing',\n  'rowspan',\n  'rspace',\n  'rquote',\n  'scriptlevel',\n  'scriptminsize',\n  'scriptsizemultiplier',\n  'selection',\n  'separator',\n  'separators',\n  'stretchy',\n  'subscriptshift',\n  'supscriptshift',\n  'symmetric',\n  'voffset',\n  'width',\n  'xmlns',\n]);\n\nexport const xml = freeze([\n  'xlink:href',\n  'xml:id',\n  'xlink:title',\n  'xml:space',\n  'xmlns:xlink',\n]);\n","import { seal } from './utils.js';\n\n// eslint-disable-next-line unicorn/better-regex\nexport const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nexport const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nexport const TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\nexport const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nexport const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nexport const IS_ALLOWED_URI = seal(\n  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nexport const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nexport const ATTR_WHITESPACE = seal(\n  /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nexport const DOCTYPE_NAME = seal(/^html$/i);\n","import * as TAGS from './tags.js';\nimport * as ATTRS from './attrs.js';\nimport * as EXPRESSIONS from './regexp.js';\nimport {\n  addToSet,\n  clone,\n  freeze,\n  arrayForEach,\n  arrayPop,\n  arrayPush,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringIndexOf,\n  stringTrim,\n  regExpTest,\n  typeErrorCreate,\n  lookupGetter,\n} from './utils.js';\n\nconst getGlobal = () => (typeof window === 'undefined' ? null : window);\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {Document} document The document object (to determine policy name suffix)\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported).\n */\nconst _createTrustedTypesPolicy = function (trustedTypes, document) {\n  if (\n    typeof trustedTypes !== 'object' ||\n    typeof trustedTypes.createPolicy !== 'function'\n  ) {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (\n    document.currentScript &&\n    document.currentScript.hasAttribute(ATTR_NAME)\n  ) {\n    suffix = document.currentScript.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      },\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn(\n      'TrustedTypes policy ' + policyName + ' could not be created.'\n    );\n    return null;\n  }\n};\n\nfunction createDOMPurify(window = getGlobal()) {\n  const DOMPurify = (root) => createDOMPurify(root);\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = VERSION;\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  const originalDocument = window.document;\n\n  let { document } = window;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes,\n  } = window;\n\n  const ElementPrototype = Element.prototype;\n\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  const trustedTypesPolicy = _createTrustedTypesPolicy(\n    trustedTypes,\n    originalDocument\n  );\n  const emptyHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML('') : '';\n\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName,\n  } = document;\n  const { importNode } = originalDocument;\n\n  let documentMode = {};\n  try {\n    documentMode = clone(document).documentMode ? document.documentMode : {};\n  } catch (_) {}\n\n  let hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported =\n    typeof getParentNode === 'function' &&\n    implementation &&\n    typeof implementation.createHTMLDocument !== 'undefined' &&\n    documentMode !== 9;\n\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n  } = EXPRESSIONS;\n\n  let { IS_ALLOWED_URI } = EXPRESSIONS;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [\n    ...TAGS.html,\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.mathMl,\n    ...TAGS.text,\n  ]);\n\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [\n    ...ATTRS.html,\n    ...ATTRS.svg,\n    ...ATTRS.mathMl,\n    ...ATTRS.xml,\n  ]);\n\n  /*\n   * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  const CUSTOM_ELEMENT_HANDLING = Object.seal(\n    Object.create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false,\n      },\n    })\n  );\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, [\n    'annotation-xml',\n    'audio',\n    'colgroup',\n    'desc',\n    'foreignobject',\n    'head',\n    'iframe',\n    'math',\n    'mi',\n    'mn',\n    'mo',\n    'ms',\n    'mtext',\n    'noembed',\n    'noframes',\n    'noscript',\n    'plaintext',\n    'script',\n    'style',\n    'svg',\n    'template',\n    'thead',\n    'title',\n    'video',\n    'xmp',\n  ]);\n\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, [\n    'audio',\n    'video',\n    'img',\n    'source',\n    'image',\n    'track',\n  ]);\n\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, [\n    'alt',\n    'class',\n    'for',\n    'id',\n    'label',\n    'name',\n    'pattern',\n    'placeholder',\n    'role',\n    'summary',\n    'title',\n    'value',\n    'style',\n    'xmlns',\n  ]);\n\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet(\n    {},\n    [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE],\n    stringToString\n  );\n\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc;\n\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  const isRegexOrFunction = function (testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function (cfg) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n\n    PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1\n        ? (PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE)\n        : (PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE);\n\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc =\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml'\n        ? stringToString\n        : stringToLowerCase;\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS =\n      'ALLOWED_TAGS' in cfg\n        ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc)\n        : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR =\n      'ALLOWED_ATTR' in cfg\n        ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc)\n        : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES =\n      'ALLOWED_NAMESPACES' in cfg\n        ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString)\n        : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES =\n      'ADD_URI_SAFE_ATTR' in cfg\n        ? addToSet(\n            clone(DEFAULT_URI_SAFE_ATTRIBUTES), // eslint-disable-line indent\n            cfg.ADD_URI_SAFE_ATTR, // eslint-disable-line indent\n            transformCaseFunc // eslint-disable-line indent\n          ) // eslint-disable-line indent\n        : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS =\n      'ADD_DATA_URI_TAGS' in cfg\n        ? addToSet(\n            clone(DEFAULT_DATA_URI_TAGS), // eslint-disable-line indent\n            cfg.ADD_DATA_URI_TAGS, // eslint-disable-line indent\n            transformCaseFunc // eslint-disable-line indent\n          ) // eslint-disable-line indent\n        : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS =\n      'FORBID_CONTENTS' in cfg\n        ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc)\n        : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS =\n      'FORBID_TAGS' in cfg\n        ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc)\n        : {};\n    FORBID_ATTR =\n      'FORBID_ATTR' in cfg\n        ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc)\n        : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements ===\n        'boolean'\n    ) {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements =\n        cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [...TAGS.text]);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, TAGS.html);\n        addToSet(ALLOWED_ATTR, ATTRS.html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svgFilters);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, TAGS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, [\n    'mi',\n    'mo',\n    'mn',\n    'ms',\n    'mtext',\n  ]);\n\n  const HTML_INTEGRATION_POINTS = addToSet({}, [\n    'foreignobject',\n    'desc',\n    'title',\n    'annotation-xml',\n  ]);\n\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, [\n    'title',\n    'style',\n    'font',\n    'a',\n    'script',\n  ]);\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, TAGS.svg);\n  addToSet(ALL_SVG_TAGS, TAGS.svgFilters);\n  addToSet(ALL_SVG_TAGS, TAGS.svgDisallowed);\n\n  const ALL_MATHML_TAGS = addToSet({}, TAGS.mathMl);\n  addToSet(ALL_MATHML_TAGS, TAGS.mathMlDisallowed);\n\n  /**\n   *\n   *\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function (element) {\n    let parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template',\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return (\n          tagName === 'svg' &&\n          (parentTagName === 'annotation-xml' ||\n            MATHML_TEXT_INTEGRATION_POINTS[parentTagName])\n        );\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (\n        parent.namespaceURI === SVG_NAMESPACE &&\n        !HTML_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      if (\n        parent.namespaceURI === MATHML_NAMESPACE &&\n        !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return (\n        !ALL_MATHML_TAGS[tagName] &&\n        (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName])\n      );\n    }\n\n    // For XHTML and XML documents that support custom namespaces\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      ALLOWED_NAMESPACES[element.namespaceURI]\n    ) {\n      return true;\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  const _forceRemove = function (node) {\n    arrayPush(DOMPurify.removed, { element: node });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      try {\n        node.outerHTML = emptyHTML;\n      } catch (_) {\n        node.remove();\n      }\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  const _removeAttribute = function (name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node,\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node,\n      });\n    }\n\n    node.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\"\" attributes\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  const _initDocument = function (dirty) {\n    /* Create a HTML document */\n    let doc;\n    let leadingWhitespace;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      NAMESPACE === HTML_NAMESPACE\n    ) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty =\n        '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' +\n        dirty +\n        '</body></html>';\n    }\n\n    const dirtyPayload = trustedTypesPolicy\n      ? trustedTypesPolicy.createHTML(dirty)\n      : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT\n          ? emptyHTML\n          : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    const body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(\n        document.createTextNode(leadingWhitespace),\n        body.childNodes[0] || null\n      );\n    }\n\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(\n        doc,\n        WHOLE_DOCUMENT ? 'html' : 'body'\n      )[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * _createIterator\n   *\n   * @param  {Document} root document/fragment to create iterator for\n   * @return {Iterator} iterator instance\n   */\n  const _createIterator = function (root) {\n    return createNodeIterator.call(\n      root.ownerDocument || root,\n      root,\n      // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT,\n      null,\n      false\n    );\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  const _isClobbered = function (elm) {\n    return (\n      elm instanceof HTMLFormElement &&\n      (typeof elm.nodeName !== 'string' ||\n        typeof elm.textContent !== 'string' ||\n        typeof elm.removeChild !== 'function' ||\n        !(elm.attributes instanceof NamedNodeMap) ||\n        typeof elm.removeAttribute !== 'function' ||\n        typeof elm.setAttribute !== 'function' ||\n        typeof elm.namespaceURI !== 'string' ||\n        typeof elm.insertBefore !== 'function' ||\n        typeof elm.hasChildNodes !== 'function')\n    );\n  };\n\n  /**\n   * _isNode\n   *\n   * @param  {Node} obj object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  const _isNode = function (object) {\n    return typeof Node === 'object'\n      ? object instanceof Node\n      : object &&\n          typeof object === 'object' &&\n          typeof object.nodeType === 'number' &&\n          typeof object.nodeName === 'string';\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  const _executeHook = function (entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    arrayForEach(hooks[entryPoint], (hook) => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function (currentNode) {\n    let content;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check if tagname contains Unicode */\n    if (regExpTest(/[\\u0080-\\uFFFF]/, currentNode.nodeName)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS,\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (\n      currentNode.hasChildNodes() &&\n      !_isNode(currentNode.firstElementChild) &&\n      (!_isNode(currentNode.content) ||\n        !_isNode(currentNode.content.firstElementChild)) &&\n      regExpTest(/<[/\\w]/g, currentNode.innerHTML) &&\n      regExpTest(/<[/\\w]/g, currentNode.textContent)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Mitigate a problem with templates inside select */\n    if (\n      tagName === 'select' &&\n      regExpTest(/<template/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n          regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)\n        )\n          return false;\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)\n        )\n          return false;\n      }\n\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n\n          for (let i = childCount - 1; i >= 0; --i) {\n            parentNode.insertBefore(\n              cloneNode(childNodes[i], true),\n              getNextSibling(currentNode)\n            );\n          }\n        }\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    if (\n      (tagName === 'noscript' || tagName === 'noembed') &&\n      regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = stringReplace(content, MUSTACHE_EXPR, ' ');\n      content = stringReplace(content, ERB_EXPR, ' ');\n      content = stringReplace(content, TMPLIT_EXPR, ' ');\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function (lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (\n      SANITIZE_DOM &&\n      (lcName === 'id' || lcName === 'name') &&\n      (value in document || value in formElement)\n    ) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (\n      ALLOW_DATA_ATTR &&\n      !FORBID_ATTR[lcName] &&\n      regExpTest(DATA_ATTR, lcName)\n    ) {\n      // This attribute is safe\n    } else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) {\n      // This attribute is safe\n      /* Otherwise, check the name is permitted */\n    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        (_basicCustomElementTest(lcTag) &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag))) &&\n          ((CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName)) ||\n            (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)))) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        (lcName === 'is' &&\n          CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))))\n      ) {\n        // If user has supplied a regexp or function in CUSTOM_ELEMENT_HANDLING.tagNameCheck, we need to also allow derived custom elements using the same tagName test.\n        // Additionally, we need to allow attributes passing the CUSTOM_ELEMENT_HANDLING.attributeNameCheck user has configured, as custom elements can define these at their own discretion.\n      } else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n      // This attribute is safe\n      /* Check no script, data or unknown possibly unsafe URI\n        unless we know URI values are safe for that attribute */\n    } else if (\n      regExpTest(IS_ALLOWED_URI, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Keep image data URIs alive if src/xlink:href is allowed */\n      /* Further prevent gadget XSS for dynamically built script tags */\n    } else if (\n      (lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') &&\n      lcTag !== 'script' &&\n      stringIndexOf(value, 'data:') === 0 &&\n      DATA_URI_TAGS[lcTag]\n    ) {\n      // This attribute is safe\n      /* Allow unknown protocols: This provides support for links that\n        are handled by protocol handlers which may be unknown ahead of\n        time, e.g. fb:, spotify: */\n    } else if (\n      ALLOW_UNKNOWN_PROTOCOLS &&\n      !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Check for binary attributes */\n      // eslint-disable-next-line no-negated-condition\n    } else if (!value) {\n      // Binary attributes are safe at this point\n      /* Anything else, presume unsafe, do not add it back */\n    } else {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * _basicCustomElementCheck\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   * @param {string} tagName name of the tag of the node to sanitize\n   */\n  const _basicCustomElementTest = function (tagName) {\n    return tagName.indexOf('-') > 0;\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  const _sanitizeAttributes = function (currentNode) {\n    let attr;\n    let value;\n    let lcName;\n    let l;\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    const { attributes } = currentNode;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n    };\n    l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      attr = attributes[l];\n      const { name, namespaceURI } = attr;\n      value = name === 'value' ? attr.value : stringTrim(attr.value);\n      lcName = transformCaseFunc(name);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        value = stringReplace(value, MUSTACHE_EXPR, ' ');\n        value = stringReplace(value, ERB_EXPR, ' ');\n        value = stringReplace(value, TMPLIT_EXPR, ' ');\n      }\n\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n\n      /* Handle attributes that require Trusted Types */\n      if (\n        trustedTypesPolicy &&\n        typeof trustedTypes === 'object' &&\n        typeof trustedTypes.getAttributeType === 'function'\n      ) {\n        if (namespaceURI) {\n          /* Namespaces are not yet supported, see https://bugs.chromium.org/p/chromium/issues/detail?id=1305293 */\n        } else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              value = trustedTypesPolicy.createHTML(value);\n              break;\n            case 'TrustedScriptURL':\n              value = trustedTypesPolicy.createScriptURL(value);\n              break;\n            default:\n              break;\n          }\n        }\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        arrayPop(DOMPurify.removed);\n      } catch (_) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function (fragment) {\n    let shadowNode;\n    const shadowIterator = _createIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while ((shadowNode = shadowIterator.nextNode())) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} configuration object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg = {}) {\n    let body;\n    let importedNode;\n    let currentNode;\n    let oldNode;\n    let returnNode;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      // eslint-disable-next-line no-negated-condition\n      if (typeof dirty.toString !== 'function') {\n        throw typeErrorCreate('toString is not a function');\n      } else {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      }\n    }\n\n    /* Check we can run. Otherwise fall back or ignore */\n    if (!DOMPurify.isSupported) {\n      if (\n        typeof window.toStaticHTML === 'object' ||\n        typeof window.toStaticHTML === 'function'\n      ) {\n        if (typeof dirty === 'string') {\n          return window.toStaticHTML(dirty);\n        }\n\n        if (_isNode(dirty)) {\n          return window.toStaticHTML(dirty.outerHTML);\n        }\n      }\n\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate(\n            'root node is forbidden and cannot be sanitized in-place'\n          );\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (\n        !RETURN_DOM &&\n        !SAFE_FOR_TEMPLATES &&\n        !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1\n      ) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n          ? trustedTypesPolicy.createHTML(dirty)\n          : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    const nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while ((currentNode = nodeIterator.nextNode())) {\n      /* Fix IE's strange behavior with manipulated textNodes #89 */\n      if (currentNode.nodeType === 3 && currentNode === oldNode) {\n        continue;\n      }\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n\n      oldNode = currentNode;\n    }\n\n    oldNode = null;\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (ALLOWED_ATTR.shadowroot) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Serialize doctype if allowed */\n    if (\n      WHOLE_DOCUMENT &&\n      ALLOWED_TAGS['!doctype'] &&\n      body.ownerDocument &&\n      body.ownerDocument.doctype &&\n      body.ownerDocument.doctype.name &&\n      regExpTest(EXPRESSIONS.DOCTYPE_NAME, body.ownerDocument.doctype.name)\n    ) {\n      serializedHTML =\n        '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, ERB_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, TMPLIT_EXPR, ' ');\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML(serializedHTML)\n      : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function (cfg) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {string} tag Tag name of containing element.\n   * @param  {string} attr Attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   * @return {Function} removed(popped) hook\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      return arrayPop(hooks[entryPoint]);\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   *\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nexport default createDOMPurify();\n","\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toString = Object.prototype.toString;\n\nmodule.exports = function forEach (obj, fn, ctx) {\n    if (toString.call(fn) !== '[object Function]') {\n        throw new TypeError('iterator must be a function');\n    }\n    var l = obj.length;\n    if (l === +l) {\n        for (var i = 0; i < l; i++) {\n            fn.call(ctx, obj[i], i, obj);\n        }\n    } else {\n        for (var k in obj) {\n            if (hasOwn.call(obj, k)) {\n                fn.call(ctx, obj[k], k, obj);\n            }\n        }\n    }\n};\n\n","module.exports = window.DOMPurify || (window.DOMPurify = require('dompurify').default || require('dompurify'));","'use strict';\n\nvar each = require('foreach');\nmodule.exports = api;\n\n\n/**\n * Convenience wrapper around the api.\n * Calls `.get` when called with an `object` and a `pointer`.\n * Calls `.set` when also called with `value`.\n * If only supplied `object`, returns a partially applied function, mapped to the object.\n *\n * @param {Object} obj\n * @param {String|Array} pointer\n * @param value\n * @returns {*}\n */\n\nfunction api (obj, pointer, value) {\n    // .set()\n    if (arguments.length === 3) {\n        return api.set(obj, pointer, value);\n    }\n    // .get()\n    if (arguments.length === 2) {\n        return api.get(obj, pointer);\n    }\n    // Return a partially applied function on `obj`.\n    var wrapped = api.bind(api, obj);\n\n    // Support for oo style\n    for (var name in api) {\n        if (api.hasOwnProperty(name)) {\n            wrapped[name] = api[name].bind(wrapped, obj);\n        }\n    }\n    return wrapped;\n}\n\n\n/**\n * Lookup a json pointer in an object\n *\n * @param {Object} obj\n * @param {String|Array} pointer\n * @returns {*}\n */\napi.get = function get (obj, pointer) {\n    var refTokens = Array.isArray(pointer) ? pointer : api.parse(pointer);\n\n    for (var i = 0; i < refTokens.length; ++i) {\n        var tok = refTokens[i];\n        if (!(typeof obj == 'object' && tok in obj)) {\n            throw new Error('Invalid reference token: ' + tok);\n        }\n        obj = obj[tok];\n    }\n    return obj;\n};\n\n/**\n * Sets a value on an object\n *\n * @param {Object} obj\n * @param {String|Array} pointer\n * @param value\n */\napi.set = function set (obj, pointer, value) {\n    var refTokens = Array.isArray(pointer) ? pointer : api.parse(pointer),\n      nextTok = refTokens[0];\n\n    if (refTokens.length === 0) {\n      throw Error('Can not set the root object');\n    }\n\n    for (var i = 0; i < refTokens.length - 1; ++i) {\n        var tok = refTokens[i];\n        if (typeof tok !== 'string' && typeof tok !== 'number') {\n          tok = String(tok)\n        }\n        if (tok === \"__proto__\" || tok === \"constructor\" || tok === \"prototype\") {\n            continue\n        }\n        if (tok === '-' && Array.isArray(obj)) {\n          tok = obj.length;\n        }\n        nextTok = refTokens[i + 1];\n\n        if (!(tok in obj)) {\n            if (nextTok.match(/^(\\d+|-)$/)) {\n                obj[tok] = [];\n            } else {\n                obj[tok] = {};\n            }\n        }\n        obj = obj[tok];\n    }\n    if (nextTok === '-' && Array.isArray(obj)) {\n      nextTok = obj.length;\n    }\n    obj[nextTok] = value;\n    return this;\n};\n\n/**\n * Removes an attribute\n *\n * @param {Object} obj\n * @param {String|Array} pointer\n */\napi.remove = function (obj, pointer) {\n    var refTokens = Array.isArray(pointer) ? pointer : api.parse(pointer);\n    var finalToken = refTokens[refTokens.length -1];\n    if (finalToken === undefined) {\n        throw new Error('Invalid JSON pointer for remove: \"' + pointer + '\"');\n    }\n\n    var parent = api.get(obj, refTokens.slice(0, -1));\n    if (Array.isArray(parent)) {\n      var index = +finalToken;\n      if (finalToken === '' && isNaN(index)) {\n        throw new Error('Invalid array index: \"' + finalToken + '\"');\n      }\n\n      Array.prototype.splice.call(parent, index, 1);\n    } else {\n      delete parent[finalToken];\n    }\n};\n\n/**\n * Returns a (pointer -> value) dictionary for an object\n *\n * @param obj\n * @param {function} descend\n * @returns {}\n */\napi.dict = function dict (obj, descend) {\n    var results = {};\n    api.walk(obj, function (value, pointer) {\n        results[pointer] = value;\n    }, descend);\n    return results;\n};\n\n/**\n * Iterates over an object\n * Iterator: function (value, pointer) {}\n *\n * @param obj\n * @param {function} iterator\n * @param {function} descend\n */\napi.walk = function walk (obj, iterator, descend) {\n    var refTokens = [];\n\n    descend = descend || function (value) {\n        var type = Object.prototype.toString.call(value);\n        return type === '[object Object]' || type === '[object Array]';\n    };\n\n    (function next (cur) {\n        each(cur, function (value, key) {\n            refTokens.push(String(key));\n            if (descend(value)) {\n                next(value);\n            } else {\n                iterator(value, api.compile(refTokens));\n            }\n            refTokens.pop();\n        });\n    }(obj));\n};\n\n/**\n * Tests if an object has a value for a json pointer\n *\n * @param obj\n * @param pointer\n * @returns {boolean}\n */\napi.has = function has (obj, pointer) {\n    try {\n        api.get(obj, pointer);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n\n/**\n * Escapes a reference token\n *\n * @param str\n * @returns {string}\n */\napi.escape = function escape (str) {\n    return str.toString().replace(/~/g, '~0').replace(/\\//g, '~1');\n};\n\n/**\n * Unescapes a reference token\n *\n * @param str\n * @returns {string}\n */\napi.unescape = function unescape (str) {\n    return str.replace(/~1/g, '/').replace(/~0/g, '~');\n};\n\n/**\n * Converts a json pointer into a array of reference tokens\n *\n * @param pointer\n * @returns {Array}\n */\napi.parse = function parse (pointer) {\n    if (pointer === '') { return []; }\n    if (pointer.charAt(0) !== '/') { throw new Error('Invalid JSON pointer: ' + pointer); }\n    return pointer.substring(1).split(/\\//).map(api.unescape);\n};\n\n/**\n * Builds a json pointer from a array of reference tokens\n *\n * @param refTokens\n * @returns {string}\n */\napi.compile = function compile (refTokens) {\n    if (refTokens.length === 0) { return ''; }\n    return '/' + refTokens.map(api.escape).join('/');\n};\n"],"names":["SpecificationHelpers","schema","constructor","name","version","_json","asyncapi","JSON","parse","e","AsyncAPIDocumentModel","tags","tagsToCheck","undefined","Array","isArray","some","tag","t","spec","Map","Object","entries","channels","forEach","_a","channel","publish","hasTags","set","subscribe","from","values","servers","_","server","CONTENT_TYPES_SITE","EXTERAL_DOCUMENTATION_TEXT","PUBLISH_LABEL_DEFAULT_TEXT","SUBSCRIBE_LABEL_DEFAULT_TEXT","ERROR_TEXT","defaultConfig","schemaID","show","sidebar","info","operations","messages","schemas","errors","expand","messageExamples","showServers","showOperations","publishLabel","subscribeLabel","extractSize","entry","boxProp","sizeType","contentRect","useResizeObserver","opts","onResize","onResizeRef","useRef","current","round","Math","resizeObserverRef","_useState","useState","width","height","size","setSize","didUnmount","useEffect","previous","refCallback","subscriber","refOrElement","callbackRefElement","lastReportRef","cleanupRef","callSubscriber","useCallback","element","HTMLElement","reporter","useResolvedElement","box","instance","ResizeObserver","reportedWidth","reportedHeight","newWidth","newHeight","newSize","observe","unobserve","ref","useMemo","HiChevronRight","props","React","stroke","fill","strokeWidth","viewBox","xmlns","fillRule","d","clipRule","CollapseButton","chevronProps","_b","expanded","children","rest","className","type","SpecificationContext","useSpec","useContext","ConfigContext","createContext","useConfig","SidebarContext","setShowSidebar","value","Sidebar","showSidebar","logo","ext","components","hasComponents","hasOperations","hasChannels","hasPublish","hasSubscribe","messagesList","keys","length","href","onClick","map","messageName","message","key","uid","schemasList","schemaName","Provider","prev","y","src","alt","title","hasServers","ServersList","OperationsList","filterObjectsByTags","objects","taggedObjects","Set","tagged","taggedForTag","obj","object","includes","push","add","untagged","has","specTagNames","sidebarConfig","serverName","ServerItem","serverTagNamesSet_1","serializedServers","data","taggedServers","ItemsByTagItem","tagName","operationTagNames","channelName","operation","kind","summary","OperationItem","operationTagNamesSet_1","taggedOperations","config","isPublish","label","setExpand","Href","target","rel","getDefaults","async","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartypants","tokenizer","walkTokens","xhtml","defaults","escapeTest","escapeReplace","RegExp","source","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","html","encode","test","replace","unescapeTest","unescape","n","toLowerCase","charAt","String","fromCharCode","parseInt","substring","caret","edit","regex","opt","val","getRegex","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","prot","decodeURIComponent","indexOf","baseUrls","justDomain","rtrim","relativeBase","protocol","domain","resolveUrl","encodeURI","noopTest","exec","merge","i","arguments","prototype","hasOwnProperty","call","splitCells","tableRow","count","cells","match","offset","str","escaped","curr","split","trim","shift","pop","splice","c","invert","l","suffLen","currChar","slice","checkSanitizeDeprecation","console","warn","repeatString","pattern","result","outputLink","cap","link","raw","lexer","text","state","inLink","token","tokens","inlineTokens","Tokenizer","options","this","space","rules","block","newline","code","codeBlockStyle","fences","matchIndentToCode","indentToCode","node","matchIndentInNode","indentInNode","join","indentCodeCompensation","lang","inline","_escapes","heading","trimmed","depth","hr","blockquote","top","blockTokens","list","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","start","loose","items","itemRegex","repeat","trimLeft","search","nextBulletRegex","min","hrRegex","fencesBeginRegex","headingBeginRegex","task","checked","trimRight","spacers","filter","hasMultipleLineBreaks","pre","def","table","item","header","align","rows","j","k","row","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","b","level","findClosingBracket","linkLen","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","index","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","out","charCodeAt","random","toString","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","Lexer","create","inlineQueue","static","lex","next","lastToken","cutSrc","lastParagraphClipped","leading","tabs","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","getStartIndex","errMsg","error","Error","keepPrevChar","lastIndexOf","startInline","Renderer","infostring","quote","slugger","slug","body","listitem","checkbox","tablerow","content","tablecell","flags","image","TextRenderer","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Parser","textRenderer","parseInline","l2","l3","cell","itemBody","ret","renderers","parser","unshift","marked","callback","done","err","pending","setTimeout","onError","Promise","all","then","catch","setOptions","newDefaults","use","childTokens","args","pack","prevRenderer","apply","prop","prevTokenizer","concat","lexInline","hljs","json","yaml","bash","markedOptions","language","Markdown","dangerouslySetInnerHTML","__html","Tag","description","externalDocs","Tags","Info","specId","id","license","termsOfService","defaultContentType","contact","showInfoList","email","hasDescription","ServerHelpers","securitySchema","securityProtocol","saslMechanism","Security","renderedSecurities","security","_c","_d","securitySchemes","securities","requirement","requirements","requiredScopes","SecurityItem","Boolean","s","idx","SchemaCustomTypes","renderedKafkaSecurity","in","scheme","bearerFormat","openIdConnectUrl","collectSecuritySchemas","getKafkaSecurity","flows","renderedFlows","flowName","flow","authorizationUrl","tokenUrl","refreshUrl","scopes","scopeName","scopeDesc","securityType","jsonSchemaTypes","jsonSchemaKeywords","maxLength","minLength","contentMediaType","contentEncoding","multipleOf","maximum","exclusiveMaximum","minimum","exclusiveMinimum","maxItems","minItems","uniqueItems","contains","additionalItems","maxProperties","minProperties","required","properties","patternProperties","propertyNames","dependencies","additionalProperties","SchemaHelpers","UNKNOWN","isBooleanSchema","ANY","NEVER","not","inferType","toType","combinedType","toCombinedType","strict","typeOf","stringify","constraints","numberRange","humanizeNumberRangeConstraint","multipleOfConstraint","humanizeMultipleOfConstraint","stringRange","humanizeRangeConstraint","hasUniqueItems","arrayRange","objectRange","oneOf","anyOf","allOf","if","else","customExtensions","getCustomExtensions","urlVariables","reduce","variableName","variable","assign","extRenderType","extRenderAdditionalInfo","SchemaClass","parameters","paramaterName","parameter","parameterSchema","_this","extParameterLocation","location","jsonFieldToSchema","extName","startsWith","propertyName","dependentRequired","_i","array","records","propSchema","propertySchema","isCircular","toItemsType","toSchemaType","types","additionalType","constValue","const","enumValue","enum","inferredType","schemaKeys","RESTRICTED_ANY","exclusiveMin","max","exclusiveMax","hasExclusiveMin","hasMin","hasExclusiveMax","hasMax","strigifiedMultipleOf","extRawValue","isJSONSchema","v","Extensions","jsonToSchema","Schema","onlyTitle","SchemaContext","reverse","deepExpanded","isPatternProperty","isProperty","_e","_f","propExpanded","_g","setExpanded","deepExpand","setDeepExpand","dependentSchemas","getDependentSchemas","humanizeConstraints","renderType","rawValue","parameterLocation","isExpandable","schemaType","schemaItems","circularSchema","styledSchemaName","renderedSchemaName","deprecated","writeOnly","readOnly","prettifyValue","format","default","examples","SchemaProperties","SchemaItems","AdditionalProperties","AdditionalItems","circularProps","property","getDependentRequired","Bindings","bindings","renderedBindings","bindingName","binding","CommonHelpers","Server","serverVariablesToSchema","variables","protocolVersion","getIdentifier","hasBindings","Servers","JSONSnippet","snippet","pad","number","ensureMinLength","sample","trunc","mergeDeep","isObject","pVal","oVal","getResultForCircular","popSchemaStack","seenSchemasStack","context","schemaKeywordTypes","keywords","keyword","$refCache","inferExample","example","tryInferExample","traverse","maxSampleDepth","$ref","referenced","JsonPointer","into","res","subSamples","subSchema","quiet","lastSample","allOfSample","traverseOneOrAnyOf","ifSchema","sampler","_samplers","selectedSubSchema","inferred","localExample","subSchemaExample","mergedExample","sampleNumber","floor","passwordSymbols","commonDateTimeSample","omitTime","omitDate","date","milliseconds","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","toRFCDateTime","Date","defaultSample","stringFormats","_min","_max","a","hash","hashCode","uuid","r","skipReadOnly","_registerSampler","arrayLength","prefixItems","itemSchema","itemNumber","requiredKeyDict","dict","skipNonRequired","skipWriteOnly","PayloadType","MessageHelpers","sanitizeExample","msg","payload","flatMap","headers","MessageExample","Example","getPayloadExamples","getHeadersExamples","generateExample","Message","showExamples","messageId","correlationId","contentType","Operation","PUBLISH","parametersToSchema","OperationInfo","hasMultipleMessages","operationSummary","operationId","Operations","operationsList","SUBSCRIBE","Messages","SchemaComponent","Schemas","validationErrors","singleError","startLine","observerClassName","setObserverClassName","requestAnimationFrame","possibleClassName","configShow","_super","parsedSpec","retrieveParsedSpec","__extends","AsyncApiComponent","updateState","prevProps","oldSchema","newSchema","propError","stateError","concatenatedConfig","AsyncApiLayout","setState","Component","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","Reflect","construct","fun","thisValue","x","Func","arrayForEach","unapply","arrayPop","arrayPush","stringToLowerCase","stringToString","stringMatch","stringReplace","stringIndexOf","stringTrim","regExpTest","typeErrorCreate","unconstruct","TypeError","func","thisArg","addToSet","transformCaseFunc","lcElement","clone","newObject","lookupGetter","desc","get","fallbackValue","svg","svgFilters","svgDisallowed","mathMl","mathMlDisallowed","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","getGlobal","window","_createTrustedTypesPolicy","trustedTypes","document","createPolicy","suffix","ATTR_NAME","currentScript","hasAttribute","getAttribute","policyName","createHTML","createScriptURL","scriptUrl","createDOMPurify","DOMPurify","root","VERSION","removed","nodeType","isSupported","originalDocument","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","getNextSibling","getChildNodes","getParentNode","template","createElement","ownerDocument","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","documentMode","hooks","createHTMLDocument","PARSER_MEDIA_TYPE","EXPRESSIONS","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","ATTRS","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","configurable","enumerable","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","formElement","isRegexOrFunction","testValue","Function","_parseConfig","cfg","_typeof","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","tbody","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","namespaceURI","parentTagName","_forceRemove","parentNode","removeChild","outerHTML","remove","_removeAttribute","attribute","getAttributeNode","removeAttribute","setAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","createDocument","innerHTML","insertBefore","createTextNode","childNodes","_createIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","_isClobbered","elm","nodeName","textContent","attributes","hasChildNodes","_isNode","_executeHook","entryPoint","currentNode","hook","_sanitizeElements","allowedTags","firstElementChild","_basicCustomElementTest","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","attr","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","forceKeepAttr","getAttributeType","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","importedNode","oldNode","returnNode","toStaticHTML","appendChild","firstChild","nodeIterator","shadowroot","serializedHTML","doctype","setConfig","clearConfig","isValidAttribute","addHook","hookFunction","removeHook","removeHooks","removeAllHooks","hasOwn","module","exports","fn","ctx","require","each","api","pointer","wrapped","bind","refTokens","tok","nextTok","finalToken","isNaN","descend","results","walk","iterator","cur","compile"],"sourceRoot":""}